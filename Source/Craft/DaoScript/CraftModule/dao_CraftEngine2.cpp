#include"dao_CraftEngine.h"

#ifdef __cplusplus
extern "C"{
#endif

/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Matrix4_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Matrix4_GETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m30_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m30_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m31_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m31_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m32_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m32_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_GETF_m33_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SETF_m33_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Matrix4_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Matrix4_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Matrix4_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SetTranslation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_ToMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_RotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Translation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Rotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Scale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Transpose( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Decompose( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix4_BulkTranspose( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Matrix4_Meths[] = 
{
  { dao_Craft_Matrix4_GETF_m00_, ".m00_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m00_, ".m00_=( self: Craft::Matrix4, m00_: float )" },
  { dao_Craft_Matrix4_GETF_m01_, ".m01_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m01_, ".m01_=( self: Craft::Matrix4, m01_: float )" },
  { dao_Craft_Matrix4_GETF_m02_, ".m02_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m02_, ".m02_=( self: Craft::Matrix4, m02_: float )" },
  { dao_Craft_Matrix4_GETF_m03_, ".m03_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m03_, ".m03_=( self: Craft::Matrix4, m03_: float )" },
  { dao_Craft_Matrix4_GETF_m10_, ".m10_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m10_, ".m10_=( self: Craft::Matrix4, m10_: float )" },
  { dao_Craft_Matrix4_GETF_m11_, ".m11_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m11_, ".m11_=( self: Craft::Matrix4, m11_: float )" },
  { dao_Craft_Matrix4_GETF_m12_, ".m12_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m12_, ".m12_=( self: Craft::Matrix4, m12_: float )" },
  { dao_Craft_Matrix4_GETF_m13_, ".m13_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m13_, ".m13_=( self: Craft::Matrix4, m13_: float )" },
  { dao_Craft_Matrix4_GETF_m20_, ".m20_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m20_, ".m20_=( self: Craft::Matrix4, m20_: float )" },
  { dao_Craft_Matrix4_GETF_m21_, ".m21_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m21_, ".m21_=( self: Craft::Matrix4, m21_: float )" },
  { dao_Craft_Matrix4_GETF_m22_, ".m22_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m22_, ".m22_=( self: Craft::Matrix4, m22_: float )" },
  { dao_Craft_Matrix4_GETF_m23_, ".m23_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m23_, ".m23_=( self: Craft::Matrix4, m23_: float )" },
  { dao_Craft_Matrix4_GETF_m30_, ".m30_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m30_, ".m30_=( self: Craft::Matrix4, m30_: float )" },
  { dao_Craft_Matrix4_GETF_m31_, ".m31_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m31_, ".m31_=( self: Craft::Matrix4, m31_: float )" },
  { dao_Craft_Matrix4_GETF_m32_, ".m32_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m32_, ".m32_=( self: Craft::Matrix4, m32_: float )" },
  { dao_Craft_Matrix4_GETF_m33_, ".m33_ ( self: Craft::Matrix4 )=>float" },
  { dao_Craft_Matrix4_SETF_m33_, ".m33_=( self: Craft::Matrix4, m33_: float )" },
  { dao_Craft_Matrix4_Matrix4_dao_5, "Matrix4(  )=>Craft::Matrix4" },
  { dao_Craft_Matrix4_Matrix4_dao_6, "Matrix4( matrix: Craft::Matrix3 )=>Craft::Matrix4" },
  { dao_Craft_Matrix4_Matrix4_dao_7, "Matrix4( v00: float, v01: float, v02: float, v03: float, v10: float, v11: float, v12: float, v13: float, v20: float, v21: float, v22: float, v23: float, v30: float, v31: float, v32: float, v33: float )=>Craft::Matrix4" },
  { dao_Craft_Matrix4_SetTranslation, "SetTranslation( self: Craft::Matrix4, translation: Craft::Vector3 )" },
  { dao_Craft_Matrix4_SetRotation, "SetRotation( self: Craft::Matrix4, rotation: Craft::Matrix3 )" },
  { dao_Craft_Matrix4_SetScale, "SetScale( self: Craft::Matrix4, scale: Craft::Vector3 )" },
  { dao_Craft_Matrix4_SetScale_dao_2, "SetScale( self: Craft::Matrix4, scale: float )" },
  { dao_Craft_Matrix4_ToMatrix3, "ToMatrix3( self: Craft::Matrix4 )=>Craft::Matrix3" },
  { dao_Craft_Matrix4_RotationMatrix, "RotationMatrix( self: Craft::Matrix4 )=>Craft::Matrix3" },
  { dao_Craft_Matrix4_Translation, "Translation( self: Craft::Matrix4 )=>Craft::Vector3" },
  { dao_Craft_Matrix4_Rotation, "Rotation( self: Craft::Matrix4 )=>Craft::Quaternion" },
  { dao_Craft_Matrix4_Scale, "Scale( self: Craft::Matrix4 )=>Craft::Vector3" },
  { dao_Craft_Matrix4_Transpose, "Transpose( self: Craft::Matrix4 )=>Craft::Matrix4" },
  { dao_Craft_Matrix4_Equals, "Equals( self: Craft::Matrix4, rhs: Craft::Matrix4 )=>bool" },
  { dao_Craft_Matrix4_Decompose, "Decompose( self: Craft::Matrix4, translation: Craft::Vector3, rotation: Craft::Quaternion, scale: Craft::Vector3 )" },
  { dao_Craft_Matrix4_Inverse, "Inverse( self: Craft::Matrix4 )=>Craft::Matrix4" },
  { dao_Craft_Matrix4_ToString, "ToString( self: Craft::Matrix4 )=>string" },
  { dao_Craft_Matrix4_BulkTranspose, "BulkTranspose( dest: float, src: array<float>, count: int )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_Matrix4_Delete( DaoValue *self )
{
	delete (Craft::Matrix4*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Matrix4_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix4_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Matrix4_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Matrix4_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Matrix4_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix4_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Matrix4_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix4_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Matrix4_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Matrix4* src = (Craft::Matrix4*) DaoValue_TryCastCdataTC( self, dao_Craft_Matrix4_Core );
	Craft::Matrix4* dest;
	if( target ){
		dest = (Craft::Matrix4*) DaoValue_TryCastCdataTC( target, dao_Craft_Matrix4_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Matrix4( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Matrix4_Core, dest );
}

static DaoTypeCore Craft_Matrix4_Core = 
{
  "Craft::Matrix4",
  sizeof(Craft::Matrix4),
  { NULL },
  { NULL },
  dao_Craft_Matrix4_Nums,
  dao_Craft_Matrix4_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  dao_Craft_Matrix4_CheckGetItem,     dao_Craft_Matrix4_DoGetItem,
  dao_Craft_Matrix4_CheckSetItem,     dao_Craft_Matrix4_DoSetItem,
  dao_Craft_Matrix4_CheckUnary,       dao_Craft_Matrix4_DoUnary,
  dao_Craft_Matrix4_CheckBinary,      dao_Craft_Matrix4_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Matrix4_Copy,
  Dao_Craft_Matrix4_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Matrix4_Core = & Craft_Matrix4_Core;
static void dao_Craft_Matrix4_GETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m00_ );
}
static void dao_Craft_Matrix4_SETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m00_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m01_ );
}
static void dao_Craft_Matrix4_SETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m01_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m02_ );
}
static void dao_Craft_Matrix4_SETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m02_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m03_ );
}
static void dao_Craft_Matrix4_SETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m03_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m10_ );
}
static void dao_Craft_Matrix4_SETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m10_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m11_ );
}
static void dao_Craft_Matrix4_SETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m11_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m12_ );
}
static void dao_Craft_Matrix4_SETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m12_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m13_ );
}
static void dao_Craft_Matrix4_SETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m13_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m20_ );
}
static void dao_Craft_Matrix4_SETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m20_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m21_ );
}
static void dao_Craft_Matrix4_SETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m21_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m22_ );
}
static void dao_Craft_Matrix4_SETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m22_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m23_ );
}
static void dao_Craft_Matrix4_SETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m23_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m30_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m30_ );
}
static void dao_Craft_Matrix4_SETF_m30_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m30_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m31_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m31_ );
}
static void dao_Craft_Matrix4_SETF_m31_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m31_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m32_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m32_ );
}
static void dao_Craft_Matrix4_SETF_m32_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m32_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix4_GETF_m33_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m33_ );
}
static void dao_Craft_Matrix4_SETF_m33_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4 *self = (Craft::Matrix4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix4_Core);
  self->m33_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Matrix4_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Matrix4 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Matrix4_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* matrix = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Matrix4 _self(*matrix);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Matrix4_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float v00 = (float) DaoValue_TryGetFloat( _p[0] );
  float v01 = (float) DaoValue_TryGetFloat( _p[1] );
  float v02 = (float) DaoValue_TryGetFloat( _p[2] );
  float v03 = (float) DaoValue_TryGetFloat( _p[3] );
  float v10 = (float) DaoValue_TryGetFloat( _p[4] );
  float v11 = (float) DaoValue_TryGetFloat( _p[5] );
  float v12 = (float) DaoValue_TryGetFloat( _p[6] );
  float v13 = (float) DaoValue_TryGetFloat( _p[7] );
  float v20 = (float) DaoValue_TryGetFloat( _p[8] );
  float v21 = (float) DaoValue_TryGetFloat( _p[9] );
  float v22 = (float) DaoValue_TryGetFloat( _p[10] );
  float v23 = (float) DaoValue_TryGetFloat( _p[11] );
  float v30 = (float) DaoValue_TryGetFloat( _p[12] );
  float v31 = (float) DaoValue_TryGetFloat( _p[13] );
  float v32 = (float) DaoValue_TryGetFloat( _p[14] );
  float v33 = (float) DaoValue_TryGetFloat( _p[15] );

  Craft::Matrix4 _self(v00, v01, v02, v03, v10, v11, v12, v13, v20, v21, v22, v23, v30, v31, v32, v33);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_SetTranslation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );
  Craft::Vector3* translation = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetTranslation( *translation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );
  Craft::Matrix3* rotation = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->SetRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetScale( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetScale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_ToMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Matrix3 _ToMatrix3 = self->ToMatrix3(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _ToMatrix3 ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_RotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Matrix3 _RotationMatrix = self->RotationMatrix(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _RotationMatrix ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Translation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Vector3 _Translation = self->Translation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Translation ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Rotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Quaternion _Rotation = self->Rotation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Rotation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Scale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Vector3 _Scale = self->Scale(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Scale ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Transpose( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Matrix4 _Transpose = self->Transpose(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix4( _Transpose ), dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );
  Craft::Matrix4* rhs = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix4_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Decompose( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );
  Craft::Vector3* translation = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->Decompose( *translation, *rotation, *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Matrix4 _Inverse = self->Inverse(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix4( _Inverse ), dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* self = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix4_BulkTranspose( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float dest = (float) DaoValue_TryGetFloat( _p[0] );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  const float* src = (const float*) DaoArray_ToFloat32( (DaoArray*)_p[1] );

  Craft::Matrix4::BulkTranspose( &dest, src, count );
  DaoArray_FromFloat32( (DaoArray*)_p[1] );
  DaoProcess_PutFloat( _proc, (dao_float) dest );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Matrix3_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Matrix3_GETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_GETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Matrix3_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Matrix3_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Scale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Transpose( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Scaled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3_BulkTranspose( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Matrix3_Meths[] = 
{
  { dao_Craft_Matrix3_GETF_m00_, ".m00_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m00_, ".m00_=( self: Craft::Matrix3, m00_: float )" },
  { dao_Craft_Matrix3_GETF_m01_, ".m01_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m01_, ".m01_=( self: Craft::Matrix3, m01_: float )" },
  { dao_Craft_Matrix3_GETF_m02_, ".m02_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m02_, ".m02_=( self: Craft::Matrix3, m02_: float )" },
  { dao_Craft_Matrix3_GETF_m10_, ".m10_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m10_, ".m10_=( self: Craft::Matrix3, m10_: float )" },
  { dao_Craft_Matrix3_GETF_m11_, ".m11_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m11_, ".m11_=( self: Craft::Matrix3, m11_: float )" },
  { dao_Craft_Matrix3_GETF_m12_, ".m12_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m12_, ".m12_=( self: Craft::Matrix3, m12_: float )" },
  { dao_Craft_Matrix3_GETF_m20_, ".m20_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m20_, ".m20_=( self: Craft::Matrix3, m20_: float )" },
  { dao_Craft_Matrix3_GETF_m21_, ".m21_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m21_, ".m21_=( self: Craft::Matrix3, m21_: float )" },
  { dao_Craft_Matrix3_GETF_m22_, ".m22_ ( self: Craft::Matrix3 )=>float" },
  { dao_Craft_Matrix3_SETF_m22_, ".m22_=( self: Craft::Matrix3, m22_: float )" },
  { dao_Craft_Matrix3_Matrix3_dao_4, "Matrix3(  )=>Craft::Matrix3" },
  { dao_Craft_Matrix3_Matrix3_dao_5, "Matrix3( v00: float, v01: float, v02: float, v10: float, v11: float, v12: float, v20: float, v21: float, v22: float )=>Craft::Matrix3" },
  { dao_Craft_Matrix3_SetScale, "SetScale( self: Craft::Matrix3, scale: Craft::Vector3 )" },
  { dao_Craft_Matrix3_SetScale_dao_2, "SetScale( self: Craft::Matrix3, scale: float )" },
  { dao_Craft_Matrix3_Scale, "Scale( self: Craft::Matrix3 )=>Craft::Vector3" },
  { dao_Craft_Matrix3_Transpose, "Transpose( self: Craft::Matrix3 )=>Craft::Matrix3" },
  { dao_Craft_Matrix3_Scaled, "Scaled( self: Craft::Matrix3, scale: Craft::Vector3 )=>Craft::Matrix3" },
  { dao_Craft_Matrix3_Equals, "Equals( self: Craft::Matrix3, rhs: Craft::Matrix3 )=>bool" },
  { dao_Craft_Matrix3_Inverse, "Inverse( self: Craft::Matrix3 )=>Craft::Matrix3" },
  { dao_Craft_Matrix3_ToString, "ToString( self: Craft::Matrix3 )=>string" },
  { dao_Craft_Matrix3_BulkTranspose, "BulkTranspose( dest: float, src: array<float>, count: int )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_Matrix3_Delete( DaoValue *self )
{
	delete (Craft::Matrix3*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Matrix3_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix3_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Matrix3_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Matrix3_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Matrix3_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix3_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Matrix3_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix3_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Matrix3_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Matrix3* src = (Craft::Matrix3*) DaoValue_TryCastCdataTC( self, dao_Craft_Matrix3_Core );
	Craft::Matrix3* dest;
	if( target ){
		dest = (Craft::Matrix3*) DaoValue_TryCastCdataTC( target, dao_Craft_Matrix3_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Matrix3( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Matrix3_Core, dest );
}

static DaoTypeCore Craft_Matrix3_Core = 
{
  "Craft::Matrix3",
  sizeof(Craft::Matrix3),
  { NULL },
  { NULL },
  dao_Craft_Matrix3_Nums,
  dao_Craft_Matrix3_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  dao_Craft_Matrix3_CheckGetItem,     dao_Craft_Matrix3_DoGetItem,
  dao_Craft_Matrix3_CheckSetItem,     dao_Craft_Matrix3_DoSetItem,
  dao_Craft_Matrix3_CheckUnary,       dao_Craft_Matrix3_DoUnary,
  dao_Craft_Matrix3_CheckBinary,      dao_Craft_Matrix3_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Matrix3_Copy,
  Dao_Craft_Matrix3_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Matrix3_Core = & Craft_Matrix3_Core;
static void dao_Craft_Matrix3_GETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m00_ );
}
static void dao_Craft_Matrix3_SETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m00_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m01_ );
}
static void dao_Craft_Matrix3_SETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m01_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m02_ );
}
static void dao_Craft_Matrix3_SETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m02_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m10_ );
}
static void dao_Craft_Matrix3_SETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m10_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m11_ );
}
static void dao_Craft_Matrix3_SETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m11_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m12_ );
}
static void dao_Craft_Matrix3_SETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m12_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m20_ );
}
static void dao_Craft_Matrix3_SETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m20_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m21_ );
}
static void dao_Craft_Matrix3_SETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m21_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3_GETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m22_ );
}
static void dao_Craft_Matrix3_SETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3 *self = (Craft::Matrix3*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3_Core);
  self->m22_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Matrix3_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Matrix3 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Matrix3_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float v00 = (float) DaoValue_TryGetFloat( _p[0] );
  float v01 = (float) DaoValue_TryGetFloat( _p[1] );
  float v02 = (float) DaoValue_TryGetFloat( _p[2] );
  float v10 = (float) DaoValue_TryGetFloat( _p[3] );
  float v11 = (float) DaoValue_TryGetFloat( _p[4] );
  float v12 = (float) DaoValue_TryGetFloat( _p[5] );
  float v20 = (float) DaoValue_TryGetFloat( _p[6] );
  float v21 = (float) DaoValue_TryGetFloat( _p[7] );
  float v22 = (float) DaoValue_TryGetFloat( _p[8] );

  Craft::Matrix3 _self(v00, v01, v02, v10, v11, v12, v20, v21, v22);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetScale( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetScale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Scale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Vector3 _Scale = self->Scale(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Scale ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Transpose( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Matrix3 _Transpose = self->Transpose(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _Transpose ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Scaled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Matrix3 _Scaled = self->Scaled( *scale );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _Scaled ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );
  Craft::Matrix3* rhs = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Matrix3 _Inverse = self->Inverse(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _Inverse ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* self = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3_BulkTranspose( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float dest = (float) DaoValue_TryGetFloat( _p[0] );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  const float* src = (const float*) DaoArray_ToFloat32( (DaoArray*)_p[1] );

  Craft::Matrix3::BulkTranspose( &dest, src, count );
  DaoArray_FromFloat32( (DaoArray*)_p[1] );
  DaoProcess_PutFloat( _proc, (dao_float) dest );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Vector3_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Vector3_Vector3_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Vector3_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Vector3_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Vector3_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Vector3_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Normalize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Length( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_LengthSquared( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_AbsDotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_CrossProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Abs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Angle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_Normalized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector3_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Vector3_Meths[] = 
{
  { dao_Craft_Vector3_Vector3_dao_7, "Vector3(  )=>Craft::Vector3" },
  { dao_Craft_Vector3_Vector3_dao_8, "Vector3( vector: Craft::Vector2, z: float )=>Craft::Vector3" },
  { dao_Craft_Vector3_Vector3_dao_9, "Vector3( vector: Craft::Vector2 )=>Craft::Vector3" },
  { dao_Craft_Vector3_Vector3_dao_10, "Vector3( x: float, y: float, z: float )=>Craft::Vector3" },
  { dao_Craft_Vector3_Vector3_dao_11, "Vector3( x: float, y: float )=>Craft::Vector3" },
  { dao_Craft_Vector3_Normalize, "Normalize( self: Craft::Vector3 )" },
  { dao_Craft_Vector3_Length, "Length( self: Craft::Vector3 )=>float" },
  { dao_Craft_Vector3_LengthSquared, "LengthSquared( self: Craft::Vector3 )=>float" },
  { dao_Craft_Vector3_DotProduct, "DotProduct( self: Craft::Vector3, rhs: Craft::Vector3 )=>float" },
  { dao_Craft_Vector3_AbsDotProduct, "AbsDotProduct( self: Craft::Vector3, rhs: Craft::Vector3 )=>float" },
  { dao_Craft_Vector3_CrossProduct, "CrossProduct( self: Craft::Vector3, rhs: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Vector3_Abs, "Abs( self: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Vector3_Lerp, "Lerp( self: Craft::Vector3, rhs: Craft::Vector3, t: float )=>Craft::Vector3" },
  { dao_Craft_Vector3_Equals, "Equals( self: Craft::Vector3, rhs: Craft::Vector3 )=>bool" },
  { dao_Craft_Vector3_Angle, "Angle( self: Craft::Vector3, rhs: Craft::Vector3 )=>float" },
  { dao_Craft_Vector3_IsNaN, "IsNaN( self: Craft::Vector3 )=>bool" },
  { dao_Craft_Vector3_Normalized, "Normalized( self: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Vector3_ToString, "ToString( self: Craft::Vector3 )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Vector3_Delete( DaoValue *self )
{
	delete (Craft::Vector3*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Vector3_CheckGetField( DaoType *self, DaoString *field, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector3_DoGetField( DaoValue *self, DaoString *field, DaoProcess *proc );
extern int dao_Craft_Vector3_CheckSetField( DaoType *self, DaoString *field, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Vector3_DoSetField( DaoValue *self, DaoString *field, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Vector3_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector3_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Vector3_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Vector3_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Vector3_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector3_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Vector3_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector3_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Vector3_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Vector3* src = (Craft::Vector3*) DaoValue_TryCastCdataTC( self, dao_Craft_Vector3_Core );
	Craft::Vector3* dest;
	if( target ){
		dest = (Craft::Vector3*) DaoValue_TryCastCdataTC( target, dao_Craft_Vector3_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Vector3( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Vector3_Core, dest );
}

static DaoTypeCore Craft_Vector3_Core = 
{
  "Craft::Vector3",
  sizeof(Craft::Vector3),
  { NULL },
  { NULL },
  dao_Craft_Vector3_Nums,
  dao_Craft_Vector3_Meths,
  dao_Craft_Vector3_CheckGetField,    dao_Craft_Vector3_DoGetField,
  dao_Craft_Vector3_CheckSetField,    dao_Craft_Vector3_DoSetField,
  dao_Craft_Vector3_CheckGetItem,     dao_Craft_Vector3_DoGetItem,
  dao_Craft_Vector3_CheckSetItem,     dao_Craft_Vector3_DoSetItem,
  dao_Craft_Vector3_CheckUnary,       dao_Craft_Vector3_DoUnary,
  dao_Craft_Vector3_CheckBinary,      dao_Craft_Vector3_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Vector3_Copy,
  Dao_Craft_Vector3_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Vector3_Core = & Craft_Vector3_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Vector3_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Vector3 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Vector3_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* vector = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );
  float z = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Vector3 _self(*vector, z);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Vector3_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* vector = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  Craft::Vector3 _self(*vector);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Vector3_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float x = (float) DaoValue_TryGetFloat( _p[0] );
  float y = (float) DaoValue_TryGetFloat( _p[1] );
  float z = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Vector3 _self(x, y, z);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Vector3_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float x = (float) DaoValue_TryGetFloat( _p[0] );
  float y = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Vector3 _self(x, y);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Normalize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  self->Normalize(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Length( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  float _Length = self->Length(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Length );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_LengthSquared( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  float _LengthSquared = self->LengthSquared(  );
  DaoProcess_PutFloat( _proc, (dao_float) _LengthSquared );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* rhs = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _DotProduct = self->DotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _DotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_AbsDotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* rhs = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _AbsDotProduct = self->AbsDotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _AbsDotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_CrossProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* rhs = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _CrossProduct = self->CrossProduct( *rhs );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _CrossProduct ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Abs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  Craft::Vector3 _Abs = self->Abs(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Abs ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* rhs = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  float t = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Vector3 _Lerp = self->Lerp( *rhs, t );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Lerp ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* rhs = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Angle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* rhs = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _Angle = self->Angle( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _Angle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  bool _IsNaN = self->IsNaN(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsNaN );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_Normalized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  Craft::Vector3 _Normalized = self->Normalized(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Normalized ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector3_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* self = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Quaternion_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Quaternion_Quaternion_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_14( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_15( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_16( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_17( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_18( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Quaternion_dao_19( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_FromAngleAxis( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_FromEulerAngles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_FromRotationTo( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_FromAxes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_FromRotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Normalize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Normalized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_LengthSquared( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Conjugate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_EulerAngles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_YawAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_PitchAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_RollAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_RotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Slerp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_Nlerp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Quaternion_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Quaternion_Meths[] = 
{
  { dao_Craft_Quaternion_Quaternion_dao_11, "Quaternion(  )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_12, "Quaternion( w: float, x: float, y: float, z: float )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_13, "Quaternion( data: array<float> )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_14, "Quaternion( angle: float, axis: Craft::Vector3 )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_15, "Quaternion( angle: float )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_16, "Quaternion( x: float, y: float, z: float )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_17, "Quaternion( start: Craft::Vector3, end: Craft::Vector3 )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_18, "Quaternion( xAxis: Craft::Vector3, yAxis: Craft::Vector3, zAxis: Craft::Vector3 )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Quaternion_dao_19, "Quaternion( matrix: Craft::Matrix3 )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_FromAngleAxis, "FromAngleAxis( self: Craft::Quaternion, angle: float, axis: Craft::Vector3 )" },
  { dao_Craft_Quaternion_FromEulerAngles, "FromEulerAngles( self: Craft::Quaternion, x: float, y: float, z: float )" },
  { dao_Craft_Quaternion_FromRotationTo, "FromRotationTo( self: Craft::Quaternion, start: Craft::Vector3, end: Craft::Vector3 )" },
  { dao_Craft_Quaternion_FromAxes, "FromAxes( self: Craft::Quaternion, xAxis: Craft::Vector3, yAxis: Craft::Vector3, zAxis: Craft::Vector3 )" },
  { dao_Craft_Quaternion_FromRotationMatrix, "FromRotationMatrix( self: Craft::Quaternion, matrix: Craft::Matrix3 )" },
  { dao_Craft_Quaternion_Normalize, "Normalize( self: Craft::Quaternion )" },
  { dao_Craft_Quaternion_Normalized, "Normalized( self: Craft::Quaternion )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Inverse, "Inverse( self: Craft::Quaternion )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_LengthSquared, "LengthSquared( self: Craft::Quaternion )=>float" },
  { dao_Craft_Quaternion_DotProduct, "DotProduct( self: Craft::Quaternion, rhs: Craft::Quaternion )=>float" },
  { dao_Craft_Quaternion_Equals, "Equals( self: Craft::Quaternion, rhs: Craft::Quaternion )=>bool" },
  { dao_Craft_Quaternion_IsNaN, "IsNaN( self: Craft::Quaternion )=>bool" },
  { dao_Craft_Quaternion_Conjugate, "Conjugate( self: Craft::Quaternion )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_EulerAngles, "EulerAngles( self: Craft::Quaternion )=>Craft::Vector3" },
  { dao_Craft_Quaternion_YawAngle, "YawAngle( self: Craft::Quaternion )=>float" },
  { dao_Craft_Quaternion_PitchAngle, "PitchAngle( self: Craft::Quaternion )=>float" },
  { dao_Craft_Quaternion_RollAngle, "RollAngle( self: Craft::Quaternion )=>float" },
  { dao_Craft_Quaternion_RotationMatrix, "RotationMatrix( self: Craft::Quaternion )=>Craft::Matrix3" },
  { dao_Craft_Quaternion_Slerp, "Slerp( self: Craft::Quaternion, rhs: Craft::Quaternion, t: float )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_Nlerp, "Nlerp( self: Craft::Quaternion, rhs: Craft::Quaternion, t: float, shortestPath: bool =false )=>Craft::Quaternion" },
  { dao_Craft_Quaternion_ToString, "ToString( self: Craft::Quaternion )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Quaternion_Delete( DaoValue *self )
{
	delete (Craft::Quaternion*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Quaternion_CheckGetField( DaoType *self, DaoString *field, DaoRoutine *rout );
extern DaoValue* dao_Craft_Quaternion_DoGetField( DaoValue *self, DaoString *field, DaoProcess *proc );
extern int dao_Craft_Quaternion_CheckSetField( DaoType *self, DaoString *field, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Quaternion_DoSetField( DaoValue *self, DaoString *field, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Quaternion_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Quaternion_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Quaternion_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Quaternion_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Quaternion_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Quaternion_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Quaternion_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Quaternion_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Quaternion_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Quaternion* src = (Craft::Quaternion*) DaoValue_TryCastCdataTC( self, dao_Craft_Quaternion_Core );
	Craft::Quaternion* dest;
	if( target ){
		dest = (Craft::Quaternion*) DaoValue_TryCastCdataTC( target, dao_Craft_Quaternion_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Quaternion( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Quaternion_Core, dest );
}

static DaoTypeCore Craft_Quaternion_Core = 
{
  "Craft::Quaternion",
  sizeof(Craft::Quaternion),
  { NULL },
  { NULL },
  dao_Craft_Quaternion_Nums,
  dao_Craft_Quaternion_Meths,
  dao_Craft_Quaternion_CheckGetField,    dao_Craft_Quaternion_DoGetField,
  dao_Craft_Quaternion_CheckSetField,    dao_Craft_Quaternion_DoSetField,
  dao_Craft_Quaternion_CheckGetItem,     dao_Craft_Quaternion_DoGetItem,
  dao_Craft_Quaternion_CheckSetItem,     dao_Craft_Quaternion_DoSetItem,
  dao_Craft_Quaternion_CheckUnary,       dao_Craft_Quaternion_DoUnary,
  dao_Craft_Quaternion_CheckBinary,      dao_Craft_Quaternion_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Quaternion_Copy,
  Dao_Craft_Quaternion_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Quaternion_Core = & Craft_Quaternion_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Quaternion _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float w = (float) DaoValue_TryGetFloat( _p[0] );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );
  float z = (float) DaoValue_TryGetFloat( _p[3] );

  Craft::Quaternion _self(w, x, y, z);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const float* data = (const float*) DaoArray_ToFloat32( (DaoArray*)_p[0] );

  Craft::Quaternion _self(data);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
  DaoArray_FromFloat32( (DaoArray*)_p[0] );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_14( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float angle = (float) DaoValue_TryGetFloat( _p[0] );
  Craft::Vector3* axis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Quaternion _self(angle, *axis);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_15( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float angle = (float) DaoValue_TryGetFloat( _p[0] );

  Craft::Quaternion _self(angle);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_16( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float x = (float) DaoValue_TryGetFloat( _p[0] );
  float y = (float) DaoValue_TryGetFloat( _p[1] );
  float z = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Quaternion _self(x, y, z);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_17( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* start = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* end = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Quaternion _self(*start, *end);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_18( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* xAxis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* yAxis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* zAxis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  Craft::Quaternion _self(*xAxis, *yAxis, *zAxis);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Quaternion_dao_19( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* matrix = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Quaternion _self(*matrix);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_FromAngleAxis( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  float angle = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::Vector3* axis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->FromAngleAxis( angle, *axis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_FromEulerAngles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );
  float z = (float) DaoValue_TryGetFloat( _p[3] );

  self->FromEulerAngles( x, y, z );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_FromRotationTo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Vector3* start = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* end = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->FromRotationTo( *start, *end );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_FromAxes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Vector3* xAxis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* yAxis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* zAxis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->FromAxes( *xAxis, *yAxis, *zAxis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_FromRotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Matrix3* matrix = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->FromRotationMatrix( *matrix );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Normalize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  self->Normalize(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Normalized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::Quaternion _Normalized = self->Normalized(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Normalized ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::Quaternion _Inverse = self->Inverse(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Inverse ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_LengthSquared( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  float _LengthSquared = self->LengthSquared(  );
  DaoProcess_PutFloat( _proc, (dao_float) _LengthSquared );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Quaternion* rhs = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  float _DotProduct = self->DotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _DotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Quaternion* rhs = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  bool _IsNaN = self->IsNaN(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsNaN );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Conjugate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::Quaternion _Conjugate = self->Conjugate(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Conjugate ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_EulerAngles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::Vector3 _EulerAngles = self->EulerAngles(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _EulerAngles ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_YawAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  float _YawAngle = self->YawAngle(  );
  DaoProcess_PutFloat( _proc, (dao_float) _YawAngle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_PitchAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  float _PitchAngle = self->PitchAngle(  );
  DaoProcess_PutFloat( _proc, (dao_float) _PitchAngle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_RollAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  float _RollAngle = self->RollAngle(  );
  DaoProcess_PutFloat( _proc, (dao_float) _RollAngle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_RotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::Matrix3 _RotationMatrix = self->RotationMatrix(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _RotationMatrix ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Slerp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Quaternion* rhs = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );
  float t = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Quaternion _Slerp = self->Slerp( *rhs, t );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Slerp ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_Nlerp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );
  Craft::Quaternion* rhs = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );
  float t = (float) DaoValue_TryGetFloat( _p[2] );
  bool shortestPath = (bool) DaoValue_TryGetBoolean( _p[3] );

  Craft::Quaternion _Nlerp = self->Nlerp( *rhs, t, shortestPath );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Nlerp ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Quaternion_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* self = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Vector2_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Vector2_Vector2_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Vector2_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Normalize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Length( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_LengthSquared( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_AbsDotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Abs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_Normalized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector2_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Vector2_Meths[] = 
{
  { dao_Craft_Vector2_Vector2_dao_4, "Vector2(  )=>Craft::Vector2" },
  { dao_Craft_Vector2_Vector2_dao_5, "Vector2( x: float, y: float )=>Craft::Vector2" },
  { dao_Craft_Vector2_Normalize, "Normalize( self: Craft::Vector2 )" },
  { dao_Craft_Vector2_Length, "Length( self: Craft::Vector2 )=>float" },
  { dao_Craft_Vector2_LengthSquared, "LengthSquared( self: Craft::Vector2 )=>float" },
  { dao_Craft_Vector2_DotProduct, "DotProduct( self: Craft::Vector2, rhs: Craft::Vector2 )=>float" },
  { dao_Craft_Vector2_AbsDotProduct, "AbsDotProduct( self: Craft::Vector2, rhs: Craft::Vector2 )=>float" },
  { dao_Craft_Vector2_Abs, "Abs( self: Craft::Vector2 )=>Craft::Vector2" },
  { dao_Craft_Vector2_Lerp, "Lerp( self: Craft::Vector2, rhs: Craft::Vector2, t: float )=>Craft::Vector2" },
  { dao_Craft_Vector2_Equals, "Equals( self: Craft::Vector2, rhs: Craft::Vector2 )=>bool" },
  { dao_Craft_Vector2_IsNaN, "IsNaN( self: Craft::Vector2 )=>bool" },
  { dao_Craft_Vector2_Normalized, "Normalized( self: Craft::Vector2 )=>Craft::Vector2" },
  { dao_Craft_Vector2_ToString, "ToString( self: Craft::Vector2 )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Vector2_Delete( DaoValue *self )
{
	delete (Craft::Vector2*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Vector2_CheckGetField( DaoType *self, DaoString *field, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector2_DoGetField( DaoValue *self, DaoString *field, DaoProcess *proc );
extern int dao_Craft_Vector2_CheckSetField( DaoType *self, DaoString *field, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Vector2_DoSetField( DaoValue *self, DaoString *field, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Vector2_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector2_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Vector2_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Vector2_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Vector2_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector2_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Vector2_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector2_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Vector2_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Vector2* src = (Craft::Vector2*) DaoValue_TryCastCdataTC( self, dao_Craft_Vector2_Core );
	Craft::Vector2* dest;
	if( target ){
		dest = (Craft::Vector2*) DaoValue_TryCastCdataTC( target, dao_Craft_Vector2_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Vector2( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Vector2_Core, dest );
}

static DaoTypeCore Craft_Vector2_Core = 
{
  "Craft::Vector2",
  sizeof(Craft::Vector2),
  { NULL },
  { NULL },
  dao_Craft_Vector2_Nums,
  dao_Craft_Vector2_Meths,
  dao_Craft_Vector2_CheckGetField,    dao_Craft_Vector2_DoGetField,
  dao_Craft_Vector2_CheckSetField,    dao_Craft_Vector2_DoSetField,
  dao_Craft_Vector2_CheckGetItem,     dao_Craft_Vector2_DoGetItem,
  dao_Craft_Vector2_CheckSetItem,     dao_Craft_Vector2_DoSetItem,
  dao_Craft_Vector2_CheckUnary,       dao_Craft_Vector2_DoUnary,
  dao_Craft_Vector2_CheckBinary,      dao_Craft_Vector2_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Vector2_Copy,
  Dao_Craft_Vector2_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Vector2_Core = & Craft_Vector2_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Vector2_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Vector2 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Vector2_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float x = (float) DaoValue_TryGetFloat( _p[0] );
  float y = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Vector2 _self(x, y);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Normalize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  self->Normalize(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Length( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  float _Length = self->Length(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Length );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_LengthSquared( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  float _LengthSquared = self->LengthSquared(  );
  DaoProcess_PutFloat( _proc, (dao_float) _LengthSquared );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );
  Craft::Vector2* rhs = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  float _DotProduct = self->DotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _DotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_AbsDotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );
  Craft::Vector2* rhs = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  float _AbsDotProduct = self->AbsDotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _AbsDotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Abs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  Craft::Vector2 _Abs = self->Abs(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _Abs ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );
  Craft::Vector2* rhs = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float t = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Vector2 _Lerp = self->Lerp( *rhs, t );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _Lerp ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );
  Craft::Vector2* rhs = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  bool _IsNaN = self->IsNaN(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsNaN );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_Normalized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  Craft::Vector2 _Normalized = self->Normalized(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _Normalized ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector2_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* self = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_IntVector2_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_IntVector2_IntVector2_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntVector2_IntVector2_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntVector2_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_IntVector2_Meths[] = 
{
  { dao_Craft_IntVector2_IntVector2_dao_4, "IntVector2(  )=>Craft::IntVector2" },
  { dao_Craft_IntVector2_IntVector2_dao_5, "IntVector2( x: int, y: int )=>Craft::IntVector2" },
  { dao_Craft_IntVector2_ToString, "ToString( self: Craft::IntVector2 )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_IntVector2_Delete( DaoValue *self )
{
	delete (Craft::IntVector2*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_IntVector2_CheckGetField( DaoType *self, DaoString *field, DaoRoutine *rout );
extern DaoValue* dao_Craft_IntVector2_DoGetField( DaoValue *self, DaoString *field, DaoProcess *proc );
extern int dao_Craft_IntVector2_CheckSetField( DaoType *self, DaoString *field, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_IntVector2_DoSetField( DaoValue *self, DaoString *field, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_IntVector2_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_IntVector2_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_IntVector2_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_IntVector2_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_IntVector2_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_IntVector2_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_IntVector2_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_IntVector2_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_IntVector2_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::IntVector2* src = (Craft::IntVector2*) DaoValue_TryCastCdataTC( self, dao_Craft_IntVector2_Core );
	Craft::IntVector2* dest;
	if( target ){
		dest = (Craft::IntVector2*) DaoValue_TryCastCdataTC( target, dao_Craft_IntVector2_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::IntVector2( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_IntVector2_Core, dest );
}

static DaoTypeCore Craft_IntVector2_Core = 
{
  "Craft::IntVector2",
  sizeof(Craft::IntVector2),
  { NULL },
  { NULL },
  dao_Craft_IntVector2_Nums,
  dao_Craft_IntVector2_Meths,
  dao_Craft_IntVector2_CheckGetField,    dao_Craft_IntVector2_DoGetField,
  dao_Craft_IntVector2_CheckSetField,    dao_Craft_IntVector2_DoSetField,
  dao_Craft_IntVector2_CheckGetItem,     dao_Craft_IntVector2_DoGetItem,
  dao_Craft_IntVector2_CheckSetItem,     dao_Craft_IntVector2_DoSetItem,
  dao_Craft_IntVector2_CheckUnary,       dao_Craft_IntVector2_DoUnary,
  dao_Craft_IntVector2_CheckBinary,      dao_Craft_IntVector2_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_IntVector2_Copy,
  Dao_Craft_IntVector2_Delete,
  NULL
};
DaoTypeCore *dao_Craft_IntVector2_Core = & Craft_IntVector2_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntVector2_IntVector2_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::IntVector2 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntVector2_IntVector2_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  int x = (int) DaoValue_TryGetInteger( _p[0] );
  int y = (int) DaoValue_TryGetInteger( _p[1] );

  Craft::IntVector2 _self(x, y);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntVector2_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntVector2* self = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntVector2_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Vector4_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Vector4_Vector4_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_Vector4_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_Vector4_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_AbsDotProduct( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_Abs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Vector4_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Vector4_Meths[] = 
{
  { dao_Craft_Vector4_Vector4_dao_5, "Vector4(  )=>Craft::Vector4" },
  { dao_Craft_Vector4_Vector4_dao_6, "Vector4( vector: Craft::Vector3, w: float )=>Craft::Vector4" },
  { dao_Craft_Vector4_Vector4_dao_7, "Vector4( x: float, y: float, z: float, w: float )=>Craft::Vector4" },
  { dao_Craft_Vector4_DotProduct, "DotProduct( self: Craft::Vector4, rhs: Craft::Vector4 )=>float" },
  { dao_Craft_Vector4_AbsDotProduct, "AbsDotProduct( self: Craft::Vector4, rhs: Craft::Vector4 )=>float" },
  { dao_Craft_Vector4_Abs, "Abs( self: Craft::Vector4 )=>Craft::Vector4" },
  { dao_Craft_Vector4_Lerp, "Lerp( self: Craft::Vector4, rhs: Craft::Vector4, t: float )=>Craft::Vector4" },
  { dao_Craft_Vector4_Equals, "Equals( self: Craft::Vector4, rhs: Craft::Vector4 )=>bool" },
  { dao_Craft_Vector4_IsNaN, "IsNaN( self: Craft::Vector4 )=>bool" },
  { dao_Craft_Vector4_ToString, "ToString( self: Craft::Vector4 )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Vector4_Delete( DaoValue *self )
{
	delete (Craft::Vector4*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Vector4_CheckGetField( DaoType *self, DaoString *field, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector4_DoGetField( DaoValue *self, DaoString *field, DaoProcess *proc );
extern int dao_Craft_Vector4_CheckSetField( DaoType *self, DaoString *field, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Vector4_DoSetField( DaoValue *self, DaoString *field, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Vector4_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector4_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Vector4_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Vector4_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Vector4_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector4_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Vector4_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Vector4_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Vector4_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Vector4* src = (Craft::Vector4*) DaoValue_TryCastCdataTC( self, dao_Craft_Vector4_Core );
	Craft::Vector4* dest;
	if( target ){
		dest = (Craft::Vector4*) DaoValue_TryCastCdataTC( target, dao_Craft_Vector4_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Vector4( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Vector4_Core, dest );
}

static DaoTypeCore Craft_Vector4_Core = 
{
  "Craft::Vector4",
  sizeof(Craft::Vector4),
  { NULL },
  { NULL },
  dao_Craft_Vector4_Nums,
  dao_Craft_Vector4_Meths,
  dao_Craft_Vector4_CheckGetField,    dao_Craft_Vector4_DoGetField,
  dao_Craft_Vector4_CheckSetField,    dao_Craft_Vector4_DoSetField,
  dao_Craft_Vector4_CheckGetItem,     dao_Craft_Vector4_DoGetItem,
  dao_Craft_Vector4_CheckSetItem,     dao_Craft_Vector4_DoSetItem,
  dao_Craft_Vector4_CheckUnary,       dao_Craft_Vector4_DoUnary,
  dao_Craft_Vector4_CheckBinary,      dao_Craft_Vector4_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Vector4_Copy,
  Dao_Craft_Vector4_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Vector4_Core = & Craft_Vector4_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_Vector4_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Vector4 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_Vector4_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* vector = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  float w = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Vector4 _self(*vector, w);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_Vector4_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float x = (float) DaoValue_TryGetFloat( _p[0] );
  float y = (float) DaoValue_TryGetFloat( _p[1] );
  float z = (float) DaoValue_TryGetFloat( _p[2] );
  float w = (float) DaoValue_TryGetFloat( _p[3] );

  Craft::Vector4 _self(x, y, z, w);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_DotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );
  Craft::Vector4* rhs = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  float _DotProduct = self->DotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _DotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_AbsDotProduct( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );
  Craft::Vector4* rhs = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  float _AbsDotProduct = self->AbsDotProduct( *rhs );
  DaoProcess_PutFloat( _proc, (dao_float) _AbsDotProduct );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_Abs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );

  Craft::Vector4 _Abs = self->Abs(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _Abs ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );
  Craft::Vector4* rhs = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );
  float t = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Vector4 _Lerp = self->Lerp( *rhs, t );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _Lerp ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );
  Craft::Vector4* rhs = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_IsNaN( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );

  bool _IsNaN = self->IsNaN(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsNaN );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Vector4_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* self = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Matrix3x4_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Matrix3x4_GETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_GETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Matrix3x4_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Matrix3x4_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Matrix3x4_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Matrix3x4_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Matrix3x4_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Matrix3x4_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SetTranslation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_ToMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_ToMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_RotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Translation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Rotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Scale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Decompose( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Matrix3x4_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Matrix3x4_Meths[] = 
{
  { dao_Craft_Matrix3x4_GETF_m00_, ".m00_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m00_, ".m00_=( self: Craft::Matrix3x4, m00_: float )" },
  { dao_Craft_Matrix3x4_GETF_m01_, ".m01_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m01_, ".m01_=( self: Craft::Matrix3x4, m01_: float )" },
  { dao_Craft_Matrix3x4_GETF_m02_, ".m02_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m02_, ".m02_=( self: Craft::Matrix3x4, m02_: float )" },
  { dao_Craft_Matrix3x4_GETF_m03_, ".m03_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m03_, ".m03_=( self: Craft::Matrix3x4, m03_: float )" },
  { dao_Craft_Matrix3x4_GETF_m10_, ".m10_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m10_, ".m10_=( self: Craft::Matrix3x4, m10_: float )" },
  { dao_Craft_Matrix3x4_GETF_m11_, ".m11_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m11_, ".m11_=( self: Craft::Matrix3x4, m11_: float )" },
  { dao_Craft_Matrix3x4_GETF_m12_, ".m12_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m12_, ".m12_=( self: Craft::Matrix3x4, m12_: float )" },
  { dao_Craft_Matrix3x4_GETF_m13_, ".m13_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m13_, ".m13_=( self: Craft::Matrix3x4, m13_: float )" },
  { dao_Craft_Matrix3x4_GETF_m20_, ".m20_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m20_, ".m20_=( self: Craft::Matrix3x4, m20_: float )" },
  { dao_Craft_Matrix3x4_GETF_m21_, ".m21_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m21_, ".m21_=( self: Craft::Matrix3x4, m21_: float )" },
  { dao_Craft_Matrix3x4_GETF_m22_, ".m22_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m22_, ".m22_=( self: Craft::Matrix3x4, m22_: float )" },
  { dao_Craft_Matrix3x4_GETF_m23_, ".m23_ ( self: Craft::Matrix3x4 )=>float" },
  { dao_Craft_Matrix3x4_SETF_m23_, ".m23_=( self: Craft::Matrix3x4, m23_: float )" },
  { dao_Craft_Matrix3x4_Matrix3x4_dao_8, "Matrix3x4(  )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_Matrix3x4_dao_9, "Matrix3x4( matrix: Craft::Matrix3 )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_Matrix3x4_dao_10, "Matrix3x4( matrix: Craft::Matrix4 )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_Matrix3x4_dao_11, "Matrix3x4( v00: float, v01: float, v02: float, v03: float, v10: float, v11: float, v12: float, v13: float, v20: float, v21: float, v22: float, v23: float )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_Matrix3x4_dao_12, "Matrix3x4( translation: Craft::Vector3, rotation: Craft::Quaternion, scale: float )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_Matrix3x4_dao_13, "Matrix3x4( translation: Craft::Vector3, rotation: Craft::Quaternion, scale: Craft::Vector3 )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_SetTranslation, "SetTranslation( self: Craft::Matrix3x4, translation: Craft::Vector3 )" },
  { dao_Craft_Matrix3x4_SetRotation, "SetRotation( self: Craft::Matrix3x4, rotation: Craft::Matrix3 )" },
  { dao_Craft_Matrix3x4_SetScale, "SetScale( self: Craft::Matrix3x4, scale: Craft::Vector3 )" },
  { dao_Craft_Matrix3x4_SetScale_dao_2, "SetScale( self: Craft::Matrix3x4, scale: float )" },
  { dao_Craft_Matrix3x4_ToMatrix3, "ToMatrix3( self: Craft::Matrix3x4 )=>Craft::Matrix3" },
  { dao_Craft_Matrix3x4_ToMatrix4, "ToMatrix4( self: Craft::Matrix3x4 )=>Craft::Matrix4" },
  { dao_Craft_Matrix3x4_RotationMatrix, "RotationMatrix( self: Craft::Matrix3x4 )=>Craft::Matrix3" },
  { dao_Craft_Matrix3x4_Translation, "Translation( self: Craft::Matrix3x4 )=>Craft::Vector3" },
  { dao_Craft_Matrix3x4_Rotation, "Rotation( self: Craft::Matrix3x4 )=>Craft::Quaternion" },
  { dao_Craft_Matrix3x4_Scale, "Scale( self: Craft::Matrix3x4 )=>Craft::Vector3" },
  { dao_Craft_Matrix3x4_Equals, "Equals( self: Craft::Matrix3x4, rhs: Craft::Matrix3x4 )=>bool" },
  { dao_Craft_Matrix3x4_Decompose, "Decompose( self: Craft::Matrix3x4, translation: Craft::Vector3, rotation: Craft::Quaternion, scale: Craft::Vector3 )" },
  { dao_Craft_Matrix3x4_Inverse, "Inverse( self: Craft::Matrix3x4 )=>Craft::Matrix3x4" },
  { dao_Craft_Matrix3x4_ToString, "ToString( self: Craft::Matrix3x4 )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Matrix3x4_Delete( DaoValue *self )
{
	delete (Craft::Matrix3x4*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
extern DaoType* dao_Craft_Matrix3x4_CheckGetItem( DaoType *self, DaoType *index[], int N, DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix3x4_DoGetItem( DaoValue *self, DaoValue *index[], int N, DaoProcess *proc );
extern int dao_Craft_Matrix3x4_CheckSetItem( DaoType *self, DaoType *index[], int N, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_Matrix3x4_DoSetItem( DaoValue *self, DaoValue *index[], int N, DaoValue *value, DaoProcess *proc );
extern DaoType* dao_Craft_Matrix3x4_CheckUnary( DaoType *self, DaoVmCode *op, DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix3x4_DoUnary( DaoValue *self, DaoVmCode *op, DaoProcess *proc );
extern DaoType* dao_Craft_Matrix3x4_CheckBinary( DaoType *self, DaoVmCode *op, DaoType *operands[2], DaoRoutine *rout );
extern DaoValue* dao_Craft_Matrix3x4_DoBinary( DaoValue *self, DaoVmCode *op, DaoValue *operands[2], DaoProcess *proc );
static DaoValue* dao_Craft_Matrix3x4_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Matrix3x4* src = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( self, dao_Craft_Matrix3x4_Core );
	Craft::Matrix3x4* dest;
	if( target ){
		dest = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( target, dao_Craft_Matrix3x4_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Matrix3x4( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Matrix3x4_Core, dest );
}

static DaoTypeCore Craft_Matrix3x4_Core = 
{
  "Craft::Matrix3x4",
  sizeof(Craft::Matrix3x4),
  { NULL },
  { NULL },
  dao_Craft_Matrix3x4_Nums,
  dao_Craft_Matrix3x4_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  dao_Craft_Matrix3x4_CheckGetItem,     dao_Craft_Matrix3x4_DoGetItem,
  dao_Craft_Matrix3x4_CheckSetItem,     dao_Craft_Matrix3x4_DoSetItem,
  dao_Craft_Matrix3x4_CheckUnary,       dao_Craft_Matrix3x4_DoUnary,
  dao_Craft_Matrix3x4_CheckBinary,      dao_Craft_Matrix3x4_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Matrix3x4_Copy,
  Dao_Craft_Matrix3x4_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Matrix3x4_Core = & Craft_Matrix3x4_Core;
static void dao_Craft_Matrix3x4_GETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m00_ );
}
static void dao_Craft_Matrix3x4_SETF_m00_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m00_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m01_ );
}
static void dao_Craft_Matrix3x4_SETF_m01_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m01_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m02_ );
}
static void dao_Craft_Matrix3x4_SETF_m02_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m02_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m03_ );
}
static void dao_Craft_Matrix3x4_SETF_m03_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m03_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m10_ );
}
static void dao_Craft_Matrix3x4_SETF_m10_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m10_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m11_ );
}
static void dao_Craft_Matrix3x4_SETF_m11_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m11_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m12_ );
}
static void dao_Craft_Matrix3x4_SETF_m12_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m12_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m13_ );
}
static void dao_Craft_Matrix3x4_SETF_m13_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m13_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m20_ );
}
static void dao_Craft_Matrix3x4_SETF_m20_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m20_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m21_ );
}
static void dao_Craft_Matrix3x4_SETF_m21_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m21_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m22_ );
}
static void dao_Craft_Matrix3x4_SETF_m22_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m22_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Matrix3x4_GETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->m23_ );
}
static void dao_Craft_Matrix3x4_SETF_m23_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4 *self = (Craft::Matrix3x4*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Matrix3x4_Core);
  self->m23_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Matrix3x4_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Matrix3x4 _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Matrix3x4_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* matrix = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Matrix3x4 _self(*matrix);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Matrix3x4_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* matrix = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Matrix3x4 _self(*matrix);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Matrix3x4_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float v00 = (float) DaoValue_TryGetFloat( _p[0] );
  float v01 = (float) DaoValue_TryGetFloat( _p[1] );
  float v02 = (float) DaoValue_TryGetFloat( _p[2] );
  float v03 = (float) DaoValue_TryGetFloat( _p[3] );
  float v10 = (float) DaoValue_TryGetFloat( _p[4] );
  float v11 = (float) DaoValue_TryGetFloat( _p[5] );
  float v12 = (float) DaoValue_TryGetFloat( _p[6] );
  float v13 = (float) DaoValue_TryGetFloat( _p[7] );
  float v20 = (float) DaoValue_TryGetFloat( _p[8] );
  float v21 = (float) DaoValue_TryGetFloat( _p[9] );
  float v22 = (float) DaoValue_TryGetFloat( _p[10] );
  float v23 = (float) DaoValue_TryGetFloat( _p[11] );

  Craft::Matrix3x4 _self(v00, v01, v02, v03, v10, v11, v12, v13, v20, v21, v22, v23);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Matrix3x4_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* translation = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Matrix3x4 _self(*translation, *rotation, scale);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Matrix3x4_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* translation = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  Craft::Matrix3x4 _self(*translation, *rotation, *scale);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_SetTranslation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );
  Craft::Vector3* translation = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetTranslation( *translation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );
  Craft::Matrix3* rotation = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->SetRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetScale( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetScale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_ToMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Matrix3 _ToMatrix3 = self->ToMatrix3(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _ToMatrix3 ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_ToMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Matrix4 _ToMatrix4 = self->ToMatrix4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix4( _ToMatrix4 ), dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_RotationMatrix( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Matrix3 _RotationMatrix = self->RotationMatrix(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _RotationMatrix ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Translation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Vector3 _Translation = self->Translation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Translation ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Rotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Quaternion _Rotation = self->Rotation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _Rotation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Scale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Vector3 _Scale = self->Scale(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Scale ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );
  Craft::Matrix3x4* rhs = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Decompose( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );
  Craft::Vector3* translation = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->Decompose( *translation, *rotation, *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_Inverse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Matrix3x4 _Inverse = self->Inverse(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3x4( _Inverse ), dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Matrix3x4_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* self = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Plane_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Plane_GETF_normal_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_GETF_absNormal_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_GETF_d_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_SETF_d_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Plane_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Plane_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Plane_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Plane_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Transform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Transform_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Project( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Distance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Reflect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_ReflectionMatrix( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_Transformed_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Plane_ToVector4( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Plane_Meths[] = 
{
  { dao_Craft_Plane_GETF_normal_, ".normal_ ( self: Craft::Plane )=>Craft::Vector3" },
  { dao_Craft_Plane_GETF_absNormal_, ".absNormal_ ( self: Craft::Plane )=>Craft::Vector3" },
  { dao_Craft_Plane_GETF_d_, ".d_ ( self: Craft::Plane )=>float" },
  { dao_Craft_Plane_SETF_d_, ".d_=( self: Craft::Plane, d_: float )" },
  { dao_Craft_Plane_Plane_dao_6, "Plane(  )=>Craft::Plane" },
  { dao_Craft_Plane_Plane_dao_7, "Plane( v0: Craft::Vector3, v1: Craft::Vector3, v2: Craft::Vector3 )=>Craft::Plane" },
  { dao_Craft_Plane_Plane_dao_8, "Plane( normal: Craft::Vector3, point: Craft::Vector3 )=>Craft::Plane" },
  { dao_Craft_Plane_Plane_dao_9, "Plane( plane: Craft::Vector4 )=>Craft::Plane" },
  { dao_Craft_Plane_Define, "Define( self: Craft::Plane, v0: Craft::Vector3, v1: Craft::Vector3, v2: Craft::Vector3 )" },
  { dao_Craft_Plane_Define_dao_2, "Define( self: Craft::Plane, normal: Craft::Vector3, point: Craft::Vector3 )" },
  { dao_Craft_Plane_Define_dao_3, "Define( self: Craft::Plane, plane: Craft::Vector4 )" },
  { dao_Craft_Plane_Transform, "Transform( self: Craft::Plane, transform: Craft::Matrix3 )" },
  { dao_Craft_Plane_Transform_dao_2, "Transform( self: Craft::Plane, transform: Craft::Matrix3x4 )" },
  { dao_Craft_Plane_Transform_dao_3, "Transform( self: Craft::Plane, transform: Craft::Matrix4 )" },
  { dao_Craft_Plane_Project, "Project( self: Craft::Plane, point: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Plane_Distance, "Distance( self: Craft::Plane, point: Craft::Vector3 )=>float" },
  { dao_Craft_Plane_Reflect, "Reflect( self: Craft::Plane, direction: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Plane_ReflectionMatrix, "ReflectionMatrix( self: Craft::Plane )=>Craft::Matrix3x4" },
  { dao_Craft_Plane_Transformed, "Transformed( self: Craft::Plane, transform: Craft::Matrix3 )=>Craft::Plane" },
  { dao_Craft_Plane_Transformed_dao_2, "Transformed( self: Craft::Plane, transform: Craft::Matrix3x4 )=>Craft::Plane" },
  { dao_Craft_Plane_Transformed_dao_3, "Transformed( self: Craft::Plane, transform: Craft::Matrix4 )=>Craft::Plane" },
  { dao_Craft_Plane_ToVector4, "ToVector4( self: Craft::Plane )=>Craft::Vector4" },
  { NULL, NULL }
};
static void Dao_Craft_Plane_Delete( DaoValue *self )
{
	delete (Craft::Plane*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Plane_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Plane* src = (Craft::Plane*) DaoValue_TryCastCdataTC( self, dao_Craft_Plane_Core );
	Craft::Plane* dest;
	if( target ){
		dest = (Craft::Plane*) DaoValue_TryCastCdataTC( target, dao_Craft_Plane_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Plane( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Plane_Core, dest );
}

static DaoTypeCore Craft_Plane_Core = 
{
  "Craft::Plane",
  sizeof(Craft::Plane),
  { NULL },
  { NULL },
  dao_Craft_Plane_Nums,
  dao_Craft_Plane_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Plane_Copy,
  Dao_Craft_Plane_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Plane_Core = & Craft_Plane_Core;
static void dao_Craft_Plane_GETF_normal_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane *self = (Craft::Plane*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Plane_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->normal_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Plane_GETF_absNormal_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane *self = (Craft::Plane*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Plane_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->absNormal_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Plane_GETF_d_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane *self = (Craft::Plane*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Plane_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->d_ );
}
static void dao_Craft_Plane_SETF_d_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane *self = (Craft::Plane*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Plane_Core);
  self->d_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Plane_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Plane _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Plane_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* v0 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* v1 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* v2 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  Craft::Plane _self(*v0, *v1, *v2);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Plane_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* normal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Plane _self(*normal, *point);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Plane_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* plane = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );

  Craft::Plane _self(*plane);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Vector3* v0 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* v1 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* v2 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->Define( *v0, *v1, *v2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Vector3* normal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->Define( *normal, *point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Vector4* plane = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  self->Define( *plane );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Transform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Transform_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Matrix4* transform = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix4_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Project( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _Project = self->Project( *point );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Project ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Distance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _Distance = self->Distance( *point );
  DaoProcess_PutFloat( _proc, (dao_float) _Distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Reflect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _Reflect = self->Reflect( *direction );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Reflect ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_ReflectionMatrix( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );

  Craft::Matrix3x4 _ReflectionMatrix = self->ReflectionMatrix(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3x4( _ReflectionMatrix ), dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  Craft::Plane _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Plane( _Transformed ), dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  Craft::Plane _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Plane( _Transformed ), dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_Transformed_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );
  Craft::Matrix4* transform = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix4_Core );

  Craft::Plane _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Plane( _Transformed ), dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Plane_ToVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Plane* self = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Plane_Core );

  Craft::Vector4 _ToVector4 = self->ToVector4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _ToVector4 ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Rect_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Rect_GETF_min_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_GETF_max_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Rect_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Rect_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Rect_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Rect_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Merge( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Merge_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Clip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Center( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Size( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_HalfSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_ToVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Rect_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Rect_Meths[] = 
{
  { dao_Craft_Rect_GETF_min_, ".min_ ( self: Craft::Rect )=>Craft::Vector2" },
  { dao_Craft_Rect_GETF_max_, ".max_ ( self: Craft::Rect )=>Craft::Vector2" },
  { dao_Craft_Rect_Rect_dao_6, "Rect(  )=>Craft::Rect" },
  { dao_Craft_Rect_Rect_dao_7, "Rect( min: Craft::Vector2, max: Craft::Vector2 )=>Craft::Rect" },
  { dao_Craft_Rect_Rect_dao_8, "Rect( left: float, top: float, right: float, bottom: float )=>Craft::Rect" },
  { dao_Craft_Rect_Rect_dao_9, "Rect( vector: Craft::Vector4 )=>Craft::Rect" },
  { dao_Craft_Rect_Define, "Define( self: Craft::Rect, rect: Craft::Rect )" },
  { dao_Craft_Rect_Define_dao_2, "Define( self: Craft::Rect, min: Craft::Vector2, max: Craft::Vector2 )" },
  { dao_Craft_Rect_Define_dao_3, "Define( self: Craft::Rect, point: Craft::Vector2 )" },
  { dao_Craft_Rect_Merge, "Merge( self: Craft::Rect, point: Craft::Vector2 )" },
  { dao_Craft_Rect_Merge_dao_2, "Merge( self: Craft::Rect, rect: Craft::Rect )" },
  { dao_Craft_Rect_Clear, "Clear( self: Craft::Rect )" },
  { dao_Craft_Rect_Clip, "Clip( self: Craft::Rect, rect: Craft::Rect )" },
  { dao_Craft_Rect_Center, "Center( self: Craft::Rect )=>Craft::Vector2" },
  { dao_Craft_Rect_Size, "Size( self: Craft::Rect )=>Craft::Vector2" },
  { dao_Craft_Rect_HalfSize, "HalfSize( self: Craft::Rect )=>Craft::Vector2" },
  { dao_Craft_Rect_Equals, "Equals( self: Craft::Rect, rhs: Craft::Rect )=>bool" },
  { dao_Craft_Rect_IsInside, "IsInside( self: Craft::Rect, point: Craft::Vector2 )=>int" },
  { dao_Craft_Rect_ToVector4, "ToVector4( self: Craft::Rect )=>Craft::Vector4" },
  { dao_Craft_Rect_ToString, "ToString( self: Craft::Rect )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Rect_Delete( DaoValue *self )
{
	delete (Craft::Rect*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Rect_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Rect* src = (Craft::Rect*) DaoValue_TryCastCdataTC( self, dao_Craft_Rect_Core );
	Craft::Rect* dest;
	if( target ){
		dest = (Craft::Rect*) DaoValue_TryCastCdataTC( target, dao_Craft_Rect_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Rect( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Rect_Core, dest );
}

static DaoTypeCore Craft_Rect_Core = 
{
  "Craft::Rect",
  sizeof(Craft::Rect),
  { NULL },
  { NULL },
  dao_Craft_Rect_Nums,
  dao_Craft_Rect_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Rect_Copy,
  Dao_Craft_Rect_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Rect_Core = & Craft_Rect_Core;
static void dao_Craft_Rect_GETF_min_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect *self = (Craft::Rect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Rect_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->min_, dao_Craft_Vector2_Core );
}
static void dao_Craft_Rect_GETF_max_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect *self = (Craft::Rect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Rect_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->max_, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Rect_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Rect _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Rect_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* min = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );
  Craft::Vector2* max = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  Craft::Rect _self(*min, *max);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Rect_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float left = (float) DaoValue_TryGetFloat( _p[0] );
  float top = (float) DaoValue_TryGetFloat( _p[1] );
  float right = (float) DaoValue_TryGetFloat( _p[2] );
  float bottom = (float) DaoValue_TryGetFloat( _p[3] );

  Craft::Rect _self(left, top, right, bottom);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Rect_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* vector = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );

  Craft::Rect _self(*vector);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Rect* rect = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );

  self->Define( *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Vector2* min = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  Craft::Vector2* max = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector2_Core );

  self->Define( *min, *max );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Vector2* point = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->Define( *point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Merge( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Vector2* point = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->Merge( *point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Merge_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Rect* rect = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );

  self->Merge( *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Clip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Rect* rect = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );

  self->Clip( *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Center( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  Craft::Vector2 _Center = self->Center(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _Center ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Size( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  Craft::Vector2 _Size = self->Size(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _Size ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_HalfSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  Craft::Vector2 _HalfSize = self->HalfSize(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _HalfSize ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Rect* rhs = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );
  Craft::Vector2* point = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  Craft::Intersection _IsInside = self->IsInside( *point );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_ToVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  Craft::Vector4 _ToVector4 = self->ToVector4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _ToVector4 ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Rect_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* self = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Sphere_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Sphere_GETF_center_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_GETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_SETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Sphere_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Sphere_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Sphere_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Sphere_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Sphere_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Sphere_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Define_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Define_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Define_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Merge( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Merge_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Merge_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Merge_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Merge_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Merge_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_IsInside_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_IsInsideFast( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_IsInside_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_IsInsideFast_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sphere_Distance( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Sphere_Meths[] = 
{
  { dao_Craft_Sphere_GETF_center_, ".center_ ( self: Craft::Sphere )=>Craft::Vector3" },
  { dao_Craft_Sphere_GETF_radius_, ".radius_ ( self: Craft::Sphere )=>float" },
  { dao_Craft_Sphere_SETF_radius_, ".radius_=( self: Craft::Sphere, radius_: float )" },
  { dao_Craft_Sphere_Sphere_dao_8, "Sphere(  )=>Craft::Sphere" },
  { dao_Craft_Sphere_Sphere_dao_9, "Sphere( center: Craft::Vector3, radius: float )=>Craft::Sphere" },
  { dao_Craft_Sphere_Sphere_dao_10, "Sphere( vertices: Craft::Vector3, count: int )=>Craft::Sphere" },
  { dao_Craft_Sphere_Sphere_dao_11, "Sphere( box: Craft::BoundingBox )=>Craft::Sphere" },
  { dao_Craft_Sphere_Sphere_dao_12, "Sphere( frustum: Craft::Frustum )=>Craft::Sphere" },
  { dao_Craft_Sphere_Sphere_dao_13, "Sphere( poly: Craft::Polyhedron )=>Craft::Sphere" },
  { dao_Craft_Sphere_Define, "Define( self: Craft::Sphere, sphere: Craft::Sphere )" },
  { dao_Craft_Sphere_Define_dao_2, "Define( self: Craft::Sphere, center: Craft::Vector3, radius: float )" },
  { dao_Craft_Sphere_Define_dao_3, "Define( self: Craft::Sphere, vertices: Craft::Vector3, count: int )" },
  { dao_Craft_Sphere_Define_dao_4, "Define( self: Craft::Sphere, box: Craft::BoundingBox )" },
  { dao_Craft_Sphere_Define_dao_5, "Define( self: Craft::Sphere, frustum: Craft::Frustum )" },
  { dao_Craft_Sphere_Define_dao_6, "Define( self: Craft::Sphere, poly: Craft::Polyhedron )" },
  { dao_Craft_Sphere_Merge, "Merge( self: Craft::Sphere, point: Craft::Vector3 )" },
  { dao_Craft_Sphere_Merge_dao_2, "Merge( self: Craft::Sphere, vertices: Craft::Vector3, count: int )" },
  { dao_Craft_Sphere_Merge_dao_3, "Merge( self: Craft::Sphere, box: Craft::BoundingBox )" },
  { dao_Craft_Sphere_Merge_dao_4, "Merge( self: Craft::Sphere, frustum: Craft::Frustum )" },
  { dao_Craft_Sphere_Merge_dao_5, "Merge( self: Craft::Sphere, poly: Craft::Polyhedron )" },
  { dao_Craft_Sphere_Merge_dao_6, "Merge( self: Craft::Sphere, sphere: Craft::Sphere )" },
  { dao_Craft_Sphere_Clear, "Clear( self: Craft::Sphere )" },
  { dao_Craft_Sphere_IsInside, "IsInside( self: Craft::Sphere, point: Craft::Vector3 )=>int" },
  { dao_Craft_Sphere_IsInside_dao_2, "IsInside( self: Craft::Sphere, sphere: Craft::Sphere )=>int" },
  { dao_Craft_Sphere_IsInsideFast, "IsInsideFast( self: Craft::Sphere, sphere: Craft::Sphere )=>int" },
  { dao_Craft_Sphere_IsInside_dao_3, "IsInside( self: Craft::Sphere, box: Craft::BoundingBox )=>int" },
  { dao_Craft_Sphere_IsInsideFast_dao_2, "IsInsideFast( self: Craft::Sphere, box: Craft::BoundingBox )=>int" },
  { dao_Craft_Sphere_Distance, "Distance( self: Craft::Sphere, point: Craft::Vector3 )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_Sphere_Delete( DaoValue *self )
{
	delete (Craft::Sphere*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Sphere_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Sphere* src = (Craft::Sphere*) DaoValue_TryCastCdataTC( self, dao_Craft_Sphere_Core );
	Craft::Sphere* dest;
	if( target ){
		dest = (Craft::Sphere*) DaoValue_TryCastCdataTC( target, dao_Craft_Sphere_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Sphere( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Sphere_Core, dest );
}

static DaoTypeCore Craft_Sphere_Core = 
{
  "Craft::Sphere",
  sizeof(Craft::Sphere),
  { NULL },
  { NULL },
  dao_Craft_Sphere_Nums,
  dao_Craft_Sphere_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Sphere_Copy,
  Dao_Craft_Sphere_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Sphere_Core = & Craft_Sphere_Core;
static void dao_Craft_Sphere_GETF_center_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere *self = (Craft::Sphere*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Sphere_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->center_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Sphere_GETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere *self = (Craft::Sphere*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Sphere_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->radius_ );
}
static void dao_Craft_Sphere_SETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere *self = (Craft::Sphere*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Sphere_Core);
  self->radius_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Sphere_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Sphere _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Sphere_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Sphere_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* center = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  float radius = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Sphere _self(*center, radius);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Sphere_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Sphere_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* vertices = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Sphere _self(vertices, count);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Sphere_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Sphere_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  Craft::Sphere _self(*box);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Sphere_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Sphere_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );

  Craft::Sphere _self(*frustum);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Sphere_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Sphere_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* poly = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );

  Craft::Sphere _self(*poly);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Sphere_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  self->Define( *sphere );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Vector3* center = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  float radius = (float) DaoValue_TryGetFloat( _p[2] );

  self->Define( *center, radius );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Vector3* vertices = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->Define( vertices, count );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Define_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Define( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Define_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );

  self->Define( *frustum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Define_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Polyhedron* poly = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Polyhedron_Core );

  self->Define( *poly );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Merge( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->Merge( *point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Merge_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Vector3* vertices = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->Merge( vertices, count );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Merge_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Merge( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Merge_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );

  self->Merge( *frustum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Merge_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Polyhedron* poly = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Polyhedron_Core );

  self->Merge( *poly );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Merge_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  self->Merge( *sphere );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Intersection _IsInside = self->IsInside( *point );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_IsInside_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  Craft::Intersection _IsInside = self->IsInside( *sphere );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_IsInsideFast( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  Craft::Intersection _IsInsideFast = self->IsInsideFast( *sphere );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInsideFast );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_IsInside_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  Craft::Intersection _IsInside = self->IsInside( *box );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_IsInsideFast_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  Craft::Intersection _IsInsideFast = self->IsInsideFast( *box );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInsideFast );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sphere_Distance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* self = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _Distance = self->Distance( *point );
  DaoProcess_PutFloat( _proc, (dao_float) _Distance );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_BoundingBox_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_BoundingBox_GETF_min_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_GETF_max_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_14( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_15( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_16( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_BoundingBox_dao_17( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Define_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Merge( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Merge_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Merge_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Merge_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Merge_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Merge_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Clip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Transform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Defined( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Center( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Size( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_HalfSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_Projected( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_IsInside_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_IsInsideFast( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_IsInside_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_IsInsideFast_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BoundingBox_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_BoundingBox_Meths[] = 
{
  { dao_Craft_BoundingBox_GETF_min_, ".min_ ( self: Craft::BoundingBox )=>Craft::Vector3" },
  { dao_Craft_BoundingBox_GETF_max_, ".max_ ( self: Craft::BoundingBox )=>Craft::Vector3" },
  { dao_Craft_BoundingBox_BoundingBox_dao_10, "BoundingBox(  )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_11, "BoundingBox( rect: Craft::Rect )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_12, "BoundingBox( min: Craft::Vector3, max: Craft::Vector3 )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_13, "BoundingBox( min: float, max: float )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_14, "BoundingBox( vertices: Craft::Vector3, count: int )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_15, "BoundingBox( frustum: Craft::Frustum )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_16, "BoundingBox( poly: Craft::Polyhedron )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_BoundingBox_dao_17, "BoundingBox( sphere: Craft::Sphere )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_Define, "Define( self: Craft::BoundingBox, box: Craft::BoundingBox )" },
  { dao_Craft_BoundingBox_Define_dao_2, "Define( self: Craft::BoundingBox, rect: Craft::Rect )" },
  { dao_Craft_BoundingBox_Define_dao_3, "Define( self: Craft::BoundingBox, min: Craft::Vector3, max: Craft::Vector3 )" },
  { dao_Craft_BoundingBox_Define_dao_4, "Define( self: Craft::BoundingBox, min: float, max: float )" },
  { dao_Craft_BoundingBox_Define_dao_5, "Define( self: Craft::BoundingBox, point: Craft::Vector3 )" },
  { dao_Craft_BoundingBox_Define_dao_6, "Define( self: Craft::BoundingBox, vertices: Craft::Vector3, count: int )" },
  { dao_Craft_BoundingBox_Define_dao_7, "Define( self: Craft::BoundingBox, frustum: Craft::Frustum )" },
  { dao_Craft_BoundingBox_Define_dao_8, "Define( self: Craft::BoundingBox, poly: Craft::Polyhedron )" },
  { dao_Craft_BoundingBox_Define_dao_9, "Define( self: Craft::BoundingBox, sphere: Craft::Sphere )" },
  { dao_Craft_BoundingBox_Merge, "Merge( self: Craft::BoundingBox, point: Craft::Vector3 )" },
  { dao_Craft_BoundingBox_Merge_dao_2, "Merge( self: Craft::BoundingBox, box: Craft::BoundingBox )" },
  { dao_Craft_BoundingBox_Merge_dao_3, "Merge( self: Craft::BoundingBox, vertices: Craft::Vector3, count: int )" },
  { dao_Craft_BoundingBox_Merge_dao_4, "Merge( self: Craft::BoundingBox, frustum: Craft::Frustum )" },
  { dao_Craft_BoundingBox_Merge_dao_5, "Merge( self: Craft::BoundingBox, poly: Craft::Polyhedron )" },
  { dao_Craft_BoundingBox_Merge_dao_6, "Merge( self: Craft::BoundingBox, sphere: Craft::Sphere )" },
  { dao_Craft_BoundingBox_Clip, "Clip( self: Craft::BoundingBox, box: Craft::BoundingBox )" },
  { dao_Craft_BoundingBox_Transform, "Transform( self: Craft::BoundingBox, transform: Craft::Matrix3 )" },
  { dao_Craft_BoundingBox_Transform_dao_2, "Transform( self: Craft::BoundingBox, transform: Craft::Matrix3x4 )" },
  { dao_Craft_BoundingBox_Clear, "Clear( self: Craft::BoundingBox )" },
  { dao_Craft_BoundingBox_Defined, "Defined( self: Craft::BoundingBox )=>bool" },
  { dao_Craft_BoundingBox_Center, "Center( self: Craft::BoundingBox )=>Craft::Vector3" },
  { dao_Craft_BoundingBox_Size, "Size( self: Craft::BoundingBox )=>Craft::Vector3" },
  { dao_Craft_BoundingBox_HalfSize, "HalfSize( self: Craft::BoundingBox )=>Craft::Vector3" },
  { dao_Craft_BoundingBox_Transformed, "Transformed( self: Craft::BoundingBox, transform: Craft::Matrix3 )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_Transformed_dao_2, "Transformed( self: Craft::BoundingBox, transform: Craft::Matrix3x4 )=>Craft::BoundingBox" },
  { dao_Craft_BoundingBox_Projected, "Projected( self: Craft::BoundingBox, projection: Craft::Matrix4 )=>Craft::Rect" },
  { dao_Craft_BoundingBox_IsInside, "IsInside( self: Craft::BoundingBox, point: Craft::Vector3 )=>int" },
  { dao_Craft_BoundingBox_IsInside_dao_2, "IsInside( self: Craft::BoundingBox, box: Craft::BoundingBox )=>int" },
  { dao_Craft_BoundingBox_IsInsideFast, "IsInsideFast( self: Craft::BoundingBox, box: Craft::BoundingBox )=>int" },
  { dao_Craft_BoundingBox_IsInside_dao_3, "IsInside( self: Craft::BoundingBox, sphere: Craft::Sphere )=>int" },
  { dao_Craft_BoundingBox_IsInsideFast_dao_2, "IsInsideFast( self: Craft::BoundingBox, sphere: Craft::Sphere )=>int" },
  { dao_Craft_BoundingBox_ToString, "ToString( self: Craft::BoundingBox )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_BoundingBox_Delete( DaoValue *self )
{
	delete (Craft::BoundingBox*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_BoundingBox_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::BoundingBox* src = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( self, dao_Craft_BoundingBox_Core );
	Craft::BoundingBox* dest;
	if( target ){
		dest = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( target, dao_Craft_BoundingBox_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::BoundingBox( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_BoundingBox_Core, dest );
}

static DaoTypeCore Craft_BoundingBox_Core = 
{
  "Craft::BoundingBox",
  sizeof(Craft::BoundingBox),
  { NULL },
  { NULL },
  dao_Craft_BoundingBox_Nums,
  dao_Craft_BoundingBox_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_BoundingBox_Copy,
  Dao_Craft_BoundingBox_Delete,
  NULL
};
DaoTypeCore *dao_Craft_BoundingBox_Core = & Craft_BoundingBox_Core;
static void dao_Craft_BoundingBox_GETF_min_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox *self = (Craft::BoundingBox*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_BoundingBox_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->min_, dao_Craft_Vector3_Core );
}
static void dao_Craft_BoundingBox_GETF_max_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox *self = (Craft::BoundingBox*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_BoundingBox_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->max_, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::BoundingBox _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_11( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Rect* rect = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Rect_Core );

  Craft::BoundingBox _self(*rect);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_12( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* min = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* max = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::BoundingBox _self(*min, *max);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_13( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float min = (float) DaoValue_TryGetFloat( _p[0] );
  float max = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::BoundingBox _self(min, max);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_14( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* vertices = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::BoundingBox _self(vertices, count);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_15( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );

  Craft::BoundingBox _self(*frustum);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_16( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* poly = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );

  Craft::BoundingBox _self(*poly);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_BoundingBox_dao_17( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sphere_Core );

  Craft::BoundingBox _self(*sphere);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Define( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Rect* rect = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );

  self->Define( *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Vector3* min = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* max = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->Define( *min, *max );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  float min = (float) DaoValue_TryGetFloat( _p[1] );
  float max = (float) DaoValue_TryGetFloat( _p[2] );

  self->Define( min, max );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->Define( *point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Vector3* vertices = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->Define( vertices, count );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );

  self->Define( *frustum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Polyhedron* poly = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Polyhedron_Core );

  self->Define( *poly );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Define_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  self->Define( *sphere );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Merge( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->Merge( *point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Merge_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Merge( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Merge_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Vector3* vertices = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->Merge( vertices, count );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Merge_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );

  self->Merge( *frustum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Merge_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Polyhedron* poly = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Polyhedron_Core );

  self->Merge( *poly );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Merge_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  self->Merge( *sphere );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Clip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Clip( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Transform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Defined( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  bool _Defined = self->Defined(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Defined );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Center( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  Craft::Vector3 _Center = self->Center(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Center ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Size( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  Craft::Vector3 _Size = self->Size(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Size ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_HalfSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  Craft::Vector3 _HalfSize = self->HalfSize(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _HalfSize ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  Craft::BoundingBox _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::BoundingBox( _Transformed ), dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  Craft::BoundingBox _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::BoundingBox( _Transformed ), dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_Projected( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Matrix4* projection = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix4_Core );

  Craft::Rect _Projected = self->Projected( *projection );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Rect( _Projected ), dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Intersection _IsInside = self->IsInside( *point );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_IsInside_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  Craft::Intersection _IsInside = self->IsInside( *box );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_IsInsideFast( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  Craft::Intersection _IsInsideFast = self->IsInsideFast( *box );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInsideFast );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_IsInside_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  Craft::Intersection _IsInside = self->IsInside( *sphere );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_IsInsideFast_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  Craft::Intersection _IsInsideFast = self->IsInsideFast( *sphere );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInsideFast );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BoundingBox_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* self = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Frustum_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Frustum_Frustum_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_Transform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_IsInside_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_IsInsideFast( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_IsInside_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_IsInsideFast_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_Distance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_Projected( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Frustum_UpdatePlanes( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Frustum_Meths[] = 
{
  { dao_Craft_Frustum_Frustum_dao_3, "Frustum(  )=>Craft::Frustum" },
  { dao_Craft_Frustum_Transform, "Transform( self: Craft::Frustum, transform: Craft::Matrix3 )" },
  { dao_Craft_Frustum_Transform_dao_2, "Transform( self: Craft::Frustum, transform: Craft::Matrix3x4 )" },
  { dao_Craft_Frustum_IsInside, "IsInside( self: Craft::Frustum, point: Craft::Vector3 )=>int" },
  { dao_Craft_Frustum_IsInside_dao_2, "IsInside( self: Craft::Frustum, sphere: Craft::Sphere )=>int" },
  { dao_Craft_Frustum_IsInsideFast, "IsInsideFast( self: Craft::Frustum, sphere: Craft::Sphere )=>int" },
  { dao_Craft_Frustum_IsInside_dao_3, "IsInside( self: Craft::Frustum, box: Craft::BoundingBox )=>int" },
  { dao_Craft_Frustum_IsInsideFast_dao_2, "IsInsideFast( self: Craft::Frustum, box: Craft::BoundingBox )=>int" },
  { dao_Craft_Frustum_Distance, "Distance( self: Craft::Frustum, point: Craft::Vector3 )=>float" },
  { dao_Craft_Frustum_Transformed, "Transformed( self: Craft::Frustum, transform: Craft::Matrix3 )=>Craft::Frustum" },
  { dao_Craft_Frustum_Transformed_dao_2, "Transformed( self: Craft::Frustum, transform: Craft::Matrix3x4 )=>Craft::Frustum" },
  { dao_Craft_Frustum_Projected, "Projected( self: Craft::Frustum, transform: Craft::Matrix4 )=>Craft::Rect" },
  { dao_Craft_Frustum_UpdatePlanes, "UpdatePlanes( self: Craft::Frustum )" },
  { NULL, NULL }
};
static void Dao_Craft_Frustum_Delete( DaoValue *self )
{
	delete (Craft::Frustum*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Frustum_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Frustum* src = (Craft::Frustum*) DaoValue_TryCastCdataTC( self, dao_Craft_Frustum_Core );
	Craft::Frustum* dest;
	if( target ){
		dest = (Craft::Frustum*) DaoValue_TryCastCdataTC( target, dao_Craft_Frustum_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Frustum( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Frustum_Core, dest );
}

static DaoTypeCore Craft_Frustum_Core = 
{
  "Craft::Frustum",
  sizeof(Craft::Frustum),
  { NULL },
  { NULL },
  dao_Craft_Frustum_Nums,
  dao_Craft_Frustum_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Frustum_Copy,
  Dao_Craft_Frustum_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Frustum_Core = & Craft_Frustum_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Frustum_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Frustum _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Transform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Intersection _IsInside = self->IsInside( *point );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_IsInside_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  Craft::Intersection _IsInside = self->IsInside( *sphere );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_IsInsideFast( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  Craft::Intersection _IsInsideFast = self->IsInsideFast( *sphere );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInsideFast );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_IsInside_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  Craft::Intersection _IsInside = self->IsInside( *box );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_IsInsideFast_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  Craft::Intersection _IsInsideFast = self->IsInsideFast( *box );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInsideFast );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Distance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _Distance = self->Distance( *point );
  DaoProcess_PutFloat( _proc, (dao_float) _Distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  Craft::Frustum _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Frustum( _Transformed ), dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  Craft::Frustum _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Frustum( _Transformed ), dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_Projected( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );
  Craft::Matrix4* transform = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix4_Core );

  Craft::Rect _Projected = self->Projected( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Rect( _Projected ), dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Frustum_UpdatePlanes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* self = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );

  self->UpdatePlanes(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Polyhedron_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Polyhedron_Polyhedron_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Polyhedron_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Polyhedron_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_AddFace( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_AddFace_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Clip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Clip_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Clip_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Transform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Polyhedron_Empty( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Polyhedron_Meths[] = 
{
  { dao_Craft_Polyhedron_Polyhedron_dao_5, "Polyhedron(  )=>Craft::Polyhedron" },
  { dao_Craft_Polyhedron_Polyhedron_dao_6, "Polyhedron( box: Craft::BoundingBox )=>Craft::Polyhedron" },
  { dao_Craft_Polyhedron_Polyhedron_dao_7, "Polyhedron( frustum: Craft::Frustum )=>Craft::Polyhedron" },
  { dao_Craft_Polyhedron_Define, "Define( self: Craft::Polyhedron, box: Craft::BoundingBox )" },
  { dao_Craft_Polyhedron_Define_dao_2, "Define( self: Craft::Polyhedron, frustum: Craft::Frustum )" },
  { dao_Craft_Polyhedron_AddFace, "AddFace( self: Craft::Polyhedron, v0: Craft::Vector3, v1: Craft::Vector3, v2: Craft::Vector3 )" },
  { dao_Craft_Polyhedron_AddFace_dao_2, "AddFace( self: Craft::Polyhedron, v0: Craft::Vector3, v1: Craft::Vector3, v2: Craft::Vector3, v3: Craft::Vector3 )" },
  { dao_Craft_Polyhedron_Clip, "Clip( self: Craft::Polyhedron, plane: Craft::Plane )" },
  { dao_Craft_Polyhedron_Clip_dao_2, "Clip( self: Craft::Polyhedron, box: Craft::BoundingBox )" },
  { dao_Craft_Polyhedron_Clip_dao_3, "Clip( self: Craft::Polyhedron, box: Craft::Frustum )" },
  { dao_Craft_Polyhedron_Clear, "Clear( self: Craft::Polyhedron )" },
  { dao_Craft_Polyhedron_Transform, "Transform( self: Craft::Polyhedron, transform: Craft::Matrix3 )" },
  { dao_Craft_Polyhedron_Transform_dao_2, "Transform( self: Craft::Polyhedron, transform: Craft::Matrix3x4 )" },
  { dao_Craft_Polyhedron_Transformed, "Transformed( self: Craft::Polyhedron, transform: Craft::Matrix3 )=>Craft::Polyhedron" },
  { dao_Craft_Polyhedron_Transformed_dao_2, "Transformed( self: Craft::Polyhedron, transform: Craft::Matrix3x4 )=>Craft::Polyhedron" },
  { dao_Craft_Polyhedron_Empty, "Empty( self: Craft::Polyhedron )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Polyhedron_Delete( DaoValue *self )
{
	delete (Craft::Polyhedron*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Polyhedron_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Polyhedron* src = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( self, dao_Craft_Polyhedron_Core );
	Craft::Polyhedron* dest;
	if( target ){
		dest = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( target, dao_Craft_Polyhedron_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Polyhedron( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Polyhedron_Core, dest );
}

static DaoTypeCore Craft_Polyhedron_Core = 
{
  "Craft::Polyhedron",
  sizeof(Craft::Polyhedron),
  { NULL },
  { NULL },
  dao_Craft_Polyhedron_Nums,
  dao_Craft_Polyhedron_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Polyhedron_Copy,
  Dao_Craft_Polyhedron_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Polyhedron_Core = & Craft_Polyhedron_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Polyhedron_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Polyhedron _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Polyhedron_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Polyhedron_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );

  Craft::Polyhedron _self(*box);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Polyhedron_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Polyhedron_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Frustum_Core );

  Craft::Polyhedron _self(*frustum);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Polyhedron_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Define( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Define_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );

  self->Define( *frustum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_AddFace( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Vector3* v0 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* v1 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* v2 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->AddFace( *v0, *v1, *v2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_AddFace_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Vector3* v0 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* v1 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* v2 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Vector3* v3 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Vector3_Core );

  self->AddFace( *v0, *v1, *v2, *v3 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Clip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Plane* plane = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Plane_Core );

  self->Clip( *plane );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Clip_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->Clip( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Clip_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Frustum* box = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );

  self->Clip( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Transform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Transform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  self->Transform( *transform );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Matrix3* transform = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  Craft::Polyhedron _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Polyhedron( _Transformed ), dao_Craft_Polyhedron_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Transformed_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  Craft::Polyhedron _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Polyhedron( _Transformed ), dao_Craft_Polyhedron_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Polyhedron_Empty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Polyhedron* self = (Craft::Polyhedron*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Polyhedron_Core );

  bool _Empty = self->Empty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Empty );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Ray_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Ray_GETF_origin_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_GETF_direction_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_Ray_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_Ray_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_Project( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_Distance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_ClosestPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_HitDistance_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_InsideGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_InsideGeometry_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Ray_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Ray_Meths[] = 
{
  { dao_Craft_Ray_GETF_origin_, ".origin_ ( self: Craft::Ray )=>Craft::Vector3" },
  { dao_Craft_Ray_GETF_direction_, ".direction_ ( self: Craft::Ray )=>Craft::Vector3" },
  { dao_Craft_Ray_Ray_dao_4, "Ray(  )=>Craft::Ray" },
  { dao_Craft_Ray_Ray_dao_5, "Ray( origin: Craft::Vector3, direction: Craft::Vector3 )=>Craft::Ray" },
  { dao_Craft_Ray_Define, "Define( self: Craft::Ray, origin: Craft::Vector3, direction: Craft::Vector3 )" },
  { dao_Craft_Ray_Project, "Project( self: Craft::Ray, point: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Ray_Distance, "Distance( self: Craft::Ray, point: Craft::Vector3 )=>float" },
  { dao_Craft_Ray_ClosestPoint, "ClosestPoint( self: Craft::Ray, ray: Craft::Ray )=>Craft::Vector3" },
  { dao_Craft_Ray_HitDistance, "HitDistance( self: Craft::Ray, plane: Craft::Plane )=>float" },
  { dao_Craft_Ray_HitDistance_dao_2, "HitDistance( self: Craft::Ray, box: Craft::BoundingBox )=>float" },
  { dao_Craft_Ray_HitDistance_dao_3, "HitDistance( self: Craft::Ray, frustum: Craft::Frustum, solidInside: bool =true )=>float" },
  { dao_Craft_Ray_HitDistance_dao_4, "HitDistance( self: Craft::Ray, sphere: Craft::Sphere )=>float" },
  { dao_Craft_Ray_HitDistance_dao_5, "HitDistance( self: Craft::Ray, v0: Craft::Vector3, v1: Craft::Vector3, v2: Craft::Vector3, outNormal: Craft::Vector3|none =none, outBary: Craft::Vector3|none =none )=>float" },
  { dao_Craft_Ray_HitDistance_dao_6, "HitDistance( self: Craft::Ray, vertexData: cdata, vertexStride: int, vertexStart: int, vertexCount: int, outNormal: Craft::Vector3|none =none, outUV: Craft::Vector2|none =none, uvOffset: int =0 )=>float" },
  { dao_Craft_Ray_HitDistance_dao_7, "HitDistance( self: Craft::Ray, vertexData: cdata, vertexStride: int, indexData: cdata, indexSize: int, indexStart: int, indexCount: int, outNormal: Craft::Vector3|none =none, outUV: Craft::Vector2|none =none, uvOffset: int =0 )=>float" },
  { dao_Craft_Ray_InsideGeometry, "InsideGeometry( self: Craft::Ray, vertexData: cdata, vertexSize: int, vertexStart: int, vertexCount: int )=>bool" },
  { dao_Craft_Ray_InsideGeometry_dao_2, "InsideGeometry( self: Craft::Ray, vertexData: cdata, vertexSize: int, indexData: cdata, indexSize: int, indexStart: int, indexCount: int )=>bool" },
  { dao_Craft_Ray_Transformed, "Transformed( self: Craft::Ray, transform: Craft::Matrix3x4 )=>Craft::Ray" },
  { NULL, NULL }
};
static void Dao_Craft_Ray_Delete( DaoValue *self )
{
	delete (Craft::Ray*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Ray_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Ray* src = (Craft::Ray*) DaoValue_TryCastCdataTC( self, dao_Craft_Ray_Core );
	Craft::Ray* dest;
	if( target ){
		dest = (Craft::Ray*) DaoValue_TryCastCdataTC( target, dao_Craft_Ray_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Ray( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Ray_Core, dest );
}

static DaoTypeCore Craft_Ray_Core = 
{
  "Craft::Ray",
  sizeof(Craft::Ray),
  { NULL },
  { NULL },
  dao_Craft_Ray_Nums,
  dao_Craft_Ray_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Ray_Copy,
  Dao_Craft_Ray_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Ray_Core = & Craft_Ray_Core;
static void dao_Craft_Ray_GETF_origin_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray *self = (Craft::Ray*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Ray_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->origin_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Ray_GETF_direction_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray *self = (Craft::Ray*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Ray_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->direction_, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_Ray_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Ray _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Ray_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_Ray_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* origin = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Ray _self(*origin, *direction);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Ray_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Vector3* origin = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->Define( *origin, *direction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_Project( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _Project = self->Project( *point );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _Project ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_Distance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _Distance = self->Distance( *point );
  DaoProcess_PutFloat( _proc, (dao_float) _Distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_ClosestPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Ray* ray = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Ray_Core );

  Craft::Vector3 _ClosestPoint = self->ClosestPoint( *ray );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ClosestPoint ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Plane* plane = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Plane_Core );

  float _HitDistance = self->HitDistance( *plane );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  float _HitDistance = self->HitDistance( *box );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Frustum* frustum = (Craft::Frustum*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Frustum_Core );
  bool solidInside = (bool) DaoValue_TryGetBoolean( _p[2] );

  float _HitDistance = self->HitDistance( *frustum, solidInside );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Sphere* sphere = (Craft::Sphere*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sphere_Core );

  float _HitDistance = self->HitDistance( *sphere );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Vector3* v0 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* v1 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* v2 = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Vector3* outNormal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Vector3_Core );
  Craft::Vector3* outBary = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[5], dao_Craft_Vector3_Core );

  float _HitDistance = self->HitDistance( *v0, *v1, *v2, outNormal, outBary );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  const void* vertexData = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int vertexStride = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  unsigned int vertexStart = (unsigned int) DaoValue_TryGetInteger( _p[3] );
  unsigned int vertexCount = (unsigned int) DaoValue_TryGetInteger( _p[4] );
  Craft::Vector3* outNormal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[5], dao_Craft_Vector3_Core );
  Craft::Vector2* outUV = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[6], dao_Craft_Vector2_Core );
  unsigned int uvOffset = (unsigned int) DaoValue_TryGetInteger( _p[7] );

  float _HitDistance = self->HitDistance( vertexData, vertexStride, vertexStart, vertexCount, outNormal, outUV, uvOffset );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_HitDistance_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  const void* vertexData = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int vertexStride = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  const void* indexData = (const void*) DaoValue_TryGetCdata( _p[3] );
  unsigned int indexSize = (unsigned int) DaoValue_TryGetInteger( _p[4] );
  unsigned int indexStart = (unsigned int) DaoValue_TryGetInteger( _p[5] );
  unsigned int indexCount = (unsigned int) DaoValue_TryGetInteger( _p[6] );
  Craft::Vector3* outNormal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[7], dao_Craft_Vector3_Core );
  Craft::Vector2* outUV = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[8], dao_Craft_Vector2_Core );
  unsigned int uvOffset = (unsigned int) DaoValue_TryGetInteger( _p[9] );

  float _HitDistance = self->HitDistance( vertexData, vertexStride, indexData, indexSize, indexStart, indexCount, outNormal, outUV, uvOffset );
  DaoProcess_PutFloat( _proc, (dao_float) _HitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_InsideGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  const void* vertexData = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int vertexSize = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  unsigned int vertexStart = (unsigned int) DaoValue_TryGetInteger( _p[3] );
  unsigned int vertexCount = (unsigned int) DaoValue_TryGetInteger( _p[4] );

  bool _InsideGeometry = self->InsideGeometry( vertexData, vertexSize, vertexStart, vertexCount );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _InsideGeometry );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_InsideGeometry_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  const void* vertexData = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int vertexSize = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  const void* indexData = (const void*) DaoValue_TryGetCdata( _p[3] );
  unsigned int indexSize = (unsigned int) DaoValue_TryGetInteger( _p[4] );
  unsigned int indexStart = (unsigned int) DaoValue_TryGetInteger( _p[5] );
  unsigned int indexCount = (unsigned int) DaoValue_TryGetInteger( _p[6] );

  bool _InsideGeometry = self->InsideGeometry( vertexData, vertexSize, indexData, indexSize, indexStart, indexCount );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _InsideGeometry );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Ray_Transformed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Ray* self = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Ray_Core );
  Craft::Matrix3x4* transform = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  Craft::Ray _Transformed = self->Transformed( *transform );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Ray( _Transformed ), dao_Craft_Ray_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_IntRect_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_IntRect_GETF_left_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_SETF_left_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_GETF_top_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_SETF_top_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_GETF_right_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_SETF_right_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_GETF_bottom_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_SETF_bottom_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_IntRect_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_IntRect_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_Size( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_Width( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_Height( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_IntRect_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_IntRect_Meths[] = 
{
  { dao_Craft_IntRect_GETF_left_, ".left_ ( self: Craft::IntRect )=>int" },
  { dao_Craft_IntRect_SETF_left_, ".left_=( self: Craft::IntRect, left_: int )" },
  { dao_Craft_IntRect_GETF_top_, ".top_ ( self: Craft::IntRect )=>int" },
  { dao_Craft_IntRect_SETF_top_, ".top_=( self: Craft::IntRect, top_: int )" },
  { dao_Craft_IntRect_GETF_right_, ".right_ ( self: Craft::IntRect )=>int" },
  { dao_Craft_IntRect_SETF_right_, ".right_=( self: Craft::IntRect, right_: int )" },
  { dao_Craft_IntRect_GETF_bottom_, ".bottom_ ( self: Craft::IntRect )=>int" },
  { dao_Craft_IntRect_SETF_bottom_, ".bottom_=( self: Craft::IntRect, bottom_: int )" },
  { dao_Craft_IntRect_IntRect_dao_4, "IntRect(  )=>Craft::IntRect" },
  { dao_Craft_IntRect_IntRect_dao_5, "IntRect( left: int, top: int, right: int, bottom: int )=>Craft::IntRect" },
  { dao_Craft_IntRect_Size, "Size( self: Craft::IntRect )=>Craft::IntVector2" },
  { dao_Craft_IntRect_Width, "Width( self: Craft::IntRect )=>int" },
  { dao_Craft_IntRect_Height, "Height( self: Craft::IntRect )=>int" },
  { dao_Craft_IntRect_IsInside, "IsInside( self: Craft::IntRect, point: Craft::IntVector2 )=>int" },
  { dao_Craft_IntRect_ToString, "ToString( self: Craft::IntRect )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_IntRect_Delete( DaoValue *self )
{
	delete (Craft::IntRect*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_IntRect_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::IntRect* src = (Craft::IntRect*) DaoValue_TryCastCdataTC( self, dao_Craft_IntRect_Core );
	Craft::IntRect* dest;
	if( target ){
		dest = (Craft::IntRect*) DaoValue_TryCastCdataTC( target, dao_Craft_IntRect_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::IntRect( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_IntRect_Core, dest );
}

static DaoTypeCore Craft_IntRect_Core = 
{
  "Craft::IntRect",
  sizeof(Craft::IntRect),
  { NULL },
  { NULL },
  dao_Craft_IntRect_Nums,
  dao_Craft_IntRect_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_IntRect_Copy,
  Dao_Craft_IntRect_Delete,
  NULL
};
DaoTypeCore *dao_Craft_IntRect_Core = & Craft_IntRect_Core;
static void dao_Craft_IntRect_GETF_left_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->left_ );
}
static void dao_Craft_IntRect_SETF_left_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  self->left_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_IntRect_GETF_top_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->top_ );
}
static void dao_Craft_IntRect_SETF_top_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  self->top_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_IntRect_GETF_right_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->right_ );
}
static void dao_Craft_IntRect_SETF_right_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  self->right_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_IntRect_GETF_bottom_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->bottom_ );
}
static void dao_Craft_IntRect_SETF_bottom_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect *self = (Craft::IntRect*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_IntRect_Core);
  self->bottom_ = (int) DaoValue_TryGetInteger(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_IntRect_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::IntRect _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_IntRect_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  int left = (int) DaoValue_TryGetInteger( _p[0] );
  int top = (int) DaoValue_TryGetInteger( _p[1] );
  int right = (int) DaoValue_TryGetInteger( _p[2] );
  int bottom = (int) DaoValue_TryGetInteger( _p[3] );

  Craft::IntRect _self(left, top, right, bottom);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_Size( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect* self = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntRect_Core );

  Craft::IntVector2 _Size = self->Size(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _Size ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_Width( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect* self = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntRect_Core );

  int _Width = self->Width(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _Width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_Height( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect* self = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntRect_Core );

  int _Height = self->Height(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _Height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect* self = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntRect_Core );
  Craft::IntVector2* point = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );

  Craft::Intersection _IsInside = self->IsInside( *point );
  DaoProcess_PutInteger( _proc, (dao_integer) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_IntRect_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect* self = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntRect_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Color_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Color_GETF_r_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SETF_r_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_GETF_g_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SETF_g_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_GETF_b_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SETF_b_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_GETF_a_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SETF_a_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Color_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Color_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Color_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Color_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_ToUInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_ToHSL( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_ToHSV( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_FromHSL( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_FromHSV( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_ToVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_ToVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SumRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Average( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Luma( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Chroma( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Hue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SaturationHSL( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_SaturationHSV( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Value( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Lightness( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Bounds( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_MaxRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_MinRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Range( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Clip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Invert( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Abs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_Equals( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Color_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Color_Meths[] = 
{
  { dao_Craft_Color_GETF_r_, ".r_ ( self: Craft::Color )=>float" },
  { dao_Craft_Color_SETF_r_, ".r_=( self: Craft::Color, r_: float )" },
  { dao_Craft_Color_GETF_g_, ".g_ ( self: Craft::Color )=>float" },
  { dao_Craft_Color_SETF_g_, ".g_=( self: Craft::Color, g_: float )" },
  { dao_Craft_Color_GETF_b_, ".b_ ( self: Craft::Color )=>float" },
  { dao_Craft_Color_SETF_b_, ".b_=( self: Craft::Color, b_: float )" },
  { dao_Craft_Color_GETF_a_, ".a_ ( self: Craft::Color )=>float" },
  { dao_Craft_Color_SETF_a_, ".a_=( self: Craft::Color, a_: float )" },
  { dao_Craft_Color_Color_dao_6, "Color(  )=>Craft::Color" },
  { dao_Craft_Color_Color_dao_7, "Color( color: Craft::Color, a: float )=>Craft::Color" },
  { dao_Craft_Color_Color_dao_8, "Color( r: float, g: float, b: float )=>Craft::Color" },
  { dao_Craft_Color_Color_dao_9, "Color( r: float, g: float, b: float, a: float )=>Craft::Color" },
  { dao_Craft_Color_ToUInt, "ToUInt( self: Craft::Color )=>int" },
  { dao_Craft_Color_ToHSL, "ToHSL( self: Craft::Color )=>Craft::Vector3" },
  { dao_Craft_Color_ToHSV, "ToHSV( self: Craft::Color )=>Craft::Vector3" },
  { dao_Craft_Color_FromHSL, "FromHSL( self: Craft::Color, h: float, s: float, l: float, a: float =1.00 )" },
  { dao_Craft_Color_FromHSV, "FromHSV( self: Craft::Color, h: float, s: float, v: float, a: float =1.00 )" },
  { dao_Craft_Color_ToVector3, "ToVector3( self: Craft::Color )=>Craft::Vector3" },
  { dao_Craft_Color_ToVector4, "ToVector4( self: Craft::Color )=>Craft::Vector4" },
  { dao_Craft_Color_SumRGB, "SumRGB( self: Craft::Color )=>float" },
  { dao_Craft_Color_Average, "Average( self: Craft::Color )=>float" },
  { dao_Craft_Color_Luma, "Luma( self: Craft::Color )=>float" },
  { dao_Craft_Color_Chroma, "Chroma( self: Craft::Color )=>float" },
  { dao_Craft_Color_Hue, "Hue( self: Craft::Color )=>float" },
  { dao_Craft_Color_SaturationHSL, "SaturationHSL( self: Craft::Color )=>float" },
  { dao_Craft_Color_SaturationHSV, "SaturationHSV( self: Craft::Color )=>float" },
  { dao_Craft_Color_Value, "Value( self: Craft::Color )=>float" },
  { dao_Craft_Color_Lightness, "Lightness( self: Craft::Color )=>float" },
  { dao_Craft_Color_Bounds, "Bounds( self: Craft::Color, min: float, max: float, clipped: bool =false )=>tuple<float,float>" },
  { dao_Craft_Color_MaxRGB, "MaxRGB( self: Craft::Color )=>float" },
  { dao_Craft_Color_MinRGB, "MinRGB( self: Craft::Color )=>float" },
  { dao_Craft_Color_Range, "Range( self: Craft::Color )=>float" },
  { dao_Craft_Color_Clip, "Clip( self: Craft::Color, clipAlpha: bool =false )" },
  { dao_Craft_Color_Invert, "Invert( self: Craft::Color, invertAlpha: bool =false )" },
  { dao_Craft_Color_Lerp, "Lerp( self: Craft::Color, rhs: Craft::Color, t: float )=>Craft::Color" },
  { dao_Craft_Color_Abs, "Abs( self: Craft::Color )=>Craft::Color" },
  { dao_Craft_Color_Equals, "Equals( self: Craft::Color, rhs: Craft::Color )=>bool" },
  { dao_Craft_Color_ToString, "ToString( self: Craft::Color )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Color_Delete( DaoValue *self )
{
	delete (Craft::Color*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Color_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Color* src = (Craft::Color*) DaoValue_TryCastCdataTC( self, dao_Craft_Color_Core );
	Craft::Color* dest;
	if( target ){
		dest = (Craft::Color*) DaoValue_TryCastCdataTC( target, dao_Craft_Color_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Color( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Color_Core, dest );
}

static DaoTypeCore Craft_Color_Core = 
{
  "Craft::Color",
  sizeof(Craft::Color),
  { NULL },
  { NULL },
  dao_Craft_Color_Nums,
  dao_Craft_Color_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Color_Copy,
  Dao_Craft_Color_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Color_Core = & Craft_Color_Core;
static void dao_Craft_Color_GETF_r_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->r_ );
}
static void dao_Craft_Color_SETF_r_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  self->r_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Color_GETF_g_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->g_ );
}
static void dao_Craft_Color_SETF_g_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  self->g_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Color_GETF_b_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->b_ );
}
static void dao_Craft_Color_SETF_b_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  self->b_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Color_GETF_a_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->a_ );
}
static void dao_Craft_Color_SETF_a_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color *self = (Craft::Color*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Color_Core);
  self->a_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Color_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Color _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Color_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  float a = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Color _self(*color, a);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Color_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float r = (float) DaoValue_TryGetFloat( _p[0] );
  float g = (float) DaoValue_TryGetFloat( _p[1] );
  float b = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Color _self(r, g, b);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Color_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float r = (float) DaoValue_TryGetFloat( _p[0] );
  float g = (float) DaoValue_TryGetFloat( _p[1] );
  float b = (float) DaoValue_TryGetFloat( _p[2] );
  float a = (float) DaoValue_TryGetFloat( _p[3] );

  Craft::Color _self(r, g, b, a);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_ToUInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  unsigned int _ToUInt = self->ToUInt(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ToUInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_ToHSL( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::Vector3 _ToHSL = self->ToHSL(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ToHSL ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_ToHSV( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::Vector3 _ToHSV = self->ToHSV(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ToHSV ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_FromHSL( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  float h = (float) DaoValue_TryGetFloat( _p[1] );
  float s = (float) DaoValue_TryGetFloat( _p[2] );
  float l = (float) DaoValue_TryGetFloat( _p[3] );
  float a = (float) DaoValue_TryGetFloat( _p[4] );

  self->FromHSL( h, s, l, a );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_FromHSV( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  float h = (float) DaoValue_TryGetFloat( _p[1] );
  float s = (float) DaoValue_TryGetFloat( _p[2] );
  float v = (float) DaoValue_TryGetFloat( _p[3] );
  float a = (float) DaoValue_TryGetFloat( _p[4] );

  self->FromHSV( h, s, v, a );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_ToVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::Vector3 _ToVector3 = self->ToVector3(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ToVector3 ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_ToVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::Vector4 _ToVector4 = self->ToVector4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _ToVector4 ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_SumRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _SumRGB = self->SumRGB(  );
  DaoProcess_PutFloat( _proc, (dao_float) _SumRGB );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Average( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Average = self->Average(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Average );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Luma( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Luma = self->Luma(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Luma );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Chroma( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Chroma = self->Chroma(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Chroma );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Hue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Hue = self->Hue(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Hue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_SaturationHSL( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _SaturationHSL = self->SaturationHSL(  );
  DaoProcess_PutFloat( _proc, (dao_float) _SaturationHSL );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_SaturationHSV( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _SaturationHSV = self->SaturationHSV(  );
  DaoProcess_PutFloat( _proc, (dao_float) _SaturationHSV );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Value( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Value = self->Value(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Lightness( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Lightness = self->Lightness(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Lightness );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Bounds( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  float min = (float) DaoValue_TryGetFloat( _p[1] );
  float max = (float) DaoValue_TryGetFloat( _p[2] );
  bool clipped = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->Bounds( &min, &max, clipped );
  DaoProcess_NewFloat( _proc, (dao_float)min );
  DaoProcess_NewFloat( _proc, (dao_float)max );
  DaoProcess_PutTuple( _proc, -2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_MaxRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _MaxRGB = self->MaxRGB(  );
  DaoProcess_PutFloat( _proc, (dao_float) _MaxRGB );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_MinRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _MinRGB = self->MinRGB(  );
  DaoProcess_PutFloat( _proc, (dao_float) _MinRGB );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Range( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  float _Range = self->Range(  );
  DaoProcess_PutFloat( _proc, (dao_float) _Range );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Clip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  bool clipAlpha = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->Clip( clipAlpha );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Invert( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  bool invertAlpha = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->Invert( invertAlpha );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Lerp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  Craft::Color* rhs = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );
  float t = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Color _Lerp = self->Lerp( *rhs, t );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _Lerp ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Abs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::Color _Abs = self->Abs(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _Abs ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_Equals( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  Craft::Color* rhs = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );

  bool _Equals = self->Equals( *rhs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Equals );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Color_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* self = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_StringHash_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_StringHash_StringHash_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_StringHash_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_StringHash_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_StringHash_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_Value( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_ToHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StringHash_Calculate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_StringHash_Meths[] = 
{
  { dao_Craft_StringHash_StringHash_dao_6, "StringHash(  )=>Craft::StringHash" },
  { dao_Craft_StringHash_StringHash_dao_7, "StringHash( value: int )=>Craft::StringHash" },
  { dao_Craft_StringHash_StringHash_dao_8, "StringHash( str: string )=>Craft::StringHash" },
  { dao_Craft_StringHash_StringHash_dao_9, "StringHash( str: string )=>Craft::StringHash" },
  { dao_Craft_StringHash_Value, "Value( self: Craft::StringHash )=>int" },
  { dao_Craft_StringHash_ToHash, "ToHash( self: Craft::StringHash )=>int" },
  { dao_Craft_StringHash_ToString, "ToString( self: Craft::StringHash )=>string" },
  { dao_Craft_StringHash_Calculate, "Calculate( str: string )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_StringHash_Delete( DaoValue *self )
{
	delete (Craft::StringHash*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_StringHash_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::StringHash* src = (Craft::StringHash*) DaoValue_TryCastCdataTC( self, dao_Craft_StringHash_Core );
	Craft::StringHash* dest;
	if( target ){
		dest = (Craft::StringHash*) DaoValue_TryCastCdataTC( target, dao_Craft_StringHash_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::StringHash( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_StringHash_Core, dest );
}

static DaoTypeCore Craft_StringHash_Core = 
{
  "Craft::StringHash",
  sizeof(Craft::StringHash),
  { NULL },
  { NULL },
  dao_Craft_StringHash_Nums,
  dao_Craft_StringHash_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_StringHash_Copy,
  Dao_Craft_StringHash_Delete,
  NULL
};
DaoTypeCore *dao_Craft_StringHash_Core = & Craft_StringHash_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_StringHash_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_StringHash_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[0] );

  Craft::StringHash _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_StringHash_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const char* str = (const char*) DaoValue_TryGetChars( _p[0] );

  Craft::StringHash _self(str);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_StringHash_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_str = DaoValue_TryGetString( _p[0] );
  Craft::String str( DString_GetData( __str_str ), DString_Size( __str_str ) );

  Craft::StringHash _self(str);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_Value( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StringHash* self = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StringHash_Core );

  unsigned int _Value = self->Value(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _Value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_ToHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StringHash* self = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StringHash_Core );

  unsigned int _ToHash = self->ToHash(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ToHash );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StringHash* self = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StringHash_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StringHash_Calculate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const char* str = (const char*) DaoValue_TryGetChars( _p[0] );

  unsigned int _Calculate = Craft::StringHash::Calculate( str );
  DaoProcess_PutInteger( _proc, (dao_integer) _Calculate );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_StringVector_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_StringVector_StringVector( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_StringVector_Meths[] = 
{
  { dao_Craft_StringVector_StringVector, "StringVector(  )=>StringVector" },
  { NULL, NULL }
};
static void Dao_Craft_StringVector_Delete( DaoValue *self )
{
	delete (Craft::StringVector*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_StringVector_Core = 
{
  "Craft::StringVector",
  sizeof(Craft::StringVector),
  { NULL },
  { NULL },
  dao_Craft_StringVector_Nums,
  dao_Craft_StringVector_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_StringVector_Delete,
  NULL
};
DaoTypeCore *dao_Craft_StringVector_Core = & Craft_StringVector_Core;
static void dao_Craft_StringVector_StringVector( DaoProcess *_proc, DaoValue *_p[], int _n )
{
	Craft::StringVector *self = Dao_Craft_StringVector_New();
	DaoProcess_PutCdataTC( _proc, self, dao_Craft_StringVector_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_VariantMap_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_VariantMap_VariantMap( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_VariantMap_Meths[] = 
{
  { dao_Craft_VariantMap_VariantMap, "VariantMap(  )=>VariantMap" },
  { NULL, NULL }
};
static void Dao_Craft_VariantMap_Delete( DaoValue *self )
{
	delete (Craft::VariantMap*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_VariantMap_Core = 
{
  "Craft::VariantMap",
  sizeof(Craft::VariantMap),
  { NULL },
  { NULL },
  dao_Craft_VariantMap_Nums,
  dao_Craft_VariantMap_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_VariantMap_Delete,
  NULL
};
DaoTypeCore *dao_Craft_VariantMap_Core = & Craft_VariantMap_Core;
static void dao_Craft_VariantMap_VariantMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
	Craft::VariantMap *self = Dao_Craft_VariantMap_New();
	DaoProcess_PutCdataTC( _proc, self, dao_Craft_VariantMap_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_RefCounted_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_RefCounted_RefCounted_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_RefCounted_Meths[] = 
{
  { dao_Craft_RefCounted_RefCounted_dao_2, "RefCounted(  )=>Craft::RefCounted" },
  { NULL, NULL }
};
static void Dao_Craft_RefCounted_Delete( DaoValue *self )
{
	Craft::RefCounted *obj = (Craft::RefCounted*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_RefCounted_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_RefCounted *self = (DaoCxx_Craft_RefCounted*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}

static DaoTypeCore Craft_RefCounted_Core = 
{
  "Craft::RefCounted",
  sizeof(Craft::RefCounted),
  { NULL },
  { NULL },
  dao_Craft_RefCounted_Nums,
  dao_Craft_RefCounted_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_RefCounted_Delete,
  Dao_Craft_RefCounted_HandleGC
};
DaoTypeCore *dao_Craft_RefCounted_Core = & Craft_RefCounted_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RefCounted_RefCounted_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  DaoCxx_Craft_RefCounted *_self = new DaoCxx_Craft_RefCounted(  );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Variant_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Variant_Variant_dao_26( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_27( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_28( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_29( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_30( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_31( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_32( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_33( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_34( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_35( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_36( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_37( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_38( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_39( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_40( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_41( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_42( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_43( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_44( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_45( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_46( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_47( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_48( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Variant_dao_49( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_FromString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_FromString_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_FromString_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_FromString_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetUInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetStringHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetBool( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetFloat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetDouble( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetIntRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_IsZero( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_IsEmpty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetTypeName_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetTypeFromName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Variant_GetTypeFromName_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Variant_Meths[] = 
{
  { dao_Craft_Variant_Variant_dao_26, "Variant(  )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_27, "Variant( value: int )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_28, "Variant( value: int )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_29, "Variant( value: Craft::StringHash )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_30, "Variant( value: bool )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_31, "Variant( value: float )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_32, "Variant( value: float )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_33, "Variant( value: Craft::Vector2 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_34, "Variant( value: Craft::Vector3 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_35, "Variant( value: Craft::Vector4 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_36, "Variant( value: Craft::Quaternion )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_37, "Variant( value: Craft::Color )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_38, "Variant( value: string )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_39, "Variant( value: string )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_40, "Variant( value: Craft::VariantMap )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_41, "Variant( value: Craft::IntRect )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_42, "Variant( value: Craft::IntVector2 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_43, "Variant( value: Craft::Matrix3 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_44, "Variant( value: Craft::Matrix3x4 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_45, "Variant( value: Craft::Matrix4 )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_46, "Variant( type: string, value: string )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_47, "Variant( type: int, value: string )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_48, "Variant( type: string, value: string )=>Craft::Variant" },
  { dao_Craft_Variant_Variant_dao_49, "Variant( type: int, value: string )=>Craft::Variant" },
  { dao_Craft_Variant_Clear, "Clear( self: Craft::Variant )" },
  { dao_Craft_Variant_FromString, "FromString( self: Craft::Variant, type: string, value: string )" },
  { dao_Craft_Variant_FromString_dao_2, "FromString( self: Craft::Variant, type: string, value: string )" },
  { dao_Craft_Variant_FromString_dao_3, "FromString( self: Craft::Variant, type: int, value: string )" },
  { dao_Craft_Variant_FromString_dao_4, "FromString( self: Craft::Variant, type: int, value: string )" },
  { dao_Craft_Variant_GetInt, "GetInt( self: Craft::Variant )=>int" },
  { dao_Craft_Variant_GetUInt, "GetUInt( self: Craft::Variant )=>int" },
  { dao_Craft_Variant_GetStringHash, "GetStringHash( self: Craft::Variant )=>Craft::StringHash" },
  { dao_Craft_Variant_GetBool, "GetBool( self: Craft::Variant )=>bool" },
  { dao_Craft_Variant_GetFloat, "GetFloat( self: Craft::Variant )=>float" },
  { dao_Craft_Variant_GetDouble, "GetDouble( self: Craft::Variant )=>float" },
  { dao_Craft_Variant_GetVector2, "GetVector2( self: Craft::Variant )=>Craft::Vector2" },
  { dao_Craft_Variant_GetVector3, "GetVector3( self: Craft::Variant )=>Craft::Vector3" },
  { dao_Craft_Variant_GetVector4, "GetVector4( self: Craft::Variant )=>Craft::Vector4" },
  { dao_Craft_Variant_GetQuaternion, "GetQuaternion( self: Craft::Variant )=>Craft::Quaternion" },
  { dao_Craft_Variant_GetColor, "GetColor( self: Craft::Variant )=>Craft::Color" },
  { dao_Craft_Variant_GetString, "GetString( self: Craft::Variant )=>string" },
  { dao_Craft_Variant_GetVariantMap, "GetVariantMap( self: Craft::Variant )=>Craft::VariantMap" },
  { dao_Craft_Variant_GetIntRect, "GetIntRect( self: Craft::Variant )=>Craft::IntRect" },
  { dao_Craft_Variant_GetIntVector2, "GetIntVector2( self: Craft::Variant )=>Craft::IntVector2" },
  { dao_Craft_Variant_GetMatrix3, "GetMatrix3( self: Craft::Variant )=>Craft::Matrix3" },
  { dao_Craft_Variant_GetMatrix3x4, "GetMatrix3x4( self: Craft::Variant )=>Craft::Matrix3x4" },
  { dao_Craft_Variant_GetMatrix4, "GetMatrix4( self: Craft::Variant )=>Craft::Matrix4" },
  { dao_Craft_Variant_GetType, "GetType( self: Craft::Variant )=>int" },
  { dao_Craft_Variant_GetTypeName, "GetTypeName( self: Craft::Variant )=>string" },
  { dao_Craft_Variant_ToString, "ToString( self: Craft::Variant )=>string" },
  { dao_Craft_Variant_IsZero, "IsZero( self: Craft::Variant )=>bool" },
  { dao_Craft_Variant_IsEmpty, "IsEmpty( self: Craft::Variant )=>bool" },
  { dao_Craft_Variant_GetTypeName_dao_2, "GetTypeName( type: int )=>string" },
  { dao_Craft_Variant_GetTypeFromName, "GetTypeFromName( typeName: string )=>int" },
  { dao_Craft_Variant_GetTypeFromName_dao_2, "GetTypeFromName( typeName: string )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_Variant_Delete( DaoValue *self )
{
	delete (Craft::Variant*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Variant_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Variant* src = (Craft::Variant*) DaoValue_TryCastCdataTC( self, dao_Craft_Variant_Core );
	Craft::Variant* dest;
	if( target ){
		dest = (Craft::Variant*) DaoValue_TryCastCdataTC( target, dao_Craft_Variant_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Variant( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Variant_Core, dest );
}

static DaoTypeCore Craft_Variant_Core = 
{
  "Craft::Variant",
  sizeof(Craft::Variant),
  { NULL },
  { NULL },
  dao_Craft_Variant_Nums,
  dao_Craft_Variant_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Variant_Copy,
  Dao_Craft_Variant_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Variant_Core = & Craft_Variant_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_26( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Variant _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_27( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  int value = (int) DaoValue_TryGetInteger( _p[0] );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_28( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[0] );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_29( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StringHash* value = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StringHash_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_30( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  bool value = (bool) DaoValue_TryGetBoolean( _p[0] );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_31( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float value = (float) DaoValue_TryGetFloat( _p[0] );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_32( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  double value = (double) DaoValue_TryGetFloat( _p[0] );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_33( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector2* value = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector2_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_34( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector3* value = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector3_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_35( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Vector4* value = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Vector4_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_36( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Quaternion* value = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Quaternion_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_37( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* value = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_38( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_value = DaoValue_TryGetString( _p[0] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_39( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const char* value = (const char*) DaoValue_TryGetChars( _p[0] );

  Craft::Variant _self(value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_40( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::VariantMap* value = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_VariantMap_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_41( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntRect* value = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntRect_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_42( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::IntVector2* value = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_IntVector2_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_43( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3* value = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_44( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix3x4* value = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix3x4_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_45( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Matrix4* value = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Matrix4_Core );

  Craft::Variant _self(*value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_46( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_type = DaoValue_TryGetString( _p[0] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  Craft::Variant _self(type, value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_47( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[0] );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  Craft::Variant _self(type, value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_48( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const char* type = (const char*) DaoValue_TryGetChars( _p[0] );
  const char* value = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::Variant _self(type, value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Variant_dao_49( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[0] );
  const char* value = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::Variant _self(type, value);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_FromString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );
  DString *__str_value = DaoValue_TryGetString( _p[2] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  self->FromString( type, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_FromString_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );
  const char* type = (const char*) DaoValue_TryGetChars( _p[1] );
  const char* value = (const char*) DaoValue_TryGetChars( _p[2] );

  self->FromString( type, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_FromString_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[1] );
  DString *__str_value = DaoValue_TryGetString( _p[2] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  self->FromString( type, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_FromString_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[1] );
  const char* value = (const char*) DaoValue_TryGetChars( _p[2] );

  self->FromString( type, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  int _GetInt = self->GetInt(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetUInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  unsigned int _GetUInt = self->GetUInt(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetStringHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  Craft::StringHash _GetStringHash = self->GetStringHash(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetStringHash ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetBool( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  bool _GetBool = self->GetBool(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetBool );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetFloat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  float _GetFloat = self->GetFloat(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFloat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetDouble( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  double _GetDouble = self->GetDouble(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDouble );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Vector2& _GetVector2 = self->GetVector2(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVector2, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Vector3& _GetVector3 = self->GetVector3(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVector3, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Vector4& _GetVector4 = self->GetVector4(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVector4, dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Quaternion& _GetQuaternion = self->GetQuaternion(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetQuaternion, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Color& _GetColor = self->GetColor(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetColor, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::String& _GetString = self->GetString(  );
  DaoProcess_PutBytes( _proc, (char*) _GetString.CString(), _GetString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::VariantMap& _GetVariantMap = self->GetVariantMap(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVariantMap, dao_Craft_VariantMap_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetIntRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::IntRect& _GetIntRect = self->GetIntRect(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetIntRect, dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::IntVector2& _GetIntVector2 = self->GetIntVector2(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetIntVector2, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Matrix3& _GetMatrix3 = self->GetMatrix3(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMatrix3, dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Matrix3x4& _GetMatrix3x4 = self->GetMatrix3x4(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMatrix3x4, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  const Craft::Matrix4& _GetMatrix4 = self->GetMatrix4(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMatrix4, dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  Craft::VariantType _GetType = self->GetType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  Craft::String _GetTypeName = self->GetTypeName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeName.CString(), _GetTypeName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  Craft::String _ToString = self->ToString(  );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_IsZero( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  bool _IsZero = self->IsZero(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsZero );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_IsEmpty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Variant* self = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Variant_Core );

  bool _IsEmpty = self->IsEmpty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEmpty );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetTypeName_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[0] );

  Craft::String _GetTypeName = Craft::Variant::GetTypeName( type );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeName.CString(), _GetTypeName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetTypeFromName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_typeName = DaoValue_TryGetString( _p[0] );
  Craft::String typeName( DString_GetData( __str_typeName ), DString_Size( __str_typeName ) );

  Craft::VariantType _GetTypeFromName = Craft::Variant::GetTypeFromName( typeName );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTypeFromName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Variant_GetTypeFromName_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const char* typeName = (const char*) DaoValue_TryGetChars( _p[0] );

  Craft::VariantType _GetTypeFromName = Craft::Variant::GetTypeFromName( typeName );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTypeFromName );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Spline_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Spline_Spline_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_Spline_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_GetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_GetKnot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_GetPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_SetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_SetKnot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_AddKnot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_AddKnot_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_RemoveKnot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_RemoveKnot_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Spline_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Spline_Meths[] = 
{
  { dao_Craft_Spline_Spline_dao_4, "Spline(  )=>Craft::Spline" },
  { dao_Craft_Spline_Spline_dao_5, "Spline( mode: int )=>Craft::Spline" },
  { dao_Craft_Spline_GetInterpolationMode, "GetInterpolationMode( self: Craft::Spline )=>int" },
  { dao_Craft_Spline_GetKnot, "GetKnot( self: Craft::Spline, index: int )=>Craft::Variant" },
  { dao_Craft_Spline_GetPoint, "GetPoint( self: Craft::Spline, f: float )=>Craft::Variant" },
  { dao_Craft_Spline_SetInterpolationMode, "SetInterpolationMode( self: Craft::Spline, interpolationMode: int )" },
  { dao_Craft_Spline_SetKnot, "SetKnot( self: Craft::Spline, knot: Craft::Variant, index: int )" },
  { dao_Craft_Spline_AddKnot, "AddKnot( self: Craft::Spline, knot: Craft::Variant )" },
  { dao_Craft_Spline_AddKnot_dao_2, "AddKnot( self: Craft::Spline, knot: Craft::Variant, index: int )" },
  { dao_Craft_Spline_RemoveKnot, "RemoveKnot( self: Craft::Spline )" },
  { dao_Craft_Spline_RemoveKnot_dao_2, "RemoveKnot( self: Craft::Spline, index: int )" },
  { dao_Craft_Spline_Clear, "Clear( self: Craft::Spline )" },
  { NULL, NULL }
};
static void Dao_Craft_Spline_Delete( DaoValue *self )
{
	delete (Craft::Spline*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Spline_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Spline* src = (Craft::Spline*) DaoValue_TryCastCdataTC( self, dao_Craft_Spline_Core );
	Craft::Spline* dest;
	if( target ){
		dest = (Craft::Spline*) DaoValue_TryCastCdataTC( target, dao_Craft_Spline_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Spline( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Spline_Core, dest );
}

static DaoTypeCore Craft_Spline_Core = 
{
  "Craft::Spline",
  sizeof(Craft::Spline),
  { NULL },
  { NULL },
  dao_Craft_Spline_Nums,
  dao_Craft_Spline_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Spline_Copy,
  Dao_Craft_Spline_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Spline_Core = & Craft_Spline_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_Spline_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Spline _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Spline_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_Spline_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::InterpolationMode mode = (Craft::InterpolationMode) DaoValue_TryGetInteger( _p[0] );

  Craft::Spline _self(mode);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Spline_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_GetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );

  Craft::InterpolationMode _GetInterpolationMode = self->GetInterpolationMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetInterpolationMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_GetKnot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Variant _GetKnot = self->GetKnot( index );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetKnot ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_GetPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  float f = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Variant _GetPoint = self->GetPoint( f );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetPoint ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_SetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  Craft::InterpolationMode interpolationMode = (Craft::InterpolationMode) DaoValue_TryGetInteger( _p[1] );

  self->SetInterpolationMode( interpolationMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_SetKnot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  Craft::Variant* knot = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->SetKnot( *knot, index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_AddKnot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  Craft::Variant* knot = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );

  self->AddKnot( *knot );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_AddKnot_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  Craft::Variant* knot = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->AddKnot( *knot, index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_RemoveKnot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );

  self->RemoveKnot(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_RemoveKnot_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveKnot( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Spline_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Spline* self = (Craft::Spline*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Spline_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Context_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Context_Context_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Context_RegisterSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Context_RemoveSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Context_GetSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Context_GetEventSender( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Context_GetEventHandler( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Context_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Context_Meths[] = 
{
  { dao_Craft_Context_Context_dao_2, "Context(  )=>Craft::Context" },
  { dao_Craft_Context_RegisterSubsystem, "RegisterSubsystem( self: Craft::Context, subsystem: Craft::Object )" },
  { dao_Craft_Context_RemoveSubsystem, "RemoveSubsystem( self: Craft::Context, objectType: Craft::StringHash )" },
  { dao_Craft_Context_GetSubsystem, "GetSubsystem( self: Craft::Context, type: Craft::StringHash )=>Craft::Object" },
  { dao_Craft_Context_GetEventSender, "GetEventSender( self: Craft::Context )=>Craft::Object" },
  { dao_Craft_Context_GetEventHandler, "GetEventHandler( self: Craft::Context )=>Craft::EventHandler" },
  { dao_Craft_Context_GetTypeName, "GetTypeName( self: Craft::Context, objectType: Craft::StringHash )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Context_Delete( DaoValue *self )
{
	Craft::Context *obj = (Craft::Context*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Context_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Context *self = (DaoCxx_Craft_Context*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Context_Craft_RefCounted( void *data, int down )
{
	if( down ) return static_cast<Craft::Context*>((Craft::RefCounted*)data);
	return dynamic_cast<Craft::RefCounted*>((Craft::Context*)data);
}

static DaoTypeCore Craft_Context_Core = 
{
  "Craft::Context",
  sizeof(Craft::Context),
  { dao_Craft_RefCounted_Core, NULL },
  { dao_cast_Craft_Context_Craft_RefCounted,NULL },
  dao_Craft_Context_Nums,
  dao_Craft_Context_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Context_Delete,
  Dao_Craft_Context_HandleGC
};
DaoTypeCore *dao_Craft_Context_Core = & Craft_Context_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_Context_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  DaoCxx_Craft_Context *_self = new DaoCxx_Craft_Context(  );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_RegisterSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* self = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );
  Craft::Object* subsystem = (Craft::Object*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Object_Core );

  self->RegisterSubsystem( subsystem );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_RemoveSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* self = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );
  Craft::StringHash* objectType = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  self->RemoveSubsystem( *objectType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_GetSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* self = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  Craft::Object* _GetSubsystem = self->GetSubsystem( *type );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSubsystem, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_GetEventSender( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* self = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Object* _GetEventSender = self->GetEventSender(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEventSender, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_GetEventHandler( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* self = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::EventHandler* _GetEventHandler = self->GetEventHandler(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEventHandler, dao_Craft_EventHandler_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Context_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* self = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );
  Craft::StringHash* objectType = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  const Craft::String& _GetTypeName = self->GetTypeName( *objectType );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeName.CString(), _GetTypeName.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_EventHandler_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_EventHandler_EventHandler_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_EventHandler_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_SetSenderAndEventType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_Invoke( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_Clone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_GetReceiver( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_GetSender( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_GetEventType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_EventHandler_GetUserData( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_EventHandler_Meths[] = 
{
  { dao_Craft_EventHandler_EventHandler_dao_3, "EventHandler( receiver: Craft::Object )=>Craft::EventHandler" },
  { dao_Craft_EventHandler_EventHandler_dao_4, "EventHandler( receiver: Craft::Object, userData: cdata )=>Craft::EventHandler" },
  { dao_Craft_EventHandler_SetSenderAndEventType, "SetSenderAndEventType( self: Craft::EventHandler, sender: Craft::Object, eventType: Craft::StringHash )" },
  { dao_Craft_EventHandler_Invoke, "Invoke( self: Craft::EventHandler, eventData: Craft::VariantMap )" },
  { dao_Craft_EventHandler_Clone, "Clone( self: Craft::EventHandler )=>Craft::EventHandler" },
  { dao_Craft_EventHandler_GetReceiver, "GetReceiver( self: Craft::EventHandler )=>Craft::Object" },
  { dao_Craft_EventHandler_GetSender, "GetSender( self: Craft::EventHandler )=>Craft::Object" },
  { dao_Craft_EventHandler_GetEventType, "GetEventType( self: Craft::EventHandler )=>Craft::StringHash" },
  { dao_Craft_EventHandler_GetUserData, "GetUserData( self: Craft::EventHandler )=>cdata" },
  { NULL, NULL }
};
static void Dao_Craft_EventHandler_Delete( DaoValue *self )
{
	Craft::EventHandler *obj = (Craft::EventHandler*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_EventHandler_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_EventHandler *self = (DaoCxx_Craft_EventHandler*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Subscribed( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}

static DaoTypeCore Craft_EventHandler_Core = 
{
  "Craft::EventHandler",
  sizeof(Craft::EventHandler),
  { NULL },
  { NULL },
  dao_Craft_EventHandler_Nums,
  dao_Craft_EventHandler_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_EventHandler_Delete,
  Dao_Craft_EventHandler_HandleGC
};
DaoTypeCore *dao_Craft_EventHandler_Core = & Craft_EventHandler_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_EventHandler_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* receiver = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  DaoCxx_Craft_EventHandler *_self = new DaoCxx_Craft_EventHandler( receiver );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_EventHandler_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* receiver = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );
  void* userData = (void*) DaoValue_TryGetCdata( _p[1] );

  DaoCxx_Craft_EventHandler *_self = new DaoCxx_Craft_EventHandler( receiver, userData );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_SetSenderAndEventType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );
  Craft::Object* sender = (Craft::Object*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Object_Core );
  Craft::StringHash* eventType = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_StringHash_Core );

  self->SetSenderAndEventType( sender, *eventType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_Invoke( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );
  Craft::VariantMap* eventData = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_VariantMap_Core );

  self->Invoke( *eventData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_Clone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );

  Craft::EventHandler* _Clone = self->Clone(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _Clone, dao_Craft_EventHandler_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_GetReceiver( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );

  Craft::Object* _GetReceiver = self->GetReceiver(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetReceiver, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_GetSender( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );

  Craft::Object* _GetSender = self->GetSender(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSender, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_GetEventType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );

  const Craft::StringHash& _GetEventType = self->GetEventType(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetEventType, dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_EventHandler_GetUserData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::EventHandler* self = (Craft::EventHandler*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_EventHandler_Core );

  void* _GetUserData = self->GetUserData(  );
  DaoProcess_WrapCdata( _proc, (void*) _GetUserData, NULL );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Object_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Object_Object_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_OnEvent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_SubscribeToEvent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_SubscribeToEvent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_UnsubscribeFromEvent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_UnsubscribeFromEvent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_UnsubscribeFromEvents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_UnsubscribeFromAllEvents( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_SendEvent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_SendEvent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_GetContext( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_GetSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_GetEventSender( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_GetEventHandler( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_HasSubscribedToEvent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Object_HasSubscribedToEvent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_HasEventHandlers( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Object_GetCategory( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Object_Meths[] = 
{
  { dao_Craft_Object_Object_dao_2, "Object(  )=>Craft::Object" },
  { dao_Craft_Object_OnEvent, "OnEvent( self: Craft::Object, sender: Craft::Object, eventType: Craft::StringHash, eventData: Craft::VariantMap )" },
  { dao_Craft_Object_SubscribeToEvent, "SubscribeToEvent( self: Craft::Object, eventType :string, handler: Craft::EventHandler )" },
  { dao_Craft_Object_SubscribeToEvent_dao_2, "SubscribeToEvent( self: Craft::Object, sender: Craft::Object, eventType :string, handler: Craft::EventHandler )" },
  { dao_Craft_Object_UnsubscribeFromEvent, "UnsubscribeFromEvent( self: Craft::Object, eventType :string )" },
  { dao_Craft_Object_UnsubscribeFromEvent_dao_2, "UnsubscribeFromEvent( self: Craft::Object, sender: Craft::Object, eventType :string )" },
  { dao_Craft_Object_UnsubscribeFromEvents, "UnsubscribeFromEvents( self: Craft::Object, sender: Craft::Object )" },
  { dao_Craft_Object_UnsubscribeFromAllEvents, "UnsubscribeFromAllEvents( self: Craft::Object )" },
  { dao_Craft_Object_SendEvent, "SendEvent( self: Craft::Object, eventType :string )" },
  { dao_Craft_Object_SendEvent_dao_2, "SendEvent( self: Craft::Object, eventType :string, eventData: Craft::VariantMap )" },
  { dao_Craft_Object_GetContext, "GetContext( self: Craft::Object )=>Craft::Context" },
  { dao_Craft_Object_GetSubsystem, "GetSubsystem( self: Craft::Object, type: Craft::StringHash )=>Craft::Object" },
  { dao_Craft_Object_GetEventSender, "GetEventSender( self: Craft::Object )=>Craft::Object" },
  { dao_Craft_Object_GetEventHandler, "GetEventHandler( self: Craft::Object )=>Craft::EventHandler" },
  { dao_Craft_Object_HasSubscribedToEvent, "HasSubscribedToEvent( self: Craft::Object, eventType :string )=>bool" },
  { dao_Craft_Object_HasSubscribedToEvent_dao_2, "HasSubscribedToEvent( self: Craft::Object, sender: Craft::Object, eventType :string )=>bool" },
  { dao_Craft_Object_HasEventHandlers, "HasEventHandlers( self: Craft::Object )=>bool" },
  { dao_Craft_Object_GetCategory, "GetCategory( self: Craft::Object )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Object_Delete( DaoValue *self )
{
	Craft::Object *obj = (Craft::Object*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Object_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Object *self = (DaoCxx_Craft_Object*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Object_Craft_RefCounted( void *data, int down )
{
	if( down ) return static_cast<Craft::Object*>((Craft::RefCounted*)data);
	return dynamic_cast<Craft::RefCounted*>((Craft::Object*)data);
}

static DaoTypeCore Craft_Object_Core = 
{
  "Craft::Object",
  sizeof(Craft::Object),
  { dao_Craft_RefCounted_Core, NULL },
  { dao_cast_Craft_Object_Craft_RefCounted,NULL },
  dao_Craft_Object_Nums,
  dao_Craft_Object_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Object_Delete,
  Dao_Craft_Object_HandleGC
};
DaoTypeCore *dao_Craft_Object_Core = & Craft_Object_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_Object_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Object *_self = new DaoCxx_Craft_Object( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_OnEvent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );
  Craft::Object* sender = (Craft::Object*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Object_Core );
  Craft::StringHash* eventType = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_StringHash_Core );
  Craft::VariantMap* eventData = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_VariantMap_Core );

  self->OnEvent( sender, *eventType, *eventData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_UnsubscribeFromEvents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );
  Craft::Object* sender = (Craft::Object*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Object_Core );

  self->UnsubscribeFromEvents( sender );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_UnsubscribeFromAllEvents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  self->UnsubscribeFromAllEvents(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_GetContext( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  Craft::Context* _GetContext = self->GetContext(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetContext, dao_Craft_Context_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_GetSubsystem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  Craft::Object* _GetSubsystem = self->GetSubsystem( *type );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSubsystem, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_GetEventSender( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  Craft::Object* _GetEventSender = self->GetEventSender(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEventSender, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_GetEventHandler( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  Craft::EventHandler* _GetEventHandler = self->GetEventHandler(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEventHandler, dao_Craft_EventHandler_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_HasEventHandlers( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  bool _HasEventHandlers = self->HasEventHandlers(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasEventHandlers );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Object_GetCategory( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Object* self = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );

  const Craft::String& _GetCategory = self->GetCategory(  );
  DaoProcess_PutBytes( _proc, (char*) _GetCategory.CString(), _GetCategory.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_TypeInfo_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_TypeInfo_TypeInfo_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TypeInfo_IsTypeOf( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TypeInfo_IsTypeOf_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TypeInfo_GetType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TypeInfo_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TypeInfo_GetBaseTypeInfo( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_TypeInfo_Meths[] = 
{
  { dao_Craft_TypeInfo_TypeInfo_dao_2, "TypeInfo( typeName: string, baseTypeInfo: Craft::TypeInfo )=>Craft::TypeInfo" },
  { dao_Craft_TypeInfo_IsTypeOf, "IsTypeOf( self: Craft::TypeInfo, type: Craft::StringHash )=>bool" },
  { dao_Craft_TypeInfo_IsTypeOf_dao_2, "IsTypeOf( self: Craft::TypeInfo, typeInfo: Craft::TypeInfo )=>bool" },
  { dao_Craft_TypeInfo_GetType, "GetType( self: Craft::TypeInfo )=>Craft::StringHash" },
  { dao_Craft_TypeInfo_GetTypeName, "GetTypeName( self: Craft::TypeInfo )=>string" },
  { dao_Craft_TypeInfo_GetBaseTypeInfo, "GetBaseTypeInfo( self: Craft::TypeInfo )=>Craft::TypeInfo" },
  { NULL, NULL }
};
static void Dao_Craft_TypeInfo_Delete( DaoValue *self )
{
	delete (Craft::TypeInfo*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_TypeInfo_Core = 
{
  "Craft::TypeInfo",
  sizeof(Craft::TypeInfo),
  { NULL },
  { NULL },
  dao_Craft_TypeInfo_Nums,
  dao_Craft_TypeInfo_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_TypeInfo_Delete,
  NULL
};
DaoTypeCore *dao_Craft_TypeInfo_Core = & Craft_TypeInfo_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TypeInfo_TypeInfo_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  const char* typeName = (const char*) DaoValue_TryGetChars( _p[0] );
  Craft::TypeInfo* baseTypeInfo = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_TypeInfo_Core );

  Craft::TypeInfo *_self = new Craft::TypeInfo( typeName, baseTypeInfo );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_TypeInfo_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TypeInfo_IsTypeOf( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TypeInfo* self = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TypeInfo_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  bool _IsTypeOf = self->IsTypeOf( *type );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsTypeOf );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TypeInfo_IsTypeOf_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TypeInfo* self = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TypeInfo_Core );
  Craft::TypeInfo* typeInfo = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_TypeInfo_Core );

  bool _IsTypeOf = self->IsTypeOf( typeInfo );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsTypeOf );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TypeInfo_GetType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TypeInfo* self = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TypeInfo_Core );

  Craft::StringHash _GetType = self->GetType(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetType ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TypeInfo_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TypeInfo* self = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TypeInfo_Core );

  const Craft::String& _GetTypeName = self->GetTypeName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeName.CString(), _GetTypeName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TypeInfo_GetBaseTypeInfo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TypeInfo* self = (Craft::TypeInfo*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TypeInfo_Core );

  const Craft::TypeInfo* _GetBaseTypeInfo = self->GetBaseTypeInfo(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetBaseTypeInfo, dao_Craft_TypeInfo_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ObjectFactory_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ObjectFactory_GetContext( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectFactory_GetType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectFactory_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ObjectFactory_Meths[] = 
{
  { dao_Craft_ObjectFactory_GetContext, "GetContext( self: Craft::ObjectFactory )=>Craft::Context" },
  { dao_Craft_ObjectFactory_GetType, "GetType( self: Craft::ObjectFactory )=>Craft::StringHash" },
  { dao_Craft_ObjectFactory_GetTypeName, "GetTypeName( self: Craft::ObjectFactory )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_ObjectFactory_Delete( DaoValue *self )
{
	Craft::ObjectFactory *obj = (Craft::ObjectFactory*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ObjectFactory_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ObjectFactory *self = (DaoCxx_Craft_ObjectFactory*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ObjectFactory_Craft_RefCounted( void *data, int down )
{
	if( down ) return static_cast<Craft::ObjectFactory*>((Craft::RefCounted*)data);
	return dynamic_cast<Craft::RefCounted*>((Craft::ObjectFactory*)data);
}

static DaoTypeCore Craft_ObjectFactory_Core = 
{
  "Craft::ObjectFactory",
  sizeof(Craft::ObjectFactory),
  { dao_Craft_RefCounted_Core, NULL },
  { dao_cast_Craft_ObjectFactory_Craft_RefCounted,NULL },
  dao_Craft_ObjectFactory_Nums,
  dao_Craft_ObjectFactory_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ObjectFactory_Delete,
  Dao_Craft_ObjectFactory_HandleGC
};
DaoTypeCore *dao_Craft_ObjectFactory_Core = & Craft_ObjectFactory_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectFactory_GetContext( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectFactory* self = (Craft::ObjectFactory*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectFactory_Core );

  Craft::Context* _GetContext = self->GetContext(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetContext, dao_Craft_Context_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectFactory_GetType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectFactory* self = (Craft::ObjectFactory*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectFactory_Core );

  Craft::StringHash _GetType = self->GetType(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetType ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectFactory_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectFactory* self = (Craft::ObjectFactory*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectFactory_Core );

  const Craft::String& _GetTypeName = self->GetTypeName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeName.CString(), _GetTypeName.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Timer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Timer_Timer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Timer_GetMSec( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Timer_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Timer_Meths[] = 
{
  { dao_Craft_Timer_Timer_dao_2, "Timer(  )=>Craft::Timer" },
  { dao_Craft_Timer_GetMSec, "GetMSec( self: Craft::Timer, reset: bool )=>int" },
  { dao_Craft_Timer_Reset, "Reset( self: Craft::Timer )" },
  { NULL, NULL }
};
static void Dao_Craft_Timer_Delete( DaoValue *self )
{
	delete (Craft::Timer*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_Timer_Core = 
{
  "Craft::Timer",
  sizeof(Craft::Timer),
  { NULL },
  { NULL },
  dao_Craft_Timer_Nums,
  dao_Craft_Timer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Timer_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Timer_Core = & Craft_Timer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Timer_Timer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Timer *_self = new Craft::Timer(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_Timer_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Timer_GetMSec( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Timer* self = (Craft::Timer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Timer_Core );
  bool reset = (bool) DaoValue_TryGetBoolean( _p[1] );

  unsigned int _GetMSec = self->GetMSec( reset );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMSec );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Timer_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Timer* self = (Craft::Timer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Timer_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_HiresTimer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_HiresTimer_HiresTimer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_HiresTimer_GetUSec( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_HiresTimer_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_HiresTimer_IsSupported( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_HiresTimer_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_HiresTimer_Meths[] = 
{
  { dao_Craft_HiresTimer_HiresTimer_dao_2, "HiresTimer(  )=>Craft::HiresTimer" },
  { dao_Craft_HiresTimer_GetUSec, "GetUSec( self: Craft::HiresTimer, reset: bool )=>int" },
  { dao_Craft_HiresTimer_Reset, "Reset( self: Craft::HiresTimer )" },
  { dao_Craft_HiresTimer_IsSupported, "IsSupported(  )=>bool" },
  { dao_Craft_HiresTimer_GetFrequency, "GetFrequency(  )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_HiresTimer_Delete( DaoValue *self )
{
	delete (Craft::HiresTimer*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_HiresTimer_Core = 
{
  "Craft::HiresTimer",
  sizeof(Craft::HiresTimer),
  { NULL },
  { NULL },
  dao_Craft_HiresTimer_Nums,
  dao_Craft_HiresTimer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_HiresTimer_Delete,
  NULL
};
DaoTypeCore *dao_Craft_HiresTimer_Core = & Craft_HiresTimer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_HiresTimer_HiresTimer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::HiresTimer *_self = new Craft::HiresTimer(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_HiresTimer_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_HiresTimer_GetUSec( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::HiresTimer* self = (Craft::HiresTimer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_HiresTimer_Core );
  bool reset = (bool) DaoValue_TryGetBoolean( _p[1] );

  long long _GetUSec = self->GetUSec( reset );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUSec );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_HiresTimer_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::HiresTimer* self = (Craft::HiresTimer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_HiresTimer_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_HiresTimer_IsSupported( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  bool _IsSupported = Craft::HiresTimer::IsSupported(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSupported );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_HiresTimer_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  long long _GetFrequency = Craft::HiresTimer::GetFrequency(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFrequency );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Time_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Time_Time_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_BeginFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_EndFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_SetTimerPeriod( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetFrameNumber( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetTimerPeriod( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetTimeStep( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetElapsedTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetSystemTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetTimeSinceEpoch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_GetTimeStamp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Time_Sleep( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Time_Meths[] = 
{
  { dao_Craft_Time_Time_dao_2, "Time(  )=>Craft::Time" },
  { dao_Craft_Time_BeginFrame, "BeginFrame( self: Craft::Time, timeStep: float )" },
  { dao_Craft_Time_EndFrame, "EndFrame( self: Craft::Time )" },
  { dao_Craft_Time_SetTimerPeriod, "SetTimerPeriod( self: Craft::Time, mSec: int )" },
  { dao_Craft_Time_GetFrameNumber, "GetFrameNumber( self: Craft::Time )=>int" },
  { dao_Craft_Time_GetTimerPeriod, "GetTimerPeriod( self: Craft::Time )=>int" },
  { dao_Craft_Time_GetTimeStep, "GetTimeStep( self: Craft::Time )=>float" },
  { dao_Craft_Time_GetElapsedTime, "GetElapsedTime( self: Craft::Time )=>float" },
  { dao_Craft_Time_GetSystemTime, "GetSystemTime(  )=>int" },
  { dao_Craft_Time_GetTimeSinceEpoch, "GetTimeSinceEpoch(  )=>int" },
  { dao_Craft_Time_GetTimeStamp, "GetTimeStamp(  )=>string" },
  { dao_Craft_Time_Sleep, "Sleep( mSec: int )" },
  { NULL, NULL }
};
static void Dao_Craft_Time_Delete( DaoValue *self )
{
	Craft::Time *obj = (Craft::Time*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Time_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Time *self = (DaoCxx_Craft_Time*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Time_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Time*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Time*)data);
}

static DaoTypeCore Craft_Time_Core = 
{
  "Craft::Time",
  sizeof(Craft::Time),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Time_Craft_Object,NULL },
  dao_Craft_Time_Nums,
  dao_Craft_Time_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Time_Delete,
  Dao_Craft_Time_HandleGC
};
DaoTypeCore *dao_Craft_Time_Core = & Craft_Time_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_Time_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Time *_self = new DaoCxx_Craft_Time( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_BeginFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->BeginFrame( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_EndFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );

  self->EndFrame(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_SetTimerPeriod( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );
  unsigned int mSec = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetTimerPeriod( mSec );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetFrameNumber( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );

  unsigned int _GetFrameNumber = self->GetFrameNumber(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFrameNumber );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetTimerPeriod( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );

  unsigned int _GetTimerPeriod = self->GetTimerPeriod(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTimerPeriod );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetTimeStep( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );

  float _GetTimeStep = self->GetTimeStep(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetTimeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetElapsedTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Time* self = (Craft::Time*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Time_Core );

  float _GetElapsedTime = self->GetElapsedTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetElapsedTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetSystemTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetSystemTime = Craft::Time::GetSystemTime(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSystemTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetTimeSinceEpoch( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetTimeSinceEpoch = Craft::Time::GetTimeSinceEpoch(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTimeSinceEpoch );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_GetTimeStamp( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::String _GetTimeStamp = Craft::Time::GetTimeStamp(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTimeStamp.CString(), _GetTimeStamp.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Time_Sleep( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  unsigned int mSec = (unsigned int) DaoValue_TryGetInteger( _p[0] );

  Craft::Time::Sleep( mSec );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Mutex_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Mutex_Mutex_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Mutex_Acquire( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Mutex_Release( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Mutex_Meths[] = 
{
  { dao_Craft_Mutex_Mutex_dao_2, "Mutex(  )=>Craft::Mutex" },
  { dao_Craft_Mutex_Acquire, "Acquire( self: Craft::Mutex )" },
  { dao_Craft_Mutex_Release, "Release( self: Craft::Mutex )" },
  { NULL, NULL }
};
static void Dao_Craft_Mutex_Delete( DaoValue *self )
{
	delete (Craft::Mutex*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_Mutex_Core = 
{
  "Craft::Mutex",
  sizeof(Craft::Mutex),
  { NULL },
  { NULL },
  dao_Craft_Mutex_Nums,
  dao_Craft_Mutex_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Mutex_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Mutex_Core = & Craft_Mutex_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Mutex_Mutex_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Mutex *_self = new Craft::Mutex(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_Mutex_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Mutex_Acquire( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Mutex* self = (Craft::Mutex*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Mutex_Core );

  self->Acquire(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Mutex_Release( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Mutex* self = (Craft::Mutex*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Mutex_Core );

  self->Release(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Condition_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Condition_Condition_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Condition_Set( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Condition_Wait( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Condition_Meths[] = 
{
  { dao_Craft_Condition_Condition_dao_2, "Condition(  )=>Craft::Condition" },
  { dao_Craft_Condition_Set, "Set( self: Craft::Condition )" },
  { dao_Craft_Condition_Wait, "Wait( self: Craft::Condition )" },
  { NULL, NULL }
};
static void Dao_Craft_Condition_Delete( DaoValue *self )
{
	delete (Craft::Condition*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_Condition_Core = 
{
  "Craft::Condition",
  sizeof(Craft::Condition),
  { NULL },
  { NULL },
  dao_Craft_Condition_Nums,
  dao_Craft_Condition_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Condition_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Condition_Core = & Craft_Condition_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Condition_Condition_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Condition *_self = new Craft::Condition(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_Condition_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Condition_Set( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Condition* self = (Craft::Condition*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Condition_Core );

  self->Set(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Condition_Wait( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Condition* self = (Craft::Condition*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Condition_Core );

  self->Wait(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Thread_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Thread_Thread_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_ThreadFunction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_Run( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_Stop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_SetPriority( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_IsStarted( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_SetMainThread( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Thread_IsMainThread( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Thread_Meths[] = 
{
  { dao_Craft_Thread_Thread_dao_2, "Thread(  )=>Craft::Thread" },
  { dao_Craft_Thread_ThreadFunction, "ThreadFunction( self: Craft::Thread )" },
  { dao_Craft_Thread_Run, "Run( self: Craft::Thread )=>bool" },
  { dao_Craft_Thread_Stop, "Stop( self: Craft::Thread )" },
  { dao_Craft_Thread_SetPriority, "SetPriority( self: Craft::Thread, priority: int )" },
  { dao_Craft_Thread_IsStarted, "IsStarted( self: Craft::Thread )=>bool" },
  { dao_Craft_Thread_SetMainThread, "SetMainThread(  )" },
  { dao_Craft_Thread_IsMainThread, "IsMainThread(  )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Thread_Delete( DaoValue *self )
{
	delete (Craft::Thread*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Thread_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Thread *self = (DaoCxx_Craft_Thread*) DaoValue_TryGetCdata( P );
	if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
	if( RM ){
		self->dao_cdata = NULL;
	}
	Dao_Craft_UnlockHandleGC();
}

static DaoTypeCore Craft_Thread_Core = 
{
  "Craft::Thread",
  sizeof(Craft::Thread),
  { NULL },
  { NULL },
  dao_Craft_Thread_Nums,
  dao_Craft_Thread_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Thread_Delete,
  Dao_Craft_Thread_HandleGC
};
DaoTypeCore *dao_Craft_Thread_Core = & Craft_Thread_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_Thread_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  DaoCxx_Craft_Thread *_self = new DaoCxx_Craft_Thread(  );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_ThreadFunction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Thread* self = (Craft::Thread*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Thread_Core );

  self->ThreadFunction(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_Run( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Thread* self = (Craft::Thread*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Thread_Core );

  bool _Run = self->Run(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Run );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_Stop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Thread* self = (Craft::Thread*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Thread_Core );

  self->Stop(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_SetPriority( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Thread* self = (Craft::Thread*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Thread_Core );
  int priority = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetPriority( priority );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_IsStarted( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Thread* self = (Craft::Thread*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Thread_Core );

  bool _IsStarted = self->IsStarted(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsStarted );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_SetMainThread( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Thread::SetMainThread(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Thread_IsMainThread( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  bool _IsMainThread = Craft::Thread::IsMainThread(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsMainThread );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Serializer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Serializer_Serializer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_Write( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteShort( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteByte( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteUInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteUShort( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteUByte( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteBool( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteFloat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteDouble( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteIntRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WritePackedVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WritePackedQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteFileID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteStringHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVariant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVariantData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteStringVector( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteVLE( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteNetID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializer_WriteLine( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Serializer_Meths[] = 
{
  { dao_Craft_Serializer_Serializer, "Serializer(  )=>Serializer" },
  { dao_Craft_Serializer_Write, "Write( self: Craft::Serializer, data: cdata, size: int )=>int" },
  { dao_Craft_Serializer_WriteInt, "WriteInt( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteShort, "WriteShort( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteByte, "WriteByte( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteUInt, "WriteUInt( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteUShort, "WriteUShort( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteUByte, "WriteUByte( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteBool, "WriteBool( self: Craft::Serializer, value: bool )=>bool" },
  { dao_Craft_Serializer_WriteFloat, "WriteFloat( self: Craft::Serializer, value: float )=>bool" },
  { dao_Craft_Serializer_WriteDouble, "WriteDouble( self: Craft::Serializer, value: float )=>bool" },
  { dao_Craft_Serializer_WriteIntRect, "WriteIntRect( self: Craft::Serializer, value: Craft::IntRect )=>bool" },
  { dao_Craft_Serializer_WriteIntVector2, "WriteIntVector2( self: Craft::Serializer, value: Craft::IntVector2 )=>bool" },
  { dao_Craft_Serializer_WriteRect, "WriteRect( self: Craft::Serializer, value: Craft::Rect )=>bool" },
  { dao_Craft_Serializer_WriteVector2, "WriteVector2( self: Craft::Serializer, value: Craft::Vector2 )=>bool" },
  { dao_Craft_Serializer_WriteVector3, "WriteVector3( self: Craft::Serializer, value: Craft::Vector3 )=>bool" },
  { dao_Craft_Serializer_WritePackedVector3, "WritePackedVector3( self: Craft::Serializer, value: Craft::Vector3, maxAbsCoord: float )=>bool" },
  { dao_Craft_Serializer_WriteVector4, "WriteVector4( self: Craft::Serializer, value: Craft::Vector4 )=>bool" },
  { dao_Craft_Serializer_WriteQuaternion, "WriteQuaternion( self: Craft::Serializer, value: Craft::Quaternion )=>bool" },
  { dao_Craft_Serializer_WritePackedQuaternion, "WritePackedQuaternion( self: Craft::Serializer, value: Craft::Quaternion )=>bool" },
  { dao_Craft_Serializer_WriteMatrix3, "WriteMatrix3( self: Craft::Serializer, value: Craft::Matrix3 )=>bool" },
  { dao_Craft_Serializer_WriteMatrix3x4, "WriteMatrix3x4( self: Craft::Serializer, value: Craft::Matrix3x4 )=>bool" },
  { dao_Craft_Serializer_WriteMatrix4, "WriteMatrix4( self: Craft::Serializer, value: Craft::Matrix4 )=>bool" },
  { dao_Craft_Serializer_WriteColor, "WriteColor( self: Craft::Serializer, value: Craft::Color )=>bool" },
  { dao_Craft_Serializer_WriteBoundingBox, "WriteBoundingBox( self: Craft::Serializer, value: Craft::BoundingBox )=>bool" },
  { dao_Craft_Serializer_WriteString, "WriteString( self: Craft::Serializer, value: string )=>bool" },
  { dao_Craft_Serializer_WriteFileID, "WriteFileID( self: Craft::Serializer, value: string )=>bool" },
  { dao_Craft_Serializer_WriteStringHash, "WriteStringHash( self: Craft::Serializer, value: Craft::StringHash )=>bool" },
  { dao_Craft_Serializer_WriteVariant, "WriteVariant( self: Craft::Serializer, value: Craft::Variant )=>bool" },
  { dao_Craft_Serializer_WriteVariantData, "WriteVariantData( self: Craft::Serializer, value: Craft::Variant )=>bool" },
  { dao_Craft_Serializer_WriteStringVector, "WriteStringVector( self: Craft::Serializer, value: Craft::StringVector )=>bool" },
  { dao_Craft_Serializer_WriteVariantMap, "WriteVariantMap( self: Craft::Serializer, value: Craft::VariantMap )=>bool" },
  { dao_Craft_Serializer_WriteVLE, "WriteVLE( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteNetID, "WriteNetID( self: Craft::Serializer, value: int )=>bool" },
  { dao_Craft_Serializer_WriteLine, "WriteLine( self: Craft::Serializer, value: string )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Serializer_Delete( DaoValue *self )
{
	delete (Craft::Serializer*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Serializer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Serializer *self = (DaoCxx_Craft_Serializer*) DaoValue_TryGetCdata( P );
	if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
	if( RM ){
		self->dao_cdata = NULL;
	}
	Dao_Craft_UnlockHandleGC();
}

static DaoTypeCore Craft_Serializer_Core = 
{
  "Craft::Serializer",
  sizeof(Craft::Serializer),
  { NULL },
  { NULL },
  dao_Craft_Serializer_Nums,
  dao_Craft_Serializer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Serializer_Delete,
  Dao_Craft_Serializer_HandleGC
};
DaoTypeCore *dao_Craft_Serializer_Core = & Craft_Serializer_Core;
static void dao_Craft_Serializer_Serializer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
	DaoCxx_Craft_Serializer *self = DaoCxx_Craft_Serializer_New();
	DaoProcess_PutValue( _proc, (DaoValue*) self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_Write( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  const void* data = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _Write = self->Write( data, size );
  DaoProcess_PutInteger( _proc, (dao_integer) _Write );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  int value = (int) DaoValue_TryGetInteger( _p[1] );

  bool _WriteInt = self->WriteInt( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteShort( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  short value = (short) DaoValue_TryGetInteger( _p[1] );

  bool _WriteShort = self->WriteShort( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteShort );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteByte( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  signed char value = (signed char) DaoValue_TryGetInteger( _p[1] );

  bool _WriteByte = self->WriteByte( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteByte );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteUInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _WriteUInt = self->WriteUInt( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteUInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteUShort( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  unsigned short value = (unsigned short) DaoValue_TryGetInteger( _p[1] );

  bool _WriteUShort = self->WriteUShort( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteUShort );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteUByte( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  unsigned char value = (unsigned char) DaoValue_TryGetInteger( _p[1] );

  bool _WriteUByte = self->WriteUByte( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteUByte );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteBool( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  bool _WriteBool = self->WriteBool( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteBool );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteFloat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  float value = (float) DaoValue_TryGetFloat( _p[1] );

  bool _WriteFloat = self->WriteFloat( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteFloat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteDouble( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  double value = (double) DaoValue_TryGetFloat( _p[1] );

  bool _WriteDouble = self->WriteDouble( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteDouble );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteIntRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::IntRect* value = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntRect_Core );

  bool _WriteIntRect = self->WriteIntRect( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteIntRect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::IntVector2* value = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );

  bool _WriteIntVector2 = self->WriteIntVector2( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteIntVector2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Rect* value = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );

  bool _WriteRect = self->WriteRect( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteRect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Vector2* value = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  bool _WriteVector2 = self->WriteVector2( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVector2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Vector3* value = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  bool _WriteVector3 = self->WriteVector3( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVector3 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WritePackedVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Vector3* value = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  float maxAbsCoord = (float) DaoValue_TryGetFloat( _p[2] );

  bool _WritePackedVector3 = self->WritePackedVector3( *value, maxAbsCoord );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WritePackedVector3 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Vector4* value = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  bool _WriteVector4 = self->WriteVector4( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVector4 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Quaternion* value = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  bool _WriteQuaternion = self->WriteQuaternion( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteQuaternion );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WritePackedQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Quaternion* value = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  bool _WritePackedQuaternion = self->WritePackedQuaternion( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WritePackedQuaternion );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Matrix3* value = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3_Core );

  bool _WriteMatrix3 = self->WriteMatrix3( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteMatrix3 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Matrix3x4* value = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix3x4_Core );

  bool _WriteMatrix3x4 = self->WriteMatrix3x4( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteMatrix3x4 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Matrix4* value = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Matrix4_Core );

  bool _WriteMatrix4 = self->WriteMatrix4( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteMatrix4 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Color* value = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );

  bool _WriteColor = self->WriteColor( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteColor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::BoundingBox* value = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  bool _WriteBoundingBox = self->WriteBoundingBox( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteBoundingBox );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _WriteString = self->WriteString( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteString );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteFileID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _WriteFileID = self->WriteFileID( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteFileID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteStringHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::StringHash* value = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  bool _WriteStringHash = self->WriteStringHash( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteStringHash );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVariant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );

  bool _WriteVariant = self->WriteVariant( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVariant );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVariantData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );

  bool _WriteVariantData = self->WriteVariantData( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVariantData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteStringVector( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::StringVector* value = (Craft::StringVector*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringVector_Core );

  bool _WriteStringVector = self->WriteStringVector( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteStringVector );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  Craft::VariantMap* value = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_VariantMap_Core );

  bool _WriteVariantMap = self->WriteVariantMap( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVariantMap );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteVLE( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _WriteVLE = self->WriteVLE( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteVLE );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteNetID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _WriteNetID = self->WriteNetID( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteNetID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializer_WriteLine( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializer* self = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializer_Core );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _WriteLine = self->WriteLine( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _WriteLine );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Deserializer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Deserializer_Deserializer_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_Deserializer_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_Read( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_Seek( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_IsEof( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadShort( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadByte( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadUInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadUShort( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadUByte( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadBool( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadFloat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadDouble( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadIntRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadPackedVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadPackedQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadFileID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadStringHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVariant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVariant_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadStringVector( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadVLE( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadNetID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Deserializer_ReadLine( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Deserializer_Meths[] = 
{
  { dao_Craft_Deserializer_Deserializer_dao_3, "Deserializer(  )=>Craft::Deserializer" },
  { dao_Craft_Deserializer_Deserializer_dao_4, "Deserializer( size: int )=>Craft::Deserializer" },
  { dao_Craft_Deserializer_Read, "Read( self: Craft::Deserializer, dest: cdata, size: int )=>int" },
  { dao_Craft_Deserializer_Seek, "Seek( self: Craft::Deserializer, position: int )=>int" },
  { dao_Craft_Deserializer_GetName, "GetName( self: Craft::Deserializer )=>string" },
  { dao_Craft_Deserializer_GetChecksum, "GetChecksum( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_GetPosition, "GetPosition( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_GetSize, "GetSize( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_IsEof, "IsEof( self: Craft::Deserializer )=>bool" },
  { dao_Craft_Deserializer_ReadInt, "ReadInt( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadShort, "ReadShort( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadByte, "ReadByte( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadUInt, "ReadUInt( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadUShort, "ReadUShort( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadUByte, "ReadUByte( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadBool, "ReadBool( self: Craft::Deserializer )=>bool" },
  { dao_Craft_Deserializer_ReadFloat, "ReadFloat( self: Craft::Deserializer )=>float" },
  { dao_Craft_Deserializer_ReadDouble, "ReadDouble( self: Craft::Deserializer )=>float" },
  { dao_Craft_Deserializer_ReadIntRect, "ReadIntRect( self: Craft::Deserializer )=>Craft::IntRect" },
  { dao_Craft_Deserializer_ReadIntVector2, "ReadIntVector2( self: Craft::Deserializer )=>Craft::IntVector2" },
  { dao_Craft_Deserializer_ReadRect, "ReadRect( self: Craft::Deserializer )=>Craft::Rect" },
  { dao_Craft_Deserializer_ReadVector2, "ReadVector2( self: Craft::Deserializer )=>Craft::Vector2" },
  { dao_Craft_Deserializer_ReadVector3, "ReadVector3( self: Craft::Deserializer )=>Craft::Vector3" },
  { dao_Craft_Deserializer_ReadPackedVector3, "ReadPackedVector3( self: Craft::Deserializer, maxAbsCoord: float )=>Craft::Vector3" },
  { dao_Craft_Deserializer_ReadVector4, "ReadVector4( self: Craft::Deserializer )=>Craft::Vector4" },
  { dao_Craft_Deserializer_ReadQuaternion, "ReadQuaternion( self: Craft::Deserializer )=>Craft::Quaternion" },
  { dao_Craft_Deserializer_ReadPackedQuaternion, "ReadPackedQuaternion( self: Craft::Deserializer )=>Craft::Quaternion" },
  { dao_Craft_Deserializer_ReadMatrix3, "ReadMatrix3( self: Craft::Deserializer )=>Craft::Matrix3" },
  { dao_Craft_Deserializer_ReadMatrix3x4, "ReadMatrix3x4( self: Craft::Deserializer )=>Craft::Matrix3x4" },
  { dao_Craft_Deserializer_ReadMatrix4, "ReadMatrix4( self: Craft::Deserializer )=>Craft::Matrix4" },
  { dao_Craft_Deserializer_ReadColor, "ReadColor( self: Craft::Deserializer )=>Craft::Color" },
  { dao_Craft_Deserializer_ReadBoundingBox, "ReadBoundingBox( self: Craft::Deserializer )=>Craft::BoundingBox" },
  { dao_Craft_Deserializer_ReadString, "ReadString( self: Craft::Deserializer )=>string" },
  { dao_Craft_Deserializer_ReadFileID, "ReadFileID( self: Craft::Deserializer )=>string" },
  { dao_Craft_Deserializer_ReadStringHash, "ReadStringHash( self: Craft::Deserializer )=>Craft::StringHash" },
  { dao_Craft_Deserializer_ReadVariant, "ReadVariant( self: Craft::Deserializer )=>Craft::Variant" },
  { dao_Craft_Deserializer_ReadVariant_dao_2, "ReadVariant( self: Craft::Deserializer, type: int )=>Craft::Variant" },
  { dao_Craft_Deserializer_ReadStringVector, "ReadStringVector( self: Craft::Deserializer )=>Craft::StringVector" },
  { dao_Craft_Deserializer_ReadVariantMap, "ReadVariantMap( self: Craft::Deserializer )=>Craft::VariantMap" },
  { dao_Craft_Deserializer_ReadVLE, "ReadVLE( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadNetID, "ReadNetID( self: Craft::Deserializer )=>int" },
  { dao_Craft_Deserializer_ReadLine, "ReadLine( self: Craft::Deserializer )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Deserializer_Delete( DaoValue *self )
{
	delete (Craft::Deserializer*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Deserializer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Deserializer *self = (DaoCxx_Craft_Deserializer*) DaoValue_TryGetCdata( P );
	if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
	if( RM ){
		self->dao_cdata = NULL;
	}
	Dao_Craft_UnlockHandleGC();
}

static DaoTypeCore Craft_Deserializer_Core = 
{
  "Craft::Deserializer",
  sizeof(Craft::Deserializer),
  { NULL },
  { NULL },
  dao_Craft_Deserializer_Nums,
  dao_Craft_Deserializer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Deserializer_Delete,
  Dao_Craft_Deserializer_HandleGC
};
DaoTypeCore *dao_Craft_Deserializer_Core = & Craft_Deserializer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_Deserializer_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  DaoCxx_Craft_Deserializer *_self = new DaoCxx_Craft_Deserializer(  );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_Deserializer_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[0] );

  DaoCxx_Craft_Deserializer *_self = new DaoCxx_Craft_Deserializer( size );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_Read( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );
  void* dest = (void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _Read = self->Read( dest, size );
  DaoProcess_PutInteger( _proc, (dao_integer) _Read );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_Seek( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );
  unsigned int position = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  unsigned int _Seek = self->Seek( position );
  DaoProcess_PutInteger( _proc, (dao_integer) _Seek );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned int _GetChecksum = self->GetChecksum(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetChecksum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned int _GetPosition = self->GetPosition(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPosition );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned int _GetSize = self->GetSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_IsEof( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  bool _IsEof = self->IsEof(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEof );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  int _ReadInt = self->ReadInt(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadShort( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  short _ReadShort = self->ReadShort(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadShort );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadByte( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  signed char _ReadByte = self->ReadByte(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadByte );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadUInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned int _ReadUInt = self->ReadUInt(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadUInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadUShort( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned short _ReadUShort = self->ReadUShort(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadUShort );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadUByte( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned char _ReadUByte = self->ReadUByte(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadUByte );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadBool( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  bool _ReadBool = self->ReadBool(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ReadBool );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadFloat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  float _ReadFloat = self->ReadFloat(  );
  DaoProcess_PutFloat( _proc, (dao_float) _ReadFloat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadDouble( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  double _ReadDouble = self->ReadDouble(  );
  DaoProcess_PutFloat( _proc, (dao_float) _ReadDouble );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadIntRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::IntRect _ReadIntRect = self->ReadIntRect(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntRect( _ReadIntRect ), dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::IntVector2 _ReadIntVector2 = self->ReadIntVector2(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _ReadIntVector2 ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Rect _ReadRect = self->ReadRect(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Rect( _ReadRect ), dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Vector2 _ReadVector2 = self->ReadVector2(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _ReadVector2 ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Vector3 _ReadVector3 = self->ReadVector3(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ReadVector3 ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadPackedVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );
  float maxAbsCoord = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Vector3 _ReadPackedVector3 = self->ReadPackedVector3( maxAbsCoord );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ReadPackedVector3 ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Vector4 _ReadVector4 = self->ReadVector4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _ReadVector4 ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Quaternion _ReadQuaternion = self->ReadQuaternion(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _ReadQuaternion ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadPackedQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Quaternion _ReadPackedQuaternion = self->ReadPackedQuaternion(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _ReadPackedQuaternion ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Matrix3 _ReadMatrix3 = self->ReadMatrix3(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _ReadMatrix3 ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Matrix3x4 _ReadMatrix3x4 = self->ReadMatrix3x4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3x4( _ReadMatrix3x4 ), dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Matrix4 _ReadMatrix4 = self->ReadMatrix4(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix4( _ReadMatrix4 ), dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Color _ReadColor = self->ReadColor(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _ReadColor ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::BoundingBox _ReadBoundingBox = self->ReadBoundingBox(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::BoundingBox( _ReadBoundingBox ), dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::String _ReadString = self->ReadString(  );
  DaoProcess_PutBytes( _proc, (char*) _ReadString.CString(), _ReadString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadFileID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::String _ReadFileID = self->ReadFileID(  );
  DaoProcess_PutBytes( _proc, (char*) _ReadFileID.CString(), _ReadFileID.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadStringHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::StringHash _ReadStringHash = self->ReadStringHash(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _ReadStringHash ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVariant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::Variant _ReadVariant = self->ReadVariant(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _ReadVariant ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVariant_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[1] );

  Craft::Variant _ReadVariant = self->ReadVariant( type );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _ReadVariant ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadStringVector( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::StringVector _ReadStringVector = self->ReadStringVector(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringVector( _ReadStringVector ), dao_Craft_StringVector_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::VariantMap _ReadVariantMap = self->ReadVariantMap(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::VariantMap( _ReadVariantMap ), dao_Craft_VariantMap_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadVLE( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned int _ReadVLE = self->ReadVLE(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadVLE );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadNetID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  unsigned int _ReadNetID = self->ReadNetID(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _ReadNetID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Deserializer_ReadLine( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Deserializer* self = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Deserializer_Core );

  Craft::String _ReadLine = self->ReadLine(  );
  DaoProcess_PutBytes( _proc, (char*) _ReadLine.CString(), _ReadLine.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_File_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_File_File_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_File_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Read( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_ReadText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Seek( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Write( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Open( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Close( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Flush( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_SetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_GetMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_IsOpen( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_IsPackaged( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_GetFullPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_File_Copy( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_File_Meths[] = 
{
  { dao_Craft_File_File_dao_3, "File(  )=>Craft::File" },
  { dao_Craft_File_File_dao_4, "File( fileName: string, mode: int =FILE_READ )=>Craft::File" },
  { dao_Craft_File_Read, "Read( self: Craft::File, dest: cdata, size: int )=>int" },
  { dao_Craft_File_ReadText, "ReadText( self: Craft::File, text: string )" },
  { dao_Craft_File_Seek, "Seek( self: Craft::File, position: int )=>int" },
  { dao_Craft_File_Write, "Write( self: Craft::File, data: cdata, size: int )=>int" },
  { dao_Craft_File_GetName, "GetName( self: Craft::File )=>string" },
  { dao_Craft_File_GetChecksum, "GetChecksum( self: Craft::File )=>int" },
  { dao_Craft_File_Open, "Open( self: Craft::File, fileName: string, mode: int =FILE_READ )=>bool" },
  { dao_Craft_File_Close, "Close( self: Craft::File )" },
  { dao_Craft_File_Flush, "Flush( self: Craft::File )" },
  { dao_Craft_File_SetName, "SetName( self: Craft::File, name: string )" },
  { dao_Craft_File_GetMode, "GetMode( self: Craft::File )=>int" },
  { dao_Craft_File_IsOpen, "IsOpen( self: Craft::File )=>bool" },
  { dao_Craft_File_IsPackaged, "IsPackaged( self: Craft::File )=>bool" },
  { dao_Craft_File_GetFullPath, "GetFullPath( self: Craft::File )=>string" },
  { dao_Craft_File_Copy, "Copy( self: Craft::File, srcFile: Craft::File )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_File_Delete( DaoValue *self )
{
	Craft::File *obj = (Craft::File*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_File_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_File *self = (DaoCxx_Craft_File*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_File_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::File*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::File*)data);
}
void* dao_cast_Craft_File_Craft_Deserializer( void *data, int down )
{
	if( down ) return static_cast<Craft::File*>((Craft::Deserializer*)data);
	return dynamic_cast<Craft::Deserializer*>((Craft::File*)data);
}
void* dao_cast_Craft_File_Craft_Serializer( void *data, int down )
{
	if( down ) return static_cast<Craft::File*>((Craft::Serializer*)data);
	return dynamic_cast<Craft::Serializer*>((Craft::File*)data);
}

static DaoTypeCore Craft_File_Core = 
{
  "Craft::File",
  sizeof(Craft::File),
  { dao_Craft_Object_Core, dao_Craft_Deserializer_Core, dao_Craft_Serializer_Core, NULL },
  { dao_cast_Craft_File_Craft_Object,dao_cast_Craft_File_Craft_Deserializer,dao_cast_Craft_File_Craft_Serializer,NULL },
  dao_Craft_File_Nums,
  dao_Craft_File_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_File_Delete,
  Dao_Craft_File_HandleGC
};
DaoTypeCore *dao_Craft_File_Core = & Craft_File_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_File_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_File *_self = new DaoCxx_Craft_File( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_File_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  DString *__str_fileName = DaoValue_TryGetString( _p[0] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  Craft::FileMode mode = (Craft::FileMode) DaoValue_TryGetInteger( _p[1] );

  DaoCxx_Craft_File *_self = new DaoCxx_Craft_File( context, fileName, mode );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Read( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  void* dest = (void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _Read = self->Read( dest, size );
  DaoProcess_PutInteger( _proc, (dao_integer) _Read );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_ReadText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );

  self->ReadText( text );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Seek( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  unsigned int position = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  unsigned int _Seek = self->Seek( position );
  DaoProcess_PutInteger( _proc, (dao_integer) _Seek );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Write( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  const void* data = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _Write = self->Write( data, size );
  DaoProcess_PutInteger( _proc, (dao_integer) _Write );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  unsigned int _GetChecksum = self->GetChecksum(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetChecksum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Open( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  Craft::FileMode mode = (Craft::FileMode) DaoValue_TryGetInteger( _p[2] );

  bool _Open = self->Open( fileName, mode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Open );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Close( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  self->Close(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Flush( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  self->Flush(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_SetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetName( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_GetMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  Craft::FileMode _GetMode = self->GetMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_IsOpen( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  bool _IsOpen = self->IsOpen(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsOpen );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_IsPackaged( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  bool _IsPackaged = self->IsPackaged(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsPackaged );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_GetFullPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );

  const Craft::String& _GetFullPath = self->GetFullPath(  );
  DaoProcess_PutBytes( _proc, (char*) _GetFullPath.CString(), _GetFullPath.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_File_Copy( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::File* self = (Craft::File*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_File_Core );
  Craft::File* srcFile = (Craft::File*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_File_Core );

  bool _Copy = self->Copy( srcFile );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Copy );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_FileSystem_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_FileSystem_FileSystem_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_SetCurrentDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_CreateDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_SetExecuteConsoleCommands( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_SystemCommand( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_SystemCommandAsync( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_SystemOpen( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_Copy( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_Rename( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_Delete( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_RegisterPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_SetLastModifiedTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_GetCurrentDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_GetExecuteConsoleCommands( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_HasRegisteredPaths( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_CheckAccess( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_GetLastModifiedTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_FileExists( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_DirExists( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_GetProgramDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_GetUserDocumentsDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_GetAppPreferencesDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_RemoveDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_CreateDirs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_CopyDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_Exists( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileSystem_CreateDirsRecursive( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_FileSystem_Meths[] = 
{
  { dao_Craft_FileSystem_FileSystem_dao_2, "FileSystem(  )=>Craft::FileSystem" },
  { dao_Craft_FileSystem_SetCurrentDir, "SetCurrentDir( self: Craft::FileSystem, pathName: string )=>bool" },
  { dao_Craft_FileSystem_CreateDir, "CreateDir( self: Craft::FileSystem, pathName: string )=>bool" },
  { dao_Craft_FileSystem_SetExecuteConsoleCommands, "SetExecuteConsoleCommands( self: Craft::FileSystem, enable: bool )" },
  { dao_Craft_FileSystem_SystemCommand, "SystemCommand( self: Craft::FileSystem, commandLine: string, redirectStdOutToLog: bool =false )=>int" },
  { dao_Craft_FileSystem_SystemCommandAsync, "SystemCommandAsync( self: Craft::FileSystem, commandLine: string )=>int" },
  { dao_Craft_FileSystem_SystemOpen, "SystemOpen( self: Craft::FileSystem, fileName: string, mode: string ='' )=>bool" },
  { dao_Craft_FileSystem_Copy, "Copy( self: Craft::FileSystem, srcFileName: string, destFileName: string )=>bool" },
  { dao_Craft_FileSystem_Rename, "Rename( self: Craft::FileSystem, srcFileName: string, destFileName: string )=>bool" },
  { dao_Craft_FileSystem_Delete, "Delete( self: Craft::FileSystem, fileName: string )=>bool" },
  { dao_Craft_FileSystem_RegisterPath, "RegisterPath( self: Craft::FileSystem, pathName: string )" },
  { dao_Craft_FileSystem_SetLastModifiedTime, "SetLastModifiedTime( self: Craft::FileSystem, fileName: string, newTime: int )=>bool" },
  { dao_Craft_FileSystem_GetCurrentDir, "GetCurrentDir( self: Craft::FileSystem )=>string" },
  { dao_Craft_FileSystem_GetExecuteConsoleCommands, "GetExecuteConsoleCommands( self: Craft::FileSystem )=>bool" },
  { dao_Craft_FileSystem_HasRegisteredPaths, "HasRegisteredPaths( self: Craft::FileSystem )=>bool" },
  { dao_Craft_FileSystem_CheckAccess, "CheckAccess( self: Craft::FileSystem, pathName: string )=>bool" },
  { dao_Craft_FileSystem_GetLastModifiedTime, "GetLastModifiedTime( self: Craft::FileSystem, fileName: string )=>int" },
  { dao_Craft_FileSystem_FileExists, "FileExists( self: Craft::FileSystem, fileName: string )=>bool" },
  { dao_Craft_FileSystem_DirExists, "DirExists( self: Craft::FileSystem, pathName: string )=>bool" },
  { dao_Craft_FileSystem_GetProgramDir, "GetProgramDir( self: Craft::FileSystem )=>string" },
  { dao_Craft_FileSystem_GetUserDocumentsDir, "GetUserDocumentsDir( self: Craft::FileSystem )=>string" },
  { dao_Craft_FileSystem_GetAppPreferencesDir, "GetAppPreferencesDir( self: Craft::FileSystem, org: string, app: string )=>string" },
  { dao_Craft_FileSystem_RemoveDir, "RemoveDir( self: Craft::FileSystem, directoryIn: string, recursive: bool )=>bool" },
  { dao_Craft_FileSystem_CreateDirs, "CreateDirs( self: Craft::FileSystem, root: string, subdirectory: string )=>bool" },
  { dao_Craft_FileSystem_CopyDir, "CopyDir( self: Craft::FileSystem, directoryIn: string, directoryOut: string )=>bool" },
  { dao_Craft_FileSystem_Exists, "Exists( self: Craft::FileSystem, pathName: string )=>bool" },
  { dao_Craft_FileSystem_CreateDirsRecursive, "CreateDirsRecursive( self: Craft::FileSystem, directoryIn: string )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_FileSystem_Delete( DaoValue *self )
{
	Craft::FileSystem *obj = (Craft::FileSystem*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_FileSystem_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_FileSystem *self = (DaoCxx_Craft_FileSystem*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_FileSystem_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::FileSystem*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::FileSystem*)data);
}

static DaoTypeCore Craft_FileSystem_Core = 
{
  "Craft::FileSystem",
  sizeof(Craft::FileSystem),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_FileSystem_Craft_Object,NULL },
  dao_Craft_FileSystem_Nums,
  dao_Craft_FileSystem_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_FileSystem_Delete,
  Dao_Craft_FileSystem_HandleGC
};
DaoTypeCore *dao_Craft_FileSystem_Core = & Craft_FileSystem_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_FileSystem_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_FileSystem *_self = new DaoCxx_Craft_FileSystem( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_SetCurrentDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  bool _SetCurrentDir = self->SetCurrentDir( pathName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetCurrentDir );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_CreateDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  bool _CreateDir = self->CreateDir( pathName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _CreateDir );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_SetExecuteConsoleCommands( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetExecuteConsoleCommands( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_SystemCommand( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_commandLine = DaoValue_TryGetString( _p[1] );
  Craft::String commandLine( DString_GetData( __str_commandLine ), DString_Size( __str_commandLine ) );
  bool redirectStdOutToLog = (bool) DaoValue_TryGetBoolean( _p[2] );

  int _SystemCommand = self->SystemCommand( commandLine, redirectStdOutToLog );
  DaoProcess_PutInteger( _proc, (dao_integer) _SystemCommand );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_SystemCommandAsync( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_commandLine = DaoValue_TryGetString( _p[1] );
  Craft::String commandLine( DString_GetData( __str_commandLine ), DString_Size( __str_commandLine ) );

  unsigned int _SystemCommandAsync = self->SystemCommandAsync( commandLine );
  DaoProcess_PutInteger( _proc, (dao_integer) _SystemCommandAsync );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_SystemOpen( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  DString *__str_mode = DaoValue_TryGetString( _p[2] );
  Craft::String mode( DString_GetData( __str_mode ), DString_Size( __str_mode ) );

  bool _SystemOpen = self->SystemOpen( fileName, mode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SystemOpen );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_Copy( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_srcFileName = DaoValue_TryGetString( _p[1] );
  Craft::String srcFileName( DString_GetData( __str_srcFileName ), DString_Size( __str_srcFileName ) );
  DString *__str_destFileName = DaoValue_TryGetString( _p[2] );
  Craft::String destFileName( DString_GetData( __str_destFileName ), DString_Size( __str_destFileName ) );

  bool _Copy = self->Copy( srcFileName, destFileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Copy );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_Rename( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_srcFileName = DaoValue_TryGetString( _p[1] );
  Craft::String srcFileName( DString_GetData( __str_srcFileName ), DString_Size( __str_srcFileName ) );
  DString *__str_destFileName = DaoValue_TryGetString( _p[2] );
  Craft::String destFileName( DString_GetData( __str_destFileName ), DString_Size( __str_destFileName ) );

  bool _Rename = self->Rename( srcFileName, destFileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Rename );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_Delete( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _Delete = self->Delete( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Delete );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_RegisterPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  self->RegisterPath( pathName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_SetLastModifiedTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  unsigned int newTime = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _SetLastModifiedTime = self->SetLastModifiedTime( fileName, newTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetLastModifiedTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_GetCurrentDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );

  Craft::String _GetCurrentDir = self->GetCurrentDir(  );
  DaoProcess_PutBytes( _proc, (char*) _GetCurrentDir.CString(), _GetCurrentDir.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_GetExecuteConsoleCommands( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );

  bool _GetExecuteConsoleCommands = self->GetExecuteConsoleCommands(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetExecuteConsoleCommands );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_HasRegisteredPaths( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );

  bool _HasRegisteredPaths = self->HasRegisteredPaths(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasRegisteredPaths );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_CheckAccess( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  bool _CheckAccess = self->CheckAccess( pathName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _CheckAccess );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_GetLastModifiedTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  unsigned int _GetLastModifiedTime = self->GetLastModifiedTime( fileName );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLastModifiedTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_FileExists( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _FileExists = self->FileExists( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _FileExists );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_DirExists( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  bool _DirExists = self->DirExists( pathName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _DirExists );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_GetProgramDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );

  Craft::String _GetProgramDir = self->GetProgramDir(  );
  DaoProcess_PutBytes( _proc, (char*) _GetProgramDir.CString(), _GetProgramDir.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_GetUserDocumentsDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );

  Craft::String _GetUserDocumentsDir = self->GetUserDocumentsDir(  );
  DaoProcess_PutBytes( _proc, (char*) _GetUserDocumentsDir.CString(), _GetUserDocumentsDir.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_GetAppPreferencesDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_org = DaoValue_TryGetString( _p[1] );
  Craft::String org( DString_GetData( __str_org ), DString_Size( __str_org ) );
  DString *__str_app = DaoValue_TryGetString( _p[2] );
  Craft::String app( DString_GetData( __str_app ), DString_Size( __str_app ) );

  Craft::String _GetAppPreferencesDir = self->GetAppPreferencesDir( org, app );
  DaoProcess_PutBytes( _proc, (char*) _GetAppPreferencesDir.CString(), _GetAppPreferencesDir.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_RemoveDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_directoryIn = DaoValue_TryGetString( _p[1] );
  Craft::String directoryIn( DString_GetData( __str_directoryIn ), DString_Size( __str_directoryIn ) );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _RemoveDir = self->RemoveDir( directoryIn, recursive );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveDir );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_CreateDirs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_root = DaoValue_TryGetString( _p[1] );
  Craft::String root( DString_GetData( __str_root ), DString_Size( __str_root ) );
  DString *__str_subdirectory = DaoValue_TryGetString( _p[2] );
  Craft::String subdirectory( DString_GetData( __str_subdirectory ), DString_Size( __str_subdirectory ) );

  bool _CreateDirs = self->CreateDirs( root, subdirectory );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _CreateDirs );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_CopyDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_directoryIn = DaoValue_TryGetString( _p[1] );
  Craft::String directoryIn( DString_GetData( __str_directoryIn ), DString_Size( __str_directoryIn ) );
  DString *__str_directoryOut = DaoValue_TryGetString( _p[2] );
  Craft::String directoryOut( DString_GetData( __str_directoryOut ), DString_Size( __str_directoryOut ) );

  bool _CopyDir = self->CopyDir( directoryIn, directoryOut );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _CopyDir );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_Exists( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  bool _Exists = self->Exists( pathName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Exists );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileSystem_CreateDirsRecursive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileSystem* self = (Craft::FileSystem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileSystem_Core );
  DString *__str_directoryIn = DaoValue_TryGetString( _p[1] );
  Craft::String directoryIn( DString_GetData( __str_directoryIn ), DString_Size( __str_directoryIn ) );

  bool _CreateDirsRecursive = self->CreateDirsRecursive( directoryIn );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _CreateDirsRecursive );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_FileWatcher_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_FileWatcher_FileWatcher_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_ThreadFunction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_StartWatching( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_StopWatching( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_SetDelay( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_AddChange( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_GetNextChange( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_GetPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FileWatcher_GetDelay( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_FileWatcher_Meths[] = 
{
  { dao_Craft_FileWatcher_FileWatcher_dao_2, "FileWatcher(  )=>Craft::FileWatcher" },
  { dao_Craft_FileWatcher_ThreadFunction, "ThreadFunction( self: Craft::FileWatcher )" },
  { dao_Craft_FileWatcher_StartWatching, "StartWatching( self: Craft::FileWatcher, pathName: string, watchSubDirs: bool )=>bool" },
  { dao_Craft_FileWatcher_StopWatching, "StopWatching( self: Craft::FileWatcher )" },
  { dao_Craft_FileWatcher_SetDelay, "SetDelay( self: Craft::FileWatcher, interval: float )" },
  { dao_Craft_FileWatcher_AddChange, "AddChange( self: Craft::FileWatcher, fileName: string )" },
  { dao_Craft_FileWatcher_GetNextChange, "GetNextChange( self: Craft::FileWatcher, dest: string )=>bool" },
  { dao_Craft_FileWatcher_GetPath, "GetPath( self: Craft::FileWatcher )=>string" },
  { dao_Craft_FileWatcher_GetDelay, "GetDelay( self: Craft::FileWatcher )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_FileWatcher_Delete( DaoValue *self )
{
	Craft::FileWatcher *obj = (Craft::FileWatcher*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_FileWatcher_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_FileWatcher *self = (DaoCxx_Craft_FileWatcher*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_FileWatcher_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::FileWatcher*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::FileWatcher*)data);
}
void* dao_cast_Craft_FileWatcher_Craft_Thread( void *data, int down )
{
	if( down ) return static_cast<Craft::FileWatcher*>((Craft::Thread*)data);
	return dynamic_cast<Craft::Thread*>((Craft::FileWatcher*)data);
}

static DaoTypeCore Craft_FileWatcher_Core = 
{
  "Craft::FileWatcher",
  sizeof(Craft::FileWatcher),
  { dao_Craft_Object_Core, dao_Craft_Thread_Core, NULL },
  { dao_cast_Craft_FileWatcher_Craft_Object,dao_cast_Craft_FileWatcher_Craft_Thread,NULL },
  dao_Craft_FileWatcher_Nums,
  dao_Craft_FileWatcher_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_FileWatcher_Delete,
  Dao_Craft_FileWatcher_HandleGC
};
DaoTypeCore *dao_Craft_FileWatcher_Core = & Craft_FileWatcher_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_FileWatcher_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_FileWatcher *_self = new DaoCxx_Craft_FileWatcher( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_ThreadFunction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );

  self->ThreadFunction(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_StartWatching( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );
  bool watchSubDirs = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _StartWatching = self->StartWatching( pathName, watchSubDirs );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _StartWatching );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_StopWatching( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );

  self->StopWatching(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_SetDelay( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );
  float interval = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetDelay( interval );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_AddChange( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  self->AddChange( fileName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_GetNextChange( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );
  DString *__str_dest = DaoValue_TryGetString( _p[1] );
  Craft::String dest( DString_GetData( __str_dest ), DString_Size( __str_dest ) );

  bool _GetNextChange = self->GetNextChange( dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetNextChange );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_GetPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );

  const Craft::String& _GetPath = self->GetPath(  );
  DaoProcess_PutBytes( _proc, (char*) _GetPath.CString(), _GetPath.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FileWatcher_GetDelay( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FileWatcher* self = (Craft::FileWatcher*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FileWatcher_Core );

  float _GetDelay = self->GetDelay(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDelay );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_PackageEntry_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_PackageEntry_GETF_offset_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageEntry_SETF_offset_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageEntry_GETF_size_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageEntry_SETF_size_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageEntry_GETF_checksum_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageEntry_SETF_checksum_( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_PackageEntry_Meths[] = 
{
  { dao_Craft_PackageEntry_GETF_offset_, ".offset_ ( self: Craft::PackageEntry )=>int" },
  { dao_Craft_PackageEntry_SETF_offset_, ".offset_=( self: Craft::PackageEntry, offset_: int )" },
  { dao_Craft_PackageEntry_GETF_size_, ".size_ ( self: Craft::PackageEntry )=>int" },
  { dao_Craft_PackageEntry_SETF_size_, ".size_=( self: Craft::PackageEntry, size_: int )" },
  { dao_Craft_PackageEntry_GETF_checksum_, ".checksum_ ( self: Craft::PackageEntry )=>int" },
  { dao_Craft_PackageEntry_SETF_checksum_, ".checksum_=( self: Craft::PackageEntry, checksum_: int )" },
  { NULL, NULL }
};
static void Dao_Craft_PackageEntry_Delete( DaoValue *self )
{
	delete (Craft::PackageEntry*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_PackageEntry_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::PackageEntry* src = (Craft::PackageEntry*) DaoValue_TryCastCdataTC( self, dao_Craft_PackageEntry_Core );
	Craft::PackageEntry* dest;
	if( target ){
		dest = (Craft::PackageEntry*) DaoValue_TryCastCdataTC( target, dao_Craft_PackageEntry_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::PackageEntry( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_PackageEntry_Core, dest );
}

static DaoTypeCore Craft_PackageEntry_Core = 
{
  "Craft::PackageEntry",
  sizeof(Craft::PackageEntry),
  { NULL },
  { NULL },
  dao_Craft_PackageEntry_Nums,
  dao_Craft_PackageEntry_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_PackageEntry_Copy,
  Dao_Craft_PackageEntry_Delete,
  NULL
};
DaoTypeCore *dao_Craft_PackageEntry_Core = & Craft_PackageEntry_Core;
static void dao_Craft_PackageEntry_GETF_offset_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageEntry *self = (Craft::PackageEntry*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_PackageEntry_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->offset_ );
}
static void dao_Craft_PackageEntry_SETF_offset_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageEntry *self = (Craft::PackageEntry*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_PackageEntry_Core);
  self->offset_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_PackageEntry_GETF_size_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageEntry *self = (Craft::PackageEntry*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_PackageEntry_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->size_ );
}
static void dao_Craft_PackageEntry_SETF_size_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageEntry *self = (Craft::PackageEntry*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_PackageEntry_Core);
  self->size_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_PackageEntry_GETF_checksum_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageEntry *self = (Craft::PackageEntry*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_PackageEntry_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->checksum_ );
}
static void dao_Craft_PackageEntry_SETF_checksum_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageEntry *self = (Craft::PackageEntry*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_PackageEntry_Core);
  self->checksum_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_PackageFile_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_PackageFile_PackageFile_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_PackageFile_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_Open( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_Exists( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_GetEntry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_GetNameHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_GetNumFiles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_GetTotalSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PackageFile_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_PackageFile_Meths[] = 
{
  { dao_Craft_PackageFile_PackageFile_dao_3, "PackageFile(  )=>Craft::PackageFile" },
  { dao_Craft_PackageFile_PackageFile_dao_4, "PackageFile( context: Craft::Context, fileName: string, startOffset: int =0 )=>Craft::PackageFile" },
  { dao_Craft_PackageFile_Open, "Open( self: Craft::PackageFile, fileName: string, startOffset: int =0 )=>bool" },
  { dao_Craft_PackageFile_Exists, "Exists( self: Craft::PackageFile, fileName: string )=>bool" },
  { dao_Craft_PackageFile_GetEntry, "GetEntry( self: Craft::PackageFile, fileName: string )=>Craft::PackageEntry" },
  { dao_Craft_PackageFile_GetName, "GetName( self: Craft::PackageFile )=>string" },
  { dao_Craft_PackageFile_GetNameHash, "GetNameHash( self: Craft::PackageFile )=>Craft::StringHash" },
  { dao_Craft_PackageFile_GetNumFiles, "GetNumFiles( self: Craft::PackageFile )=>int" },
  { dao_Craft_PackageFile_GetTotalSize, "GetTotalSize( self: Craft::PackageFile )=>int" },
  { dao_Craft_PackageFile_GetChecksum, "GetChecksum( self: Craft::PackageFile )=>int" },
  { dao_Craft_PackageFile_IsCompressed, "IsCompressed( self: Craft::PackageFile )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_PackageFile_Delete( DaoValue *self )
{
	Craft::PackageFile *obj = (Craft::PackageFile*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_PackageFile_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_PackageFile *self = (DaoCxx_Craft_PackageFile*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_PackageFile_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::PackageFile*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::PackageFile*)data);
}

static DaoTypeCore Craft_PackageFile_Core = 
{
  "Craft::PackageFile",
  sizeof(Craft::PackageFile),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_PackageFile_Craft_Object,NULL },
  dao_Craft_PackageFile_Nums,
  dao_Craft_PackageFile_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_PackageFile_Delete,
  Dao_Craft_PackageFile_HandleGC
};
DaoTypeCore *dao_Craft_PackageFile_Core = & Craft_PackageFile_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_PackageFile_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_PackageFile *_self = new DaoCxx_Craft_PackageFile( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_PackageFile_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  unsigned int startOffset = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  DaoCxx_Craft_PackageFile *_self = new DaoCxx_Craft_PackageFile( context, fileName, startOffset );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_Open( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  unsigned int startOffset = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _Open = self->Open( fileName, startOffset );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Open );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_Exists( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _Exists = self->Exists( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Exists );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_GetEntry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  const Craft::PackageEntry* _GetEntry = self->GetEntry( fileName );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEntry, dao_Craft_PackageEntry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_GetNameHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );

  Craft::StringHash _GetNameHash = self->GetNameHash(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetNameHash ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_GetNumFiles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );

  unsigned int _GetNumFiles = self->GetNumFiles(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumFiles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_GetTotalSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );

  unsigned int _GetTotalSize = self->GetTotalSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTotalSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );

  unsigned int _GetChecksum = self->GetChecksum(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetChecksum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PackageFile_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PackageFile* self = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PackageFile_Core );

  bool _IsCompressed = self->IsCompressed(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsCompressed );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Resource_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Resource_Resource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_SetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_SetMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_ResetUseTimer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_SetAsyncLoadState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_GetNameHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_GetMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_GetUseTimer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Resource_GetAsyncLoadState( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Resource_Meths[] = 
{
  { dao_Craft_Resource_Resource_dao_2, "Resource(  )=>Craft::Resource" },
  { dao_Craft_Resource_Load, "Load( self: Craft::Resource, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Resource_BeginLoad, "BeginLoad( self: Craft::Resource, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Resource_EndLoad, "EndLoad( self: Craft::Resource )=>bool" },
  { dao_Craft_Resource_Save, "Save( self: Craft::Resource, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Resource_SetName, "SetName( self: Craft::Resource, name: string )" },
  { dao_Craft_Resource_SetMemoryUse, "SetMemoryUse( self: Craft::Resource, size: int )" },
  { dao_Craft_Resource_ResetUseTimer, "ResetUseTimer( self: Craft::Resource )" },
  { dao_Craft_Resource_SetAsyncLoadState, "SetAsyncLoadState( self: Craft::Resource, newState: int )" },
  { dao_Craft_Resource_GetName, "GetName( self: Craft::Resource )=>string" },
  { dao_Craft_Resource_GetNameHash, "GetNameHash( self: Craft::Resource )=>Craft::StringHash" },
  { dao_Craft_Resource_GetMemoryUse, "GetMemoryUse( self: Craft::Resource )=>int" },
  { dao_Craft_Resource_GetUseTimer, "GetUseTimer( self: Craft::Resource )=>int" },
  { dao_Craft_Resource_GetAsyncLoadState, "GetAsyncLoadState( self: Craft::Resource )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_Resource_Delete( DaoValue *self )
{
	Craft::Resource *obj = (Craft::Resource*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Resource_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Resource *self = (DaoCxx_Craft_Resource*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Resource_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Resource*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Resource*)data);
}

static DaoTypeCore Craft_Resource_Core = 
{
  "Craft::Resource",
  sizeof(Craft::Resource),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Resource_Craft_Object,NULL },
  dao_Craft_Resource_Nums,
  dao_Craft_Resource_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Resource_Delete,
  Dao_Craft_Resource_HandleGC
};
DaoTypeCore *dao_Craft_Resource_Core = & Craft_Resource_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_Resource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Resource *_self = new DaoCxx_Craft_Resource( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_SetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetName( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_SetMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetMemoryUse( size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_ResetUseTimer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  self->ResetUseTimer(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_SetAsyncLoadState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );
  Craft::AsyncLoadState newState = (Craft::AsyncLoadState) DaoValue_TryGetInteger( _p[1] );

  self->SetAsyncLoadState( newState );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_GetNameHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  Craft::StringHash _GetNameHash = self->GetNameHash(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetNameHash ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_GetMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  unsigned int _GetMemoryUse = self->GetMemoryUse(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMemoryUse );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_GetUseTimer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  unsigned int _GetUseTimer = self->GetUseTimer(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUseTimer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Resource_GetAsyncLoadState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Resource* self = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Resource_Core );

  Craft::AsyncLoadState _GetAsyncLoadState = self->GetAsyncLoadState(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAsyncLoadState );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_CompressedLevel_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_CompressedLevel_GETF_data_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_format_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_format_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_width_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_width_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_height_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_height_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_depth_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_depth_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_blockSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_blockSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_dataSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_dataSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_rowSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_rowSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_GETF_rows_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_SETF_rows_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_CompressedLevel_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CompressedLevel_Decompress( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_CompressedLevel_Meths[] = 
{
  { dao_Craft_CompressedLevel_GETF_data_, ".data_ ( self: Craft::CompressedLevel )=>string" },
  { dao_Craft_CompressedLevel_GETF_format_, ".format_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_format_, ".format_=( self: Craft::CompressedLevel, format_: int )" },
  { dao_Craft_CompressedLevel_GETF_width_, ".width_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_width_, ".width_=( self: Craft::CompressedLevel, width_: int )" },
  { dao_Craft_CompressedLevel_GETF_height_, ".height_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_height_, ".height_=( self: Craft::CompressedLevel, height_: int )" },
  { dao_Craft_CompressedLevel_GETF_depth_, ".depth_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_depth_, ".depth_=( self: Craft::CompressedLevel, depth_: int )" },
  { dao_Craft_CompressedLevel_GETF_blockSize_, ".blockSize_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_blockSize_, ".blockSize_=( self: Craft::CompressedLevel, blockSize_: int )" },
  { dao_Craft_CompressedLevel_GETF_dataSize_, ".dataSize_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_dataSize_, ".dataSize_=( self: Craft::CompressedLevel, dataSize_: int )" },
  { dao_Craft_CompressedLevel_GETF_rowSize_, ".rowSize_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_rowSize_, ".rowSize_=( self: Craft::CompressedLevel, rowSize_: int )" },
  { dao_Craft_CompressedLevel_GETF_rows_, ".rows_ ( self: Craft::CompressedLevel )=>int" },
  { dao_Craft_CompressedLevel_SETF_rows_, ".rows_=( self: Craft::CompressedLevel, rows_: int )" },
  { dao_Craft_CompressedLevel_CompressedLevel_dao_3, "CompressedLevel(  )=>Craft::CompressedLevel" },
  { dao_Craft_CompressedLevel_Decompress, "Decompress( self: Craft::CompressedLevel, dest: string )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_CompressedLevel_Delete( DaoValue *self )
{
	delete (Craft::CompressedLevel*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_CompressedLevel_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::CompressedLevel* src = (Craft::CompressedLevel*) DaoValue_TryCastCdataTC( self, dao_Craft_CompressedLevel_Core );
	Craft::CompressedLevel* dest;
	if( target ){
		dest = (Craft::CompressedLevel*) DaoValue_TryCastCdataTC( target, dao_Craft_CompressedLevel_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::CompressedLevel( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_CompressedLevel_Core, dest );
}

static DaoTypeCore Craft_CompressedLevel_Core = 
{
  "Craft::CompressedLevel",
  sizeof(Craft::CompressedLevel),
  { NULL },
  { NULL },
  dao_Craft_CompressedLevel_Nums,
  dao_Craft_CompressedLevel_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_CompressedLevel_Copy,
  Dao_Craft_CompressedLevel_Delete,
  NULL
};
DaoTypeCore *dao_Craft_CompressedLevel_Core = & Craft_CompressedLevel_Core;
static void dao_Craft_CompressedLevel_GETF_data_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutChars( _proc, (char*) self->data_ );
}
static void dao_Craft_CompressedLevel_GETF_format_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->format_ );
}
static void dao_Craft_CompressedLevel_SETF_format_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->format_ = (Craft::CompressedFormat) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_width_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->width_ );
}
static void dao_Craft_CompressedLevel_SETF_width_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->width_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_height_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->height_ );
}
static void dao_Craft_CompressedLevel_SETF_height_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->height_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_depth_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->depth_ );
}
static void dao_Craft_CompressedLevel_SETF_depth_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->depth_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_blockSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->blockSize_ );
}
static void dao_Craft_CompressedLevel_SETF_blockSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->blockSize_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_dataSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->dataSize_ );
}
static void dao_Craft_CompressedLevel_SETF_dataSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->dataSize_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_rowSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->rowSize_ );
}
static void dao_Craft_CompressedLevel_SETF_rowSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->rowSize_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_CompressedLevel_GETF_rows_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->rows_ );
}
static void dao_Craft_CompressedLevel_SETF_rows_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel *self = (Craft::CompressedLevel*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CompressedLevel_Core);
  self->rows_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CompressedLevel_CompressedLevel_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::CompressedLevel _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_CompressedLevel_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CompressedLevel_Decompress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CompressedLevel* self = (Craft::CompressedLevel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CompressedLevel_Core );
  unsigned char* dest = (unsigned char*) DaoValue_TryGetChars( _p[1] );

  bool _Decompress = self->Decompress( dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Decompress );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Image_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Image_Image_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetPixel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetPixel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetPixelInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetPixelInt_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_LoadColorLUT( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_FlipHorizontal( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_FlipVertical( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_Resize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_ClearInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SaveBMP( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SavePNG( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SaveTGA( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SaveJPG( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SaveDDS( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_IsCubemap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_IsArray( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_IsSRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_HasAlphaChannel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetPixel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetPixel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetPixelInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetPixelInt_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetPixelBilinear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetPixelTrilinear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetDepth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetCompressedFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetNumCompressedLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetCompressedLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_GetSubimage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_SetSubimage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Image_PrecalculateLevels( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Image_Meths[] = 
{
  { dao_Craft_Image_Image_dao_2, "Image(  )=>Craft::Image" },
  { dao_Craft_Image_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Image_BeginLoad, "BeginLoad( self: Craft::Image, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Image_Save, "Save( self: Craft::Image, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Image_SetSize, "SetSize( self: Craft::Image, width: int, height: int, components: int )=>bool" },
  { dao_Craft_Image_SetSize_dao_2, "SetSize( self: Craft::Image, width: int, height: int, depth: int, components: int )=>bool" },
  { dao_Craft_Image_SetData, "SetData( self: Craft::Image, pixelData: string )" },
  { dao_Craft_Image_SetPixel, "SetPixel( self: Craft::Image, x: int, y: int, color: Craft::Color )" },
  { dao_Craft_Image_SetPixel_dao_2, "SetPixel( self: Craft::Image, x: int, y: int, z: int, color: Craft::Color )" },
  { dao_Craft_Image_SetPixelInt, "SetPixelInt( self: Craft::Image, x: int, y: int, uintColor: int )" },
  { dao_Craft_Image_SetPixelInt_dao_2, "SetPixelInt( self: Craft::Image, x: int, y: int, z: int, uintColor: int )" },
  { dao_Craft_Image_LoadColorLUT, "LoadColorLUT( self: Craft::Image, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Image_FlipHorizontal, "FlipHorizontal( self: Craft::Image )=>bool" },
  { dao_Craft_Image_FlipVertical, "FlipVertical( self: Craft::Image )=>bool" },
  { dao_Craft_Image_Resize, "Resize( self: Craft::Image, width: int, height: int )=>bool" },
  { dao_Craft_Image_Clear, "Clear( self: Craft::Image, color: Craft::Color )" },
  { dao_Craft_Image_ClearInt, "ClearInt( self: Craft::Image, uintColor: int )" },
  { dao_Craft_Image_SaveBMP, "SaveBMP( self: Craft::Image, fileName: string )=>bool" },
  { dao_Craft_Image_SavePNG, "SavePNG( self: Craft::Image, fileName: string )=>bool" },
  { dao_Craft_Image_SaveTGA, "SaveTGA( self: Craft::Image, fileName: string )=>bool" },
  { dao_Craft_Image_SaveJPG, "SaveJPG( self: Craft::Image, fileName: string, quality: int )=>bool" },
  { dao_Craft_Image_SaveDDS, "SaveDDS( self: Craft::Image, fileName: string )=>bool" },
  { dao_Craft_Image_IsCubemap, "IsCubemap( self: Craft::Image )=>bool" },
  { dao_Craft_Image_IsArray, "IsArray( self: Craft::Image )=>bool" },
  { dao_Craft_Image_IsSRGB, "IsSRGB( self: Craft::Image )=>bool" },
  { dao_Craft_Image_HasAlphaChannel, "HasAlphaChannel( self: Craft::Image )=>bool" },
  { dao_Craft_Image_GetPixel, "GetPixel( self: Craft::Image, x: int, y: int )=>Craft::Color" },
  { dao_Craft_Image_GetPixel_dao_2, "GetPixel( self: Craft::Image, x: int, y: int, z: int )=>Craft::Color" },
  { dao_Craft_Image_GetPixelInt, "GetPixelInt( self: Craft::Image, x: int, y: int )=>int" },
  { dao_Craft_Image_GetPixelInt_dao_2, "GetPixelInt( self: Craft::Image, x: int, y: int, z: int )=>int" },
  { dao_Craft_Image_GetPixelBilinear, "GetPixelBilinear( self: Craft::Image, x: float, y: float )=>Craft::Color" },
  { dao_Craft_Image_GetPixelTrilinear, "GetPixelTrilinear( self: Craft::Image, x: float, y: float, z: float )=>Craft::Color" },
  { dao_Craft_Image_GetWidth, "GetWidth( self: Craft::Image )=>int" },
  { dao_Craft_Image_GetHeight, "GetHeight( self: Craft::Image )=>int" },
  { dao_Craft_Image_GetDepth, "GetDepth( self: Craft::Image )=>int" },
  { dao_Craft_Image_GetComponents, "GetComponents( self: Craft::Image )=>int" },
  { dao_Craft_Image_GetData, "GetData( self: Craft::Image )=>string" },
  { dao_Craft_Image_IsCompressed, "IsCompressed( self: Craft::Image )=>bool" },
  { dao_Craft_Image_GetCompressedFormat, "GetCompressedFormat( self: Craft::Image )=>int" },
  { dao_Craft_Image_GetNumCompressedLevels, "GetNumCompressedLevels( self: Craft::Image )=>int" },
  { dao_Craft_Image_GetCompressedLevel, "GetCompressedLevel( self: Craft::Image, index: int )=>Craft::CompressedLevel" },
  { dao_Craft_Image_GetSubimage, "GetSubimage( self: Craft::Image, rect: Craft::IntRect )=>Craft::Image" },
  { dao_Craft_Image_SetSubimage, "SetSubimage( self: Craft::Image, image: Craft::Image, rect: Craft::IntRect )=>bool" },
  { dao_Craft_Image_PrecalculateLevels, "PrecalculateLevels( self: Craft::Image )" },
  { NULL, NULL }
};
static void Dao_Craft_Image_Delete( DaoValue *self )
{
	Craft::Image *obj = (Craft::Image*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Image_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Image *self = (DaoCxx_Craft_Image*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Image_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Image*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Image*)data);
}

static DaoTypeCore Craft_Image_Core = 
{
  "Craft::Image",
  sizeof(Craft::Image),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Image_Craft_Resource,NULL },
  dao_Craft_Image_Nums,
  dao_Craft_Image_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Image_Delete,
  Dao_Craft_Image_HandleGC
};
DaoTypeCore *dao_Craft_Image_Core = & Craft_Image_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_Image_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Image *_self = new DaoCxx_Craft_Image( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Image::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );
  unsigned int components = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  bool _SetSize = self->SetSize( width, height, components );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );
  int depth = (int) DaoValue_TryGetInteger( _p[3] );
  unsigned int components = (unsigned int) DaoValue_TryGetInteger( _p[4] );

  bool _SetSize = self->SetSize( width, height, depth, components );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  const unsigned char* pixelData = (const unsigned char*) DaoValue_TryGetChars( _p[1] );

  self->SetData( pixelData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetPixel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Color_Core );

  self->SetPixel( x, y, *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetPixel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  int z = (int) DaoValue_TryGetInteger( _p[3] );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Color_Core );

  self->SetPixel( x, y, z, *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetPixelInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  unsigned int uintColor = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  self->SetPixelInt( x, y, uintColor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetPixelInt_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  int z = (int) DaoValue_TryGetInteger( _p[3] );
  unsigned int uintColor = (unsigned int) DaoValue_TryGetInteger( _p[4] );

  self->SetPixelInt( x, y, z, uintColor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_LoadColorLUT( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _LoadColorLUT = self->LoadColorLUT( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadColorLUT );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_FlipHorizontal( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _FlipHorizontal = self->FlipHorizontal(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _FlipHorizontal );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_FlipVertical( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _FlipVertical = self->FlipVertical(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _FlipVertical );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_Resize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );

  bool _Resize = self->Resize( width, height );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Resize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );

  self->Clear( *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_ClearInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  unsigned int uintColor = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->ClearInt( uintColor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SaveBMP( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _SaveBMP = self->SaveBMP( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveBMP );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SavePNG( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _SavePNG = self->SavePNG( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SavePNG );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SaveTGA( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _SaveTGA = self->SaveTGA( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveTGA );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SaveJPG( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  int quality = (int) DaoValue_TryGetInteger( _p[2] );

  bool _SaveJPG = self->SaveJPG( fileName, quality );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveJPG );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SaveDDS( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  bool _SaveDDS = self->SaveDDS( fileName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveDDS );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_IsCubemap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _IsCubemap = self->IsCubemap(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsCubemap );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_IsArray( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _IsArray = self->IsArray(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsArray );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_IsSRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _IsSRGB = self->IsSRGB(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSRGB );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_HasAlphaChannel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _HasAlphaChannel = self->HasAlphaChannel(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasAlphaChannel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetPixel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  Craft::Color _GetPixel = self->GetPixel( x, y );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _GetPixel ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetPixel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  int z = (int) DaoValue_TryGetInteger( _p[3] );

  Craft::Color _GetPixel = self->GetPixel( x, y, z );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _GetPixel ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetPixelInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _GetPixelInt = self->GetPixelInt( x, y );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPixelInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetPixelInt_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  int z = (int) DaoValue_TryGetInteger( _p[3] );

  unsigned int _GetPixelInt = self->GetPixelInt( x, y, z );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPixelInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetPixelBilinear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Color _GetPixelBilinear = self->GetPixelBilinear( x, y );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _GetPixelBilinear ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetPixelTrilinear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );
  float z = (float) DaoValue_TryGetFloat( _p[3] );

  Craft::Color _GetPixelTrilinear = self->GetPixelTrilinear( x, y, z );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _GetPixelTrilinear ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  int _GetWidth = self->GetWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  int _GetHeight = self->GetHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetDepth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  int _GetDepth = self->GetDepth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDepth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  unsigned int _GetComponents = self->GetComponents(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetComponents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  unsigned char* _GetData = self->GetData(  );
  DaoProcess_PutChars( _proc, (char*) _GetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  bool _IsCompressed = self->IsCompressed(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsCompressed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetCompressedFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  Craft::CompressedFormat _GetCompressedFormat = self->GetCompressedFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCompressedFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetNumCompressedLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  unsigned int _GetNumCompressedLevels = self->GetNumCompressedLevels(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumCompressedLevels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetCompressedLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::CompressedLevel _GetCompressedLevel = self->GetCompressedLevel( index );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::CompressedLevel( _GetCompressedLevel ), dao_Craft_CompressedLevel_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_GetSubimage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  Craft::IntRect* rect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntRect_Core );

  Craft::Image* _GetSubimage = self->GetSubimage( *rect );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSubimage, dao_Craft_Image_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_SetSubimage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );
  Craft::Image* image = (Craft::Image*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Image_Core );
  Craft::IntRect* rect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntRect_Core );

  bool _SetSubimage = self->SetSubimage( image, *rect );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetSubimage );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Image_PrecalculateLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Image* self = (Craft::Image*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Image_Core );

  self->PrecalculateLevels(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Localization_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Localization_Localization_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_GetNumLanguages( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_GetLanguageIndex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_GetLanguageIndex_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_GetLanguage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_GetLanguage_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_SetLanguage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_SetLanguage_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_Get( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Localization_LoadJSONFile( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Localization_Meths[] = 
{
  { dao_Craft_Localization_Localization_dao_2, "Localization(  )=>Craft::Localization" },
  { dao_Craft_Localization_GetNumLanguages, "GetNumLanguages( self: Craft::Localization )=>int" },
  { dao_Craft_Localization_GetLanguageIndex, "GetLanguageIndex( self: Craft::Localization )=>int" },
  { dao_Craft_Localization_GetLanguageIndex_dao_2, "GetLanguageIndex( self: Craft::Localization, language: string )=>int" },
  { dao_Craft_Localization_GetLanguage, "GetLanguage( self: Craft::Localization )=>string" },
  { dao_Craft_Localization_GetLanguage_dao_2, "GetLanguage( self: Craft::Localization, index: int )=>string" },
  { dao_Craft_Localization_SetLanguage, "SetLanguage( self: Craft::Localization, index: int )" },
  { dao_Craft_Localization_SetLanguage_dao_2, "SetLanguage( self: Craft::Localization, language: string )" },
  { dao_Craft_Localization_Get, "Get( self: Craft::Localization, id: string )=>string" },
  { dao_Craft_Localization_Reset, "Reset( self: Craft::Localization )" },
  { dao_Craft_Localization_LoadJSONFile, "LoadJSONFile( self: Craft::Localization, name: string )" },
  { NULL, NULL }
};
static void Dao_Craft_Localization_Delete( DaoValue *self )
{
	Craft::Localization *obj = (Craft::Localization*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Localization_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Localization *self = (DaoCxx_Craft_Localization*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Localization_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Localization*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Localization*)data);
}

static DaoTypeCore Craft_Localization_Core = 
{
  "Craft::Localization",
  sizeof(Craft::Localization),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Localization_Craft_Object,NULL },
  dao_Craft_Localization_Nums,
  dao_Craft_Localization_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Localization_Delete,
  Dao_Craft_Localization_HandleGC
};
DaoTypeCore *dao_Craft_Localization_Core = & Craft_Localization_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_Localization_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Localization *_self = new DaoCxx_Craft_Localization( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_GetNumLanguages( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );

  int _GetNumLanguages = self->GetNumLanguages(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumLanguages );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_GetLanguageIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );

  int _GetLanguageIndex = self->GetLanguageIndex(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLanguageIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_GetLanguageIndex_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );
  DString *__str_language = DaoValue_TryGetString( _p[1] );
  Craft::String language( DString_GetData( __str_language ), DString_Size( __str_language ) );

  int _GetLanguageIndex = self->GetLanguageIndex( language );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLanguageIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_GetLanguage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );

  Craft::String _GetLanguage = self->GetLanguage(  );
  DaoProcess_PutBytes( _proc, (char*) _GetLanguage.CString(), _GetLanguage.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_GetLanguage_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );
  int index = (int) DaoValue_TryGetInteger( _p[1] );

  Craft::String _GetLanguage = self->GetLanguage( index );
  DaoProcess_PutBytes( _proc, (char*) _GetLanguage.CString(), _GetLanguage.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_SetLanguage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );
  int index = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLanguage( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_SetLanguage_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );
  DString *__str_language = DaoValue_TryGetString( _p[1] );
  Craft::String language( DString_GetData( __str_language ), DString_Size( __str_language ) );

  self->SetLanguage( language );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_Get( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  Craft::String _Get = self->Get( id );
  DaoProcess_PutBytes( _proc, (char*) _Get.CString(), _Get.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Localization_LoadJSONFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Localization* self = (Craft::Localization*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Localization_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->LoadJSONFile( name );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_XMLFile_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_XMLFile_XMLFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_Save_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_FromString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_CreateRoot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_GetRoot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_ToString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_Patch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLFile_Patch_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_XMLFile_Meths[] = 
{
  { dao_Craft_XMLFile_XMLFile_dao_2, "XMLFile(  )=>Craft::XMLFile" },
  { dao_Craft_XMLFile_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_XMLFile_BeginLoad, "BeginLoad( self: Craft::XMLFile, source: Craft::Deserializer )=>bool" },
  { dao_Craft_XMLFile_Save, "Save( self: Craft::XMLFile, dest: Craft::Serializer )=>bool" },
  { dao_Craft_XMLFile_Save_dao_2, "Save( self: Craft::XMLFile, dest: Craft::Serializer, indentation: string )=>bool" },
  { dao_Craft_XMLFile_FromString, "FromString( self: Craft::XMLFile, source: string )=>bool" },
  { dao_Craft_XMLFile_CreateRoot, "CreateRoot( self: Craft::XMLFile, name: string )=>Craft::XMLElement" },
  { dao_Craft_XMLFile_GetRoot, "GetRoot( self: Craft::XMLFile, name: string ='' )=>Craft::XMLElement" },
  { dao_Craft_XMLFile_ToString, "ToString( self: Craft::XMLFile, indentation: string ='\t' )=>string" },
  { dao_Craft_XMLFile_Patch, "Patch( self: Craft::XMLFile, patchFile: Craft::XMLFile )" },
  { dao_Craft_XMLFile_Patch_dao_2, "Patch( self: Craft::XMLFile, patchElement: Craft::XMLElement )" },
  { NULL, NULL }
};
static void Dao_Craft_XMLFile_Delete( DaoValue *self )
{
	Craft::XMLFile *obj = (Craft::XMLFile*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_XMLFile_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_XMLFile *self = (DaoCxx_Craft_XMLFile*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_XMLFile_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::XMLFile*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::XMLFile*)data);
}

static DaoTypeCore Craft_XMLFile_Core = 
{
  "Craft::XMLFile",
  sizeof(Craft::XMLFile),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_XMLFile_Craft_Resource,NULL },
  dao_Craft_XMLFile_Nums,
  dao_Craft_XMLFile_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_XMLFile_Delete,
  Dao_Craft_XMLFile_HandleGC
};
DaoTypeCore *dao_Craft_XMLFile_Core = & Craft_XMLFile_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_XMLFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_XMLFile *_self = new DaoCxx_Craft_XMLFile( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::XMLFile::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_Save_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );
  DString *__str_indentation = DaoValue_TryGetString( _p[2] );
  Craft::String indentation( DString_GetData( __str_indentation ), DString_Size( __str_indentation ) );

  bool _Save = self->Save( *dest, indentation );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_FromString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  DString *__str_source = DaoValue_TryGetString( _p[1] );
  Craft::String source( DString_GetData( __str_source ), DString_Size( __str_source ) );

  bool _FromString = self->FromString( source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _FromString );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_CreateRoot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::XMLElement _CreateRoot = self->CreateRoot( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _CreateRoot ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_GetRoot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::XMLElement _GetRoot = self->GetRoot( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _GetRoot ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_ToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  DString *__str_indentation = DaoValue_TryGetString( _p[1] );
  Craft::String indentation( DString_GetData( __str_indentation ), DString_Size( __str_indentation ) );

  Craft::String _ToString = self->ToString( indentation );
  DaoProcess_PutBytes( _proc, (char*) _ToString.CString(), _ToString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_Patch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  Craft::XMLFile* patchFile = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLFile_Core );

  self->Patch( patchFile );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLFile_Patch_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLFile* self = (Craft::XMLFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLFile_Core );
  Craft::XMLElement* patchElement = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  self->Patch( *patchElement );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_XPathQuery_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_XPathQuery_XPathQuery_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_XPathQuery_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_Bind( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_SetVariable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_SetVariable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_SetVariable_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_SetVariable_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_SetVariable_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_SetQuery( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_EvaluateToBool( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_EvaluateToFloat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_EvaluateToString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_Evaluate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathQuery_GetQuery( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_XPathQuery_Meths[] = 
{
  { dao_Craft_XPathQuery_XPathQuery_dao_3, "XPathQuery(  )=>Craft::XPathQuery" },
  { dao_Craft_XPathQuery_XPathQuery_dao_4, "XPathQuery( queryString: string, variableString: string ='' )=>Craft::XPathQuery" },
  { dao_Craft_XPathQuery_Bind, "Bind( self: Craft::XPathQuery )" },
  { dao_Craft_XPathQuery_SetVariable, "SetVariable( self: Craft::XPathQuery, name: string, value: bool )=>bool" },
  { dao_Craft_XPathQuery_SetVariable_dao_2, "SetVariable( self: Craft::XPathQuery, name: string, value: float )=>bool" },
  { dao_Craft_XPathQuery_SetVariable_dao_3, "SetVariable( self: Craft::XPathQuery, name: string, value: string )=>bool" },
  { dao_Craft_XPathQuery_SetVariable_dao_4, "SetVariable( self: Craft::XPathQuery, name: string, value: string )=>bool" },
  { dao_Craft_XPathQuery_SetVariable_dao_5, "SetVariable( self: Craft::XPathQuery, name: string, value: Craft::XPathResultSet )=>bool" },
  { dao_Craft_XPathQuery_SetQuery, "SetQuery( self: Craft::XPathQuery, queryString: string, variableString: string ='', bind: bool =true )=>bool" },
  { dao_Craft_XPathQuery_Clear, "Clear( self: Craft::XPathQuery )" },
  { dao_Craft_XPathQuery_EvaluateToBool, "EvaluateToBool( self: Craft::XPathQuery, element: Craft::XMLElement )=>bool" },
  { dao_Craft_XPathQuery_EvaluateToFloat, "EvaluateToFloat( self: Craft::XPathQuery, element: Craft::XMLElement )=>float" },
  { dao_Craft_XPathQuery_EvaluateToString, "EvaluateToString( self: Craft::XPathQuery, element: Craft::XMLElement )=>string" },
  { dao_Craft_XPathQuery_Evaluate, "Evaluate( self: Craft::XPathQuery, element: Craft::XMLElement )=>Craft::XPathResultSet" },
  { dao_Craft_XPathQuery_GetQuery, "GetQuery( self: Craft::XPathQuery )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_XPathQuery_Delete( DaoValue *self )
{
	delete (Craft::XPathQuery*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_XPathQuery_Core = 
{
  "Craft::XPathQuery",
  sizeof(Craft::XPathQuery),
  { NULL },
  { NULL },
  dao_Craft_XPathQuery_Nums,
  dao_Craft_XPathQuery_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_XPathQuery_Delete,
  NULL
};
DaoTypeCore *dao_Craft_XPathQuery_Core = & Craft_XPathQuery_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_XPathQuery_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::XPathQuery *_self = new Craft::XPathQuery(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_XPathQuery_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_XPathQuery_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_queryString = DaoValue_TryGetString( _p[0] );
  Craft::String queryString( DString_GetData( __str_queryString ), DString_Size( __str_queryString ) );
  DString *__str_variableString = DaoValue_TryGetString( _p[1] );
  Craft::String variableString( DString_GetData( __str_variableString ), DString_Size( __str_variableString ) );

  Craft::XPathQuery *_self = new Craft::XPathQuery( queryString, variableString );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_XPathQuery_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_Bind( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );

  self->Bind(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_SetVariable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool value = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _SetVariable = self->SetVariable( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_SetVariable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float value = (float) DaoValue_TryGetFloat( _p[2] );

  bool _SetVariable = self->SetVariable( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_SetVariable_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  DString *__str_value = DaoValue_TryGetString( _p[2] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _SetVariable = self->SetVariable( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_SetVariable_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );
  const char* value = (const char*) DaoValue_TryGetChars( _p[2] );

  bool _SetVariable = self->SetVariable( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_SetVariable_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::XPathResultSet* value = (Craft::XPathResultSet*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_XPathResultSet_Core );

  bool _SetVariable = self->SetVariable( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_SetQuery( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  DString *__str_queryString = DaoValue_TryGetString( _p[1] );
  Craft::String queryString( DString_GetData( __str_queryString ), DString_Size( __str_queryString ) );
  DString *__str_variableString = DaoValue_TryGetString( _p[2] );
  Craft::String variableString( DString_GetData( __str_variableString ), DString_Size( __str_variableString ) );
  bool bind = (bool) DaoValue_TryGetBoolean( _p[3] );

  bool _SetQuery = self->SetQuery( queryString, variableString, bind );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetQuery );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_EvaluateToBool( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  Craft::XMLElement* element = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  bool _EvaluateToBool = self->EvaluateToBool( *element );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EvaluateToBool );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_EvaluateToFloat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  Craft::XMLElement* element = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  float _EvaluateToFloat = self->EvaluateToFloat( *element );
  DaoProcess_PutFloat( _proc, (dao_float) _EvaluateToFloat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_EvaluateToString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  Craft::XMLElement* element = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  Craft::String _EvaluateToString = self->EvaluateToString( *element );
  DaoProcess_PutBytes( _proc, (char*) _EvaluateToString.CString(), _EvaluateToString.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_Evaluate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );
  Craft::XMLElement* element = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  Craft::XPathResultSet _Evaluate = self->Evaluate( *element );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XPathResultSet( _Evaluate ), dao_Craft_XPathResultSet_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathQuery_GetQuery( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathQuery* self = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathQuery_Core );

  Craft::String _GetQuery = self->GetQuery(  );
  DaoProcess_PutBytes( _proc, (char*) _GetQuery.CString(), _GetQuery.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_XPathResultSet_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_XPathResultSet_XPathResultSet_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathResultSet_FirstResult( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathResultSet_Size( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XPathResultSet_Empty( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_XPathResultSet_Meths[] = 
{
  { dao_Craft_XPathResultSet_XPathResultSet_dao_2, "XPathResultSet(  )=>Craft::XPathResultSet" },
  { dao_Craft_XPathResultSet_FirstResult, "FirstResult( self: Craft::XPathResultSet )=>Craft::XMLElement" },
  { dao_Craft_XPathResultSet_Size, "Size( self: Craft::XPathResultSet )=>int" },
  { dao_Craft_XPathResultSet_Empty, "Empty( self: Craft::XPathResultSet )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_XPathResultSet_Delete( DaoValue *self )
{
	delete (Craft::XPathResultSet*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_XPathResultSet_Core = 
{
  "Craft::XPathResultSet",
  sizeof(Craft::XPathResultSet),
  { NULL },
  { NULL },
  dao_Craft_XPathResultSet_Nums,
  dao_Craft_XPathResultSet_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_XPathResultSet_Delete,
  NULL
};
DaoTypeCore *dao_Craft_XPathResultSet_Core = & Craft_XPathResultSet_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathResultSet_XPathResultSet_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::XPathResultSet *_self = new Craft::XPathResultSet(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_XPathResultSet_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathResultSet_FirstResult( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathResultSet* self = (Craft::XPathResultSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathResultSet_Core );

  Craft::XMLElement _FirstResult = self->FirstResult(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _FirstResult ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathResultSet_Size( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathResultSet* self = (Craft::XPathResultSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathResultSet_Core );

  unsigned int _Size = self->Size(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _Size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XPathResultSet_Empty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XPathResultSet* self = (Craft::XPathResultSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XPathResultSet_Core );

  bool _Empty = self->Empty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Empty );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_XMLElement_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_XMLElement_XMLElement_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_CreateChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_CreateChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveChild_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveChildren_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveAttribute( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_RemoveAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SelectSinglePrepared( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SelectPrepared( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetValue_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetAttribute_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetAttribute_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetBool( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetBuffer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetFloat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetDouble( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetUInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetIntRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetVariant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetVariantValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_SetMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_IsNull( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_NotNull( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_HasChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_HasChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetNext( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetNext_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetNumAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_HasAttribute( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_HasAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttributeCString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttributeLower( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttributeLower_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttributeUpper( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetAttributeUpper_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetBool( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetFloat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetDouble( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetUInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetInt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetIntRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVariant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVariantValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVector2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVector3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVector4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVector( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetVectorVariant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetXPathResultSet( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_GetXPathResultIndex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_XMLElement_NextResult( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_XMLElement_Meths[] = 
{
  { dao_Craft_XMLElement_XMLElement_dao_2, "XMLElement(  )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_CreateChild, "CreateChild( self: Craft::XMLElement, name: string )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_CreateChild_dao_2, "CreateChild( self: Craft::XMLElement, name: string )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_RemoveChild, "RemoveChild( self: Craft::XMLElement, element: Craft::XMLElement )=>bool" },
  { dao_Craft_XMLElement_RemoveChild_dao_2, "RemoveChild( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_RemoveChild_dao_3, "RemoveChild( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_RemoveChildren, "RemoveChildren( self: Craft::XMLElement, name: string ='' )=>bool" },
  { dao_Craft_XMLElement_RemoveChildren_dao_2, "RemoveChildren( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_RemoveAttribute, "RemoveAttribute( self: Craft::XMLElement, name: string ='' )=>bool" },
  { dao_Craft_XMLElement_RemoveAttribute_dao_2, "RemoveAttribute( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_SelectSinglePrepared, "SelectSinglePrepared( self: Craft::XMLElement, query: Craft::XPathQuery )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_SelectPrepared, "SelectPrepared( self: Craft::XMLElement, query: Craft::XPathQuery )=>Craft::XPathResultSet" },
  { dao_Craft_XMLElement_SetValue, "SetValue( self: Craft::XMLElement, value: string )=>bool" },
  { dao_Craft_XMLElement_SetValue_dao_2, "SetValue( self: Craft::XMLElement, value: string )=>bool" },
  { dao_Craft_XMLElement_SetAttribute, "SetAttribute( self: Craft::XMLElement, name: string, value: string )=>bool" },
  { dao_Craft_XMLElement_SetAttribute_dao_2, "SetAttribute( self: Craft::XMLElement, name: string, value: string )=>bool" },
  { dao_Craft_XMLElement_SetAttribute_dao_3, "SetAttribute( self: Craft::XMLElement, value: string )=>bool" },
  { dao_Craft_XMLElement_SetAttribute_dao_4, "SetAttribute( self: Craft::XMLElement, value: string )=>bool" },
  { dao_Craft_XMLElement_SetBool, "SetBool( self: Craft::XMLElement, name: string, value: bool )=>bool" },
  { dao_Craft_XMLElement_SetBoundingBox, "SetBoundingBox( self: Craft::XMLElement, value: Craft::BoundingBox )=>bool" },
  { dao_Craft_XMLElement_SetBuffer, "SetBuffer( self: Craft::XMLElement, name: string, data: cdata, size: int )=>bool" },
  { dao_Craft_XMLElement_SetColor, "SetColor( self: Craft::XMLElement, name: string, value: Craft::Color )=>bool" },
  { dao_Craft_XMLElement_SetFloat, "SetFloat( self: Craft::XMLElement, name: string, value: float )=>bool" },
  { dao_Craft_XMLElement_SetDouble, "SetDouble( self: Craft::XMLElement, name: string, value: float )=>bool" },
  { dao_Craft_XMLElement_SetUInt, "SetUInt( self: Craft::XMLElement, name: string, value: int )=>bool" },
  { dao_Craft_XMLElement_SetInt, "SetInt( self: Craft::XMLElement, name: string, value: int )=>bool" },
  { dao_Craft_XMLElement_SetIntRect, "SetIntRect( self: Craft::XMLElement, name: string, value: Craft::IntRect )=>bool" },
  { dao_Craft_XMLElement_SetIntVector2, "SetIntVector2( self: Craft::XMLElement, name: string, value: Craft::IntVector2 )=>bool" },
  { dao_Craft_XMLElement_SetRect, "SetRect( self: Craft::XMLElement, name: string, value: Craft::Rect )=>bool" },
  { dao_Craft_XMLElement_SetQuaternion, "SetQuaternion( self: Craft::XMLElement, name: string, value: Craft::Quaternion )=>bool" },
  { dao_Craft_XMLElement_SetString, "SetString( self: Craft::XMLElement, name: string, value: string )=>bool" },
  { dao_Craft_XMLElement_SetVariant, "SetVariant( self: Craft::XMLElement, value: Craft::Variant )=>bool" },
  { dao_Craft_XMLElement_SetVariantValue, "SetVariantValue( self: Craft::XMLElement, value: Craft::Variant )=>bool" },
  { dao_Craft_XMLElement_SetVariantMap, "SetVariantMap( self: Craft::XMLElement, value: Craft::VariantMap )=>bool" },
  { dao_Craft_XMLElement_SetVector2, "SetVector2( self: Craft::XMLElement, name: string, value: Craft::Vector2 )=>bool" },
  { dao_Craft_XMLElement_SetVector3, "SetVector3( self: Craft::XMLElement, name: string, value: Craft::Vector3 )=>bool" },
  { dao_Craft_XMLElement_SetVector4, "SetVector4( self: Craft::XMLElement, name: string, value: Craft::Vector4 )=>bool" },
  { dao_Craft_XMLElement_SetMatrix3, "SetMatrix3( self: Craft::XMLElement, name: string, value: Craft::Matrix3 )=>bool" },
  { dao_Craft_XMLElement_SetMatrix3x4, "SetMatrix3x4( self: Craft::XMLElement, name: string, value: Craft::Matrix3x4 )=>bool" },
  { dao_Craft_XMLElement_SetMatrix4, "SetMatrix4( self: Craft::XMLElement, name: string, value: Craft::Matrix4 )=>bool" },
  { dao_Craft_XMLElement_IsNull, "IsNull( self: Craft::XMLElement )=>bool" },
  { dao_Craft_XMLElement_NotNull, "NotNull( self: Craft::XMLElement )=>bool" },
  { dao_Craft_XMLElement_GetName, "GetName( self: Craft::XMLElement )=>string" },
  { dao_Craft_XMLElement_HasChild, "HasChild( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_HasChild_dao_2, "HasChild( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_GetChild, "GetChild( self: Craft::XMLElement, name: string ='' )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_GetChild_dao_2, "GetChild( self: Craft::XMLElement, name: string )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_GetNext, "GetNext( self: Craft::XMLElement, name: string ='' )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_GetNext_dao_2, "GetNext( self: Craft::XMLElement, name: string )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_GetParent, "GetParent( self: Craft::XMLElement )=>Craft::XMLElement" },
  { dao_Craft_XMLElement_GetNumAttributes, "GetNumAttributes( self: Craft::XMLElement )=>int" },
  { dao_Craft_XMLElement_HasAttribute, "HasAttribute( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_HasAttribute_dao_2, "HasAttribute( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_GetValue, "GetValue( self: Craft::XMLElement )=>string" },
  { dao_Craft_XMLElement_GetAttribute, "GetAttribute( self: Craft::XMLElement, name: string ='' )=>string" },
  { dao_Craft_XMLElement_GetAttribute_dao_2, "GetAttribute( self: Craft::XMLElement, name: string )=>string" },
  { dao_Craft_XMLElement_GetAttributeCString, "GetAttributeCString( self: Craft::XMLElement, name: string )=>string" },
  { dao_Craft_XMLElement_GetAttributeLower, "GetAttributeLower( self: Craft::XMLElement, name: string )=>string" },
  { dao_Craft_XMLElement_GetAttributeLower_dao_2, "GetAttributeLower( self: Craft::XMLElement, name: string )=>string" },
  { dao_Craft_XMLElement_GetAttributeUpper, "GetAttributeUpper( self: Craft::XMLElement, name: string )=>string" },
  { dao_Craft_XMLElement_GetAttributeUpper_dao_2, "GetAttributeUpper( self: Craft::XMLElement, name: string )=>string" },
  { dao_Craft_XMLElement_GetBool, "GetBool( self: Craft::XMLElement, name: string )=>bool" },
  { dao_Craft_XMLElement_GetBoundingBox, "GetBoundingBox( self: Craft::XMLElement )=>Craft::BoundingBox" },
  { dao_Craft_XMLElement_GetColor, "GetColor( self: Craft::XMLElement, name: string )=>Craft::Color" },
  { dao_Craft_XMLElement_GetFloat, "GetFloat( self: Craft::XMLElement, name: string )=>float" },
  { dao_Craft_XMLElement_GetDouble, "GetDouble( self: Craft::XMLElement, name: string )=>float" },
  { dao_Craft_XMLElement_GetUInt, "GetUInt( self: Craft::XMLElement, name: string )=>int" },
  { dao_Craft_XMLElement_GetInt, "GetInt( self: Craft::XMLElement, name: string )=>int" },
  { dao_Craft_XMLElement_GetIntRect, "GetIntRect( self: Craft::XMLElement, name: string )=>Craft::IntRect" },
  { dao_Craft_XMLElement_GetIntVector2, "GetIntVector2( self: Craft::XMLElement, name: string )=>Craft::IntVector2" },
  { dao_Craft_XMLElement_GetRect, "GetRect( self: Craft::XMLElement, name: string )=>Craft::Rect" },
  { dao_Craft_XMLElement_GetQuaternion, "GetQuaternion( self: Craft::XMLElement, name: string )=>Craft::Quaternion" },
  { dao_Craft_XMLElement_GetVariant, "GetVariant( self: Craft::XMLElement )=>Craft::Variant" },
  { dao_Craft_XMLElement_GetVariantValue, "GetVariantValue( self: Craft::XMLElement, type: int )=>Craft::Variant" },
  { dao_Craft_XMLElement_GetVariantMap, "GetVariantMap( self: Craft::XMLElement )=>Craft::VariantMap" },
  { dao_Craft_XMLElement_GetVector2, "GetVector2( self: Craft::XMLElement, name: string )=>Craft::Vector2" },
  { dao_Craft_XMLElement_GetVector3, "GetVector3( self: Craft::XMLElement, name: string )=>Craft::Vector3" },
  { dao_Craft_XMLElement_GetVector4, "GetVector4( self: Craft::XMLElement, name: string )=>Craft::Vector4" },
  { dao_Craft_XMLElement_GetVector, "GetVector( self: Craft::XMLElement, name: string )=>Craft::Vector4" },
  { dao_Craft_XMLElement_GetVectorVariant, "GetVectorVariant( self: Craft::XMLElement, name: string )=>Craft::Variant" },
  { dao_Craft_XMLElement_GetMatrix3, "GetMatrix3( self: Craft::XMLElement, name: string )=>Craft::Matrix3" },
  { dao_Craft_XMLElement_GetMatrix3x4, "GetMatrix3x4( self: Craft::XMLElement, name: string )=>Craft::Matrix3x4" },
  { dao_Craft_XMLElement_GetMatrix4, "GetMatrix4( self: Craft::XMLElement, name: string )=>Craft::Matrix4" },
  { dao_Craft_XMLElement_GetFile, "GetFile( self: Craft::XMLElement )=>Craft::XMLFile" },
  { dao_Craft_XMLElement_GetXPathResultSet, "GetXPathResultSet( self: Craft::XMLElement )=>Craft::XPathResultSet" },
  { dao_Craft_XMLElement_GetXPathResultIndex, "GetXPathResultIndex( self: Craft::XMLElement )=>int" },
  { dao_Craft_XMLElement_NextResult, "NextResult( self: Craft::XMLElement )=>Craft::XMLElement" },
  { NULL, NULL }
};
static void Dao_Craft_XMLElement_Delete( DaoValue *self )
{
	delete (Craft::XMLElement*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_XMLElement_Core = 
{
  "Craft::XMLElement",
  sizeof(Craft::XMLElement),
  { NULL },
  { NULL },
  dao_Craft_XMLElement_Nums,
  dao_Craft_XMLElement_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_XMLElement_Delete,
  NULL
};
DaoTypeCore *dao_Craft_XMLElement_Core = & Craft_XMLElement_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_XMLElement_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::XMLElement *_self = new Craft::XMLElement(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_CreateChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::XMLElement _CreateChild = self->CreateChild( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _CreateChild ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_CreateChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::XMLElement _CreateChild = self->CreateChild( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _CreateChild ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::XMLElement* element = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  bool _RemoveChild = self->RemoveChild( *element );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _RemoveChild = self->RemoveChild( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveChild_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _RemoveChild = self->RemoveChild( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveChildren( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _RemoveChildren = self->RemoveChildren( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveChildren );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveChildren_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _RemoveChildren = self->RemoveChildren( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveChildren );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveAttribute( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _RemoveAttribute = self->RemoveAttribute( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_RemoveAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _RemoveAttribute = self->RemoveAttribute( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SelectSinglePrepared( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::XPathQuery* query = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XPathQuery_Core );

  Craft::XMLElement _SelectSinglePrepared = self->SelectSinglePrepared( *query );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _SelectSinglePrepared ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SelectPrepared( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::XPathQuery* query = (Craft::XPathQuery*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XPathQuery_Core );

  Craft::XPathResultSet _SelectPrepared = self->SelectPrepared( *query );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XPathResultSet( _SelectPrepared ), dao_Craft_XPathResultSet_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _SetValue = self->SetValue( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetValue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetValue_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* value = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _SetValue = self->SetValue( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetValue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  DString *__str_value = DaoValue_TryGetString( _p[2] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _SetAttribute = self->SetAttribute( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );
  const char* value = (const char*) DaoValue_TryGetChars( _p[2] );

  bool _SetAttribute = self->SetAttribute( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetAttribute_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _SetAttribute = self->SetAttribute( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetAttribute_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* value = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _SetAttribute = self->SetAttribute( value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetBool( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool value = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _SetBool = self->SetBool( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetBool );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::BoundingBox* value = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  bool _SetBoundingBox = self->SetBoundingBox( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetBoundingBox );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetBuffer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  const void* data = (const void*) DaoValue_TryGetCdata( _p[2] );
  unsigned int size = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  bool _SetBuffer = self->SetBuffer( name, data, size );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetBuffer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Color* value = (Craft::Color*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Color_Core );

  bool _SetColor = self->SetColor( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetColor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetFloat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float value = (float) DaoValue_TryGetFloat( _p[2] );

  bool _SetFloat = self->SetFloat( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetFloat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetDouble( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  double value = (double) DaoValue_TryGetFloat( _p[2] );

  bool _SetDouble = self->SetDouble( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetDouble );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetUInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _SetUInt = self->SetUInt( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetUInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  int value = (int) DaoValue_TryGetInteger( _p[2] );

  bool _SetInt = self->SetInt( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetIntRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::IntRect* value = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntRect_Core );

  bool _SetIntRect = self->SetIntRect( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetIntRect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::IntVector2* value = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntVector2_Core );

  bool _SetIntVector2 = self->SetIntVector2( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetIntVector2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Rect* value = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Rect_Core );

  bool _SetRect = self->SetRect( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetRect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Quaternion* value = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  bool _SetQuaternion = self->SetQuaternion( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetQuaternion );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  DString *__str_value = DaoValue_TryGetString( _p[2] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  bool _SetString = self->SetString( name, value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetString );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetVariant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );

  bool _SetVariant = self->SetVariant( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariant );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetVariantValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Variant_Core );

  bool _SetVariantValue = self->SetVariantValue( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariantValue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::VariantMap* value = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_VariantMap_Core );

  bool _SetVariantMap = self->SetVariantMap( *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVariantMap );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Vector2* value = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector2_Core );

  bool _SetVector2 = self->SetVector2( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVector2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Vector3* value = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  bool _SetVector3 = self->SetVector3( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVector3 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Vector4* value = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector4_Core );

  bool _SetVector4 = self->SetVector4( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetVector4 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Matrix3* value = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Matrix3_Core );

  bool _SetMatrix3 = self->SetMatrix3( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMatrix3 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Matrix3x4* value = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Matrix3x4_Core );

  bool _SetMatrix3x4 = self->SetMatrix3x4( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMatrix3x4 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_SetMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Matrix4* value = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Matrix4_Core );

  bool _SetMatrix4 = self->SetMatrix4( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMatrix4 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_IsNull( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  bool _IsNull = self->IsNull(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsNull );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_NotNull( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  bool _NotNull = self->NotNull(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _NotNull );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::String _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_HasChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _HasChild = self->HasChild( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_HasChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _HasChild = self->HasChild( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::XMLElement _GetChild = self->GetChild( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _GetChild ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::XMLElement _GetChild = self->GetChild( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _GetChild ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetNext( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::XMLElement _GetNext = self->GetNext( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _GetNext ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetNext_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::XMLElement _GetNext = self->GetNext( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _GetNext ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::XMLElement _GetParent = self->GetParent(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _GetParent ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetNumAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  unsigned int _GetNumAttributes = self->GetNumAttributes(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumAttributes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_HasAttribute( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _HasAttribute = self->HasAttribute( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_HasAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  bool _HasAttribute = self->HasAttribute( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::String _GetValue = self->GetValue(  );
  DaoProcess_PutBytes( _proc, (char*) _GetValue.CString(), _GetValue.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::String _GetAttribute = self->GetAttribute( name );
  DaoProcess_PutBytes( _proc, (char*) _GetAttribute.CString(), _GetAttribute.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::String _GetAttribute = self->GetAttribute( name );
  DaoProcess_PutBytes( _proc, (char*) _GetAttribute.CString(), _GetAttribute.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttributeCString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  const char* _GetAttributeCString = self->GetAttributeCString( name );
  DaoProcess_PutChars( _proc, (char*) _GetAttributeCString );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttributeLower( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::String _GetAttributeLower = self->GetAttributeLower( name );
  DaoProcess_PutBytes( _proc, (char*) _GetAttributeLower.CString(), _GetAttributeLower.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttributeLower_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::String _GetAttributeLower = self->GetAttributeLower( name );
  DaoProcess_PutBytes( _proc, (char*) _GetAttributeLower.CString(), _GetAttributeLower.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttributeUpper( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::String _GetAttributeUpper = self->GetAttributeUpper( name );
  DaoProcess_PutBytes( _proc, (char*) _GetAttributeUpper.CString(), _GetAttributeUpper.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetAttributeUpper_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::String _GetAttributeUpper = self->GetAttributeUpper( name );
  DaoProcess_PutBytes( _proc, (char*) _GetAttributeUpper.CString(), _GetAttributeUpper.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetBool( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _GetBool = self->GetBool( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetBool );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::BoundingBox _GetBoundingBox = self->GetBoundingBox(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::BoundingBox( _GetBoundingBox ), dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Color _GetColor = self->GetColor( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _GetColor ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetFloat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetFloat = self->GetFloat( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFloat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetDouble( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  double _GetDouble = self->GetDouble( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDouble );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetUInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  unsigned int _GetUInt = self->GetUInt( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetInt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  int _GetInt = self->GetInt( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetInt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetIntRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::IntRect _GetIntRect = self->GetIntRect( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntRect( _GetIntRect ), dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetIntVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::IntVector2 _GetIntVector2 = self->GetIntVector2( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _GetIntVector2 ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Rect _GetRect = self->GetRect( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Rect( _GetRect ), dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetQuaternion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Quaternion _GetQuaternion = self->GetQuaternion( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _GetQuaternion ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVariant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::Variant _GetVariant = self->GetVariant(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetVariant ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVariantValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  Craft::VariantType type = (Craft::VariantType) DaoValue_TryGetInteger( _p[1] );

  Craft::Variant _GetVariantValue = self->GetVariantValue( type );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetVariantValue ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVariantMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::VariantMap _GetVariantMap = self->GetVariantMap(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::VariantMap( _GetVariantMap ), dao_Craft_VariantMap_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVector2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Vector2 _GetVector2 = self->GetVector2( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _GetVector2 ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVector3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Vector3 _GetVector3 = self->GetVector3( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetVector3 ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVector4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Vector4 _GetVector4 = self->GetVector4( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _GetVector4 ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVector( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Vector4 _GetVector = self->GetVector( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _GetVector ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetVectorVariant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Variant _GetVectorVariant = self->GetVectorVariant( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetVectorVariant ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetMatrix3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Matrix3 _GetMatrix3 = self->GetMatrix3( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3( _GetMatrix3 ), dao_Craft_Matrix3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetMatrix3x4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Matrix3x4 _GetMatrix3x4 = self->GetMatrix3x4( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3x4( _GetMatrix3x4 ), dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetMatrix4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Matrix4 _GetMatrix4 = self->GetMatrix4( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix4( _GetMatrix4 ), dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::XMLFile* _GetFile = self->GetFile(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetFile, dao_Craft_XMLFile_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetXPathResultSet( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  const Craft::XPathResultSet* _GetXPathResultSet = self->GetXPathResultSet(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetXPathResultSet, dao_Craft_XPathResultSet_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_GetXPathResultIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  unsigned int _GetXPathResultIndex = self->GetXPathResultIndex(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetXPathResultIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_XMLElement_NextResult( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::XMLElement* self = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_XMLElement_Core );

  Craft::XMLElement _NextResult = self->NextResult(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::XMLElement( _NextResult ), dao_Craft_XMLElement_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Texture_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Texture_Texture_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetNumLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetAddressMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetShadowCompare( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetBorderColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetBackupTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetMipsToSkip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_SetParametersDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_UpdateParameters( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetDepth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetParametersDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetAddressMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetShadowCompare( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetBorderColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetBackupTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetMipsToSkip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetLevelWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetLevelHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetLevelDepth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetUsage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetDataSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetDataSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetRowDataSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetExternalFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetDataType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture_GetSRGBFormat( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Texture_Meths[] = 
{
  { dao_Craft_Texture_Texture_dao_2, "Texture(  )=>Craft::Texture" },
  { dao_Craft_Texture_SetNumLevels, "SetNumLevels( self: Craft::Texture, levels: int )" },
  { dao_Craft_Texture_SetFilterMode, "SetFilterMode( self: Craft::Texture, filter: int )" },
  { dao_Craft_Texture_SetAddressMode, "SetAddressMode( self: Craft::Texture, coord: int, address: int )" },
  { dao_Craft_Texture_SetShadowCompare, "SetShadowCompare( self: Craft::Texture, enable: bool )" },
  { dao_Craft_Texture_SetBorderColor, "SetBorderColor( self: Craft::Texture, color: Craft::Color )" },
  { dao_Craft_Texture_SetSRGB, "SetSRGB( self: Craft::Texture, enable: bool )" },
  { dao_Craft_Texture_SetBackupTexture, "SetBackupTexture( self: Craft::Texture, texture: Craft::Texture )" },
  { dao_Craft_Texture_SetMipsToSkip, "SetMipsToSkip( self: Craft::Texture, quality: int, mips: int )" },
  { dao_Craft_Texture_SetParametersDirty, "SetParametersDirty( self: Craft::Texture )" },
  { dao_Craft_Texture_UpdateParameters, "UpdateParameters( self: Craft::Texture )" },
  { dao_Craft_Texture_GetTarget, "GetTarget( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetFormat, "GetFormat( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_IsCompressed, "IsCompressed( self: Craft::Texture )=>bool" },
  { dao_Craft_Texture_GetLevels, "GetLevels( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetWidth, "GetWidth( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetHeight, "GetHeight( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetDepth, "GetDepth( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetParametersDirty, "GetParametersDirty( self: Craft::Texture )=>bool" },
  { dao_Craft_Texture_GetFilterMode, "GetFilterMode( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetAddressMode, "GetAddressMode( self: Craft::Texture, coord: int )=>int" },
  { dao_Craft_Texture_GetShadowCompare, "GetShadowCompare( self: Craft::Texture )=>bool" },
  { dao_Craft_Texture_GetBorderColor, "GetBorderColor( self: Craft::Texture )=>Craft::Color" },
  { dao_Craft_Texture_GetSRGB, "GetSRGB( self: Craft::Texture )=>bool" },
  { dao_Craft_Texture_GetBackupTexture, "GetBackupTexture( self: Craft::Texture )=>Craft::Texture" },
  { dao_Craft_Texture_GetMipsToSkip, "GetMipsToSkip( self: Craft::Texture, quality: int )=>int" },
  { dao_Craft_Texture_GetLevelWidth, "GetLevelWidth( self: Craft::Texture, level: int )=>int" },
  { dao_Craft_Texture_GetLevelHeight, "GetLevelHeight( self: Craft::Texture, level: int )=>int" },
  { dao_Craft_Texture_GetLevelDepth, "GetLevelDepth( self: Craft::Texture, level: int )=>int" },
  { dao_Craft_Texture_GetUsage, "GetUsage( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetDataSize, "GetDataSize( self: Craft::Texture, width: int, height: int )=>int" },
  { dao_Craft_Texture_GetDataSize_dao_2, "GetDataSize( self: Craft::Texture, width: int, height: int, depth: int )=>int" },
  { dao_Craft_Texture_GetRowDataSize, "GetRowDataSize( self: Craft::Texture, width: int )=>int" },
  { dao_Craft_Texture_GetComponents, "GetComponents( self: Craft::Texture )=>int" },
  { dao_Craft_Texture_GetExternalFormat, "GetExternalFormat( format: int )=>int" },
  { dao_Craft_Texture_GetDataType, "GetDataType( format: int )=>int" },
  { dao_Craft_Texture_GetSRGBFormat, "GetSRGBFormat( self: Craft::Texture, format: int )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_Texture_Delete( DaoValue *self )
{
	Craft::Texture *obj = (Craft::Texture*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Texture_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Texture *self = (DaoCxx_Craft_Texture*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Texture_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Texture*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Texture*)data);
}

static DaoTypeCore Craft_Texture_Core = 
{
  "Craft::Texture",
  sizeof(Craft::Texture),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Texture_Craft_Resource,NULL },
  dao_Craft_Texture_Nums,
  dao_Craft_Texture_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Texture_Delete,
  Dao_Craft_Texture_HandleGC
};
DaoTypeCore *dao_Craft_Texture_Core = & Craft_Texture_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_Texture_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Texture *_self = new DaoCxx_Craft_Texture( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetNumLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  unsigned int levels = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumLevels( levels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::TextureFilterMode filter = (Craft::TextureFilterMode) DaoValue_TryGetInteger( _p[1] );

  self->SetFilterMode( filter );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetAddressMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::TextureCoordinate coord = (Craft::TextureCoordinate) DaoValue_TryGetInteger( _p[1] );
  Craft::TextureAddressMode address = (Craft::TextureAddressMode) DaoValue_TryGetInteger( _p[2] );

  self->SetAddressMode( coord, address );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetShadowCompare( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetShadowCompare( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetBorderColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );

  self->SetBorderColor( *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSRGB( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetBackupTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture_Core );

  self->SetBackupTexture( texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetMipsToSkip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::MaterialQuality quality = (Craft::MaterialQuality) DaoValue_TryGetInteger( _p[1] );
  int mips = (int) DaoValue_TryGetInteger( _p[2] );

  self->SetMipsToSkip( quality, mips );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_SetParametersDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  self->SetParametersDirty(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_UpdateParameters( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  self->UpdateParameters(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  unsigned int _GetTarget = self->GetTarget(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTarget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  unsigned int _GetFormat = self->GetFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  bool _IsCompressed = self->IsCompressed(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsCompressed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  unsigned int _GetLevels = self->GetLevels(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLevels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  int _GetWidth = self->GetWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  int _GetHeight = self->GetHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetDepth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  int _GetDepth = self->GetDepth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDepth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetParametersDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  bool _GetParametersDirty = self->GetParametersDirty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetParametersDirty );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  Craft::TextureFilterMode _GetFilterMode = self->GetFilterMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFilterMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetAddressMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::TextureCoordinate coord = (Craft::TextureCoordinate) DaoValue_TryGetInteger( _p[1] );

  Craft::TextureAddressMode _GetAddressMode = self->GetAddressMode( coord );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAddressMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetShadowCompare( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  bool _GetShadowCompare = self->GetShadowCompare(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetShadowCompare );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetBorderColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  const Craft::Color& _GetBorderColor = self->GetBorderColor(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetBorderColor, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  bool _GetSRGB = self->GetSRGB(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSRGB );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetBackupTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  Craft::Texture* _GetBackupTexture = self->GetBackupTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetBackupTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetMipsToSkip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  Craft::MaterialQuality quality = (Craft::MaterialQuality) DaoValue_TryGetInteger( _p[1] );

  int _GetMipsToSkip = self->GetMipsToSkip( quality );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMipsToSkip );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetLevelWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  int _GetLevelWidth = self->GetLevelWidth( level );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLevelWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetLevelHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  int _GetLevelHeight = self->GetLevelHeight( level );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLevelHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetLevelDepth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  int _GetLevelDepth = self->GetLevelDepth( level );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLevelDepth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetUsage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  Craft::TextureUsage _GetUsage = self->GetUsage(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUsage );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetDataSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _GetDataSize = self->GetDataSize( width, height );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDataSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetDataSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );
  int depth = (int) DaoValue_TryGetInteger( _p[3] );

  unsigned int _GetDataSize = self->GetDataSize( width, height, depth );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDataSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetRowDataSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetRowDataSize = self->GetRowDataSize( width );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRowDataSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  unsigned int _GetComponents = self->GetComponents(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetComponents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetExternalFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  unsigned int format = (unsigned int) DaoValue_TryGetInteger( _p[0] );

  unsigned int _GetExternalFormat = Craft::Texture::GetExternalFormat( format );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetExternalFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetDataType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  unsigned int format = (unsigned int) DaoValue_TryGetInteger( _p[0] );

  unsigned int _GetDataType = Craft::Texture::GetDataType( format );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDataType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture_GetSRGBFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* self = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );
  unsigned int format = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetSRGBFormat = self->GetSRGBFormat( format );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSRGBFormat );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Material_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Material_Material_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetNumTechniques( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetShaderParameterAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetShaderParameterAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetShaderParameterAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetUVTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetUVTransform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetShadowCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetDepthBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetRenderOrder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_SetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_RemoveShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_ReleaseShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_MarkForAuxView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetNumTechniques( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetTechnique( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetPass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetShaderParameterAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetShaderParameterAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetShaderParameterAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetShadowCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetDepthBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetRenderOrder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetAuxViewFrameNumber( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetOcclusion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetSpecular( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetShaderParameterHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_GetTextureUnitName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Material_ParseShaderParameterValue( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Material_Meths[] = 
{
  { dao_Craft_Material_Material_dao_2, "Material(  )=>Craft::Material" },
  { dao_Craft_Material_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Material_BeginLoad, "BeginLoad( self: Craft::Material, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Material_EndLoad, "EndLoad( self: Craft::Material )=>bool" },
  { dao_Craft_Material_Save, "Save( self: Craft::Material, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Material_SetNumTechniques, "SetNumTechniques( self: Craft::Material, num: int )" },
  { dao_Craft_Material_SetShaderParameter, "SetShaderParameter( self: Craft::Material, name: string, value: Craft::Variant )" },
  { dao_Craft_Material_SetShaderParameterAnimation, "SetShaderParameterAnimation( self: Craft::Material, name: string, animation: Craft::ValueAnimation, wrapMode: int =WM_LOOP, speed: float =1.00 )" },
  { dao_Craft_Material_SetShaderParameterAnimationWrapMode, "SetShaderParameterAnimationWrapMode( self: Craft::Material, name: string, wrapMode: int )" },
  { dao_Craft_Material_SetShaderParameterAnimationSpeed, "SetShaderParameterAnimationSpeed( self: Craft::Material, name: string, speed: float )" },
  { dao_Craft_Material_SetTexture, "SetTexture( self: Craft::Material, unit: int, texture: Craft::Texture )" },
  { dao_Craft_Material_SetUVTransform, "SetUVTransform( self: Craft::Material, offset: Craft::Vector2, rotation: float, repeat: Craft::Vector2 )" },
  { dao_Craft_Material_SetUVTransform_dao_2, "SetUVTransform( self: Craft::Material, offset: Craft::Vector2, rotation: float, repeat: float )" },
  { dao_Craft_Material_SetCullMode, "SetCullMode( self: Craft::Material, mode: int )" },
  { dao_Craft_Material_SetShadowCullMode, "SetShadowCullMode( self: Craft::Material, mode: int )" },
  { dao_Craft_Material_SetFillMode, "SetFillMode( self: Craft::Material, mode: int )" },
  { dao_Craft_Material_SetDepthBias, "SetDepthBias( self: Craft::Material, parameters: Craft::BiasParameters )" },
  { dao_Craft_Material_SetRenderOrder, "SetRenderOrder( self: Craft::Material, order: int )" },
  { dao_Craft_Material_SetScene, "SetScene( self: Craft::Material, scene: Craft::Scene )" },
  { dao_Craft_Material_RemoveShaderParameter, "RemoveShaderParameter( self: Craft::Material, name: string )" },
  { dao_Craft_Material_ReleaseShaders, "ReleaseShaders( self: Craft::Material )" },
  { dao_Craft_Material_MarkForAuxView, "MarkForAuxView( self: Craft::Material, frameNumber: int )" },
  { dao_Craft_Material_GetNumTechniques, "GetNumTechniques( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetTechnique, "GetTechnique( self: Craft::Material, index: int )=>Craft::Technique" },
  { dao_Craft_Material_GetPass, "GetPass( self: Craft::Material, index: int, passName: string )=>Craft::Pass" },
  { dao_Craft_Material_GetTexture, "GetTexture( self: Craft::Material, unit: int )=>Craft::Texture" },
  { dao_Craft_Material_GetShaderParameter, "GetShaderParameter( self: Craft::Material, name: string )=>Craft::Variant" },
  { dao_Craft_Material_GetShaderParameterAnimation, "GetShaderParameterAnimation( self: Craft::Material, name: string )=>Craft::ValueAnimation" },
  { dao_Craft_Material_GetShaderParameterAnimationWrapMode, "GetShaderParameterAnimationWrapMode( self: Craft::Material, name: string )=>int" },
  { dao_Craft_Material_GetShaderParameterAnimationSpeed, "GetShaderParameterAnimationSpeed( self: Craft::Material, name: string )=>float" },
  { dao_Craft_Material_GetCullMode, "GetCullMode( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetShadowCullMode, "GetShadowCullMode( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetFillMode, "GetFillMode( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetDepthBias, "GetDepthBias( self: Craft::Material )=>Craft::BiasParameters" },
  { dao_Craft_Material_GetRenderOrder, "GetRenderOrder( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetAuxViewFrameNumber, "GetAuxViewFrameNumber( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetOcclusion, "GetOcclusion( self: Craft::Material )=>bool" },
  { dao_Craft_Material_GetSpecular, "GetSpecular( self: Craft::Material )=>bool" },
  { dao_Craft_Material_GetScene, "GetScene( self: Craft::Material )=>Craft::Scene" },
  { dao_Craft_Material_GetShaderParameterHash, "GetShaderParameterHash( self: Craft::Material )=>int" },
  { dao_Craft_Material_GetTextureUnitName, "GetTextureUnitName( unit: int )=>string" },
  { dao_Craft_Material_ParseShaderParameterValue, "ParseShaderParameterValue( value: string )=>Craft::Variant" },
  { NULL, NULL }
};
static void Dao_Craft_Material_Delete( DaoValue *self )
{
	Craft::Material *obj = (Craft::Material*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Material_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Material *self = (DaoCxx_Craft_Material*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Material_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Material*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Material*)data);
}

static DaoTypeCore Craft_Material_Core = 
{
  "Craft::Material",
  sizeof(Craft::Material),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Material_Craft_Resource,NULL },
  dao_Craft_Material_Nums,
  dao_Craft_Material_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Material_Delete,
  Dao_Craft_Material_HandleGC
};
DaoTypeCore *dao_Craft_Material_Core = & Craft_Material_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_Material_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Material *_self = new DaoCxx_Craft_Material( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Material::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetNumTechniques( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumTechniques( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  self->SetShaderParameter( name, *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetShaderParameterAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::ValueAnimation* animation = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_ValueAnimation_Core );
  Craft::WrapMode wrapMode = (Craft::WrapMode) DaoValue_TryGetInteger( _p[3] );
  float speed = (float) DaoValue_TryGetFloat( _p[4] );

  self->SetShaderParameterAnimation( name, animation, wrapMode, speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetShaderParameterAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::WrapMode wrapMode = (Craft::WrapMode) DaoValue_TryGetInteger( _p[2] );

  self->SetShaderParameterAnimationWrapMode( name, wrapMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetShaderParameterAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float speed = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetShaderParameterAnimationSpeed( name, speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[1] );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Texture_Core );

  self->SetTexture( unit, texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetUVTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::Vector2* offset = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::Vector2* repeat = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector2_Core );

  self->SetUVTransform( *offset, rotation, *repeat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetUVTransform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::Vector2* offset = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );
  float repeat = (float) DaoValue_TryGetFloat( _p[3] );

  self->SetUVTransform( *offset, rotation, repeat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::CullMode mode = (Craft::CullMode) DaoValue_TryGetInteger( _p[1] );

  self->SetCullMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetShadowCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::CullMode mode = (Craft::CullMode) DaoValue_TryGetInteger( _p[1] );

  self->SetShadowCullMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::FillMode mode = (Craft::FillMode) DaoValue_TryGetInteger( _p[1] );

  self->SetFillMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetDepthBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::BiasParameters* parameters = (Craft::BiasParameters*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BiasParameters_Core );

  self->SetDepthBias( *parameters );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetRenderOrder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  unsigned char order = (unsigned char) DaoValue_TryGetInteger( _p[1] );

  self->SetRenderOrder( order );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_SetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::Scene* scene = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Scene_Core );

  self->SetScene( scene );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_RemoveShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->RemoveShaderParameter( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_ReleaseShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  self->ReleaseShaders(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_MarkForAuxView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  unsigned int frameNumber = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->MarkForAuxView( frameNumber );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetNumTechniques( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  unsigned int _GetNumTechniques = self->GetNumTechniques(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumTechniques );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetTechnique( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Technique* _GetTechnique = self->GetTechnique( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTechnique, dao_Craft_Technique_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetPass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  DString *__str_passName = DaoValue_TryGetString( _p[2] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  Craft::Pass* _GetPass = self->GetPass( index, passName );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPass, dao_Craft_Pass_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[1] );

  Craft::Texture* _GetTexture = self->GetTexture( unit );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  const Craft::Variant& _GetShaderParameter = self->GetShaderParameter( name );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetShaderParameter, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetShaderParameterAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::ValueAnimation* _GetShaderParameterAnimation = self->GetShaderParameterAnimation( name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShaderParameterAnimation, dao_Craft_ValueAnimation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetShaderParameterAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::WrapMode _GetShaderParameterAnimationWrapMode = self->GetShaderParameterAnimationWrapMode( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShaderParameterAnimationWrapMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetShaderParameterAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetShaderParameterAnimationSpeed = self->GetShaderParameterAnimationSpeed( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShaderParameterAnimationSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  Craft::CullMode _GetCullMode = self->GetCullMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCullMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetShadowCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  Craft::CullMode _GetShadowCullMode = self->GetShadowCullMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadowCullMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  Craft::FillMode _GetFillMode = self->GetFillMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFillMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetDepthBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  const Craft::BiasParameters& _GetDepthBias = self->GetDepthBias(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetDepthBias, dao_Craft_BiasParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetRenderOrder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  unsigned char _GetRenderOrder = self->GetRenderOrder(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRenderOrder );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetAuxViewFrameNumber( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  unsigned int _GetAuxViewFrameNumber = self->GetAuxViewFrameNumber(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAuxViewFrameNumber );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetOcclusion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  bool _GetOcclusion = self->GetOcclusion(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetOcclusion );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetSpecular( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  bool _GetSpecular = self->GetSpecular(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSpecular );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  Craft::Scene* _GetScene = self->GetScene(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetScene, dao_Craft_Scene_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetShaderParameterHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Material* self = (Craft::Material*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Material_Core );

  unsigned int _GetShaderParameterHash = self->GetShaderParameterHash(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShaderParameterHash );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_GetTextureUnitName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[0] );

  Craft::String _GetTextureUnitName = Craft::Material::GetTextureUnitName( unit );
  DaoProcess_PutBytes( _proc, (char*) _GetTextureUnitName.CString(), _GetTextureUnitName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Material_ParseShaderParameterValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_value = DaoValue_TryGetString( _p[0] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  Craft::Variant _ParseShaderParameterValue = Craft::Material::ParseShaderParameterValue( value );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _ParseShaderParameterValue ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ResourceCache_Nums[] = 
{
  { NULL, 0, 0 }
};


extern void dao_Craft_ResourceCache_ResourceCache_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_AddResourceDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_AddPackageFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_AddPackageFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_AddManualResource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_RemoveResourceDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_RemovePackageFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_RemovePackageFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReleaseResource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReleaseResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReleaseResources_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReleaseResources_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReleaseAllResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReloadResource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ReloadResourceWithDependencies( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SetMemoryBudget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SetAutoReloadResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SetReturnFailedResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SetSearchPackagesFirst( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SetFinishBackgroundResourcesMs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetResource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_BackgroundLoadResource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetNumBackgroundLoadResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetExistingResource( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_ResourceCache_GetImage( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_ResourceCache_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_Exists( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetMemoryBudget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetTotalMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetResourceFileName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetAutoReloadResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetReturnFailedResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetSearchPackagesFirst( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetFinishBackgroundResourcesMs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_GetPreferredResourceDir( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SanitateResourceName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_SanitateResourceDirName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_StoreResourceDependency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_ResetDependencies( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ResourceCache_PrintMemoryUsage( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ResourceCache_Meths[] = 
{
  { dao_Craft_ResourceCache_ResourceCache_dao_2, "ResourceCache(  )=>Craft::ResourceCache" },
  { dao_Craft_ResourceCache_AddResourceDir, "AddResourceDir( self: Craft::ResourceCache, pathName: string, priority: int )=>bool" },
  { dao_Craft_ResourceCache_AddPackageFile, "AddPackageFile( self: Craft::ResourceCache, package: Craft::PackageFile, priority: int )=>bool" },
  { dao_Craft_ResourceCache_AddPackageFile_dao_2, "AddPackageFile( self: Craft::ResourceCache, fileName: string, priority: int )=>bool" },
  { dao_Craft_ResourceCache_AddManualResource, "AddManualResource( self: Craft::ResourceCache, resource: Craft::Resource )=>bool" },
  { dao_Craft_ResourceCache_RemoveResourceDir, "RemoveResourceDir( self: Craft::ResourceCache, pathName: string )" },
  { dao_Craft_ResourceCache_RemovePackageFile, "RemovePackageFile( self: Craft::ResourceCache, package: Craft::PackageFile, releaseResources: bool =true, forceRelease: bool =false )" },
  { dao_Craft_ResourceCache_RemovePackageFile_dao_2, "RemovePackageFile( self: Craft::ResourceCache, fileName: string, releaseResources: bool =true, forceRelease: bool =false )" },
  { dao_Craft_ResourceCache_ReleaseResource, "ReleaseResource( self: Craft::ResourceCache, type: Craft::StringHash, name: string, force: bool =false )" },
  { dao_Craft_ResourceCache_ReleaseResources, "ReleaseResources( self: Craft::ResourceCache, type: Craft::StringHash, force: bool =false )" },
  { dao_Craft_ResourceCache_ReleaseResources_dao_2, "ReleaseResources( self: Craft::ResourceCache, type: Craft::StringHash, partialName: string, force: bool =false )" },
  { dao_Craft_ResourceCache_ReleaseResources_dao_3, "ReleaseResources( self: Craft::ResourceCache, partialName: string, force: bool =false )" },
  { dao_Craft_ResourceCache_ReleaseAllResources, "ReleaseAllResources( self: Craft::ResourceCache, force: bool =false )" },
  { dao_Craft_ResourceCache_ReloadResource, "ReloadResource( self: Craft::ResourceCache, resource: Craft::Resource )=>bool" },
  { dao_Craft_ResourceCache_ReloadResourceWithDependencies, "ReloadResourceWithDependencies( self: Craft::ResourceCache, fileName: string )" },
  { dao_Craft_ResourceCache_SetMemoryBudget, "SetMemoryBudget( self: Craft::ResourceCache, type: Craft::StringHash, budget: int )" },
  { dao_Craft_ResourceCache_SetAutoReloadResources, "SetAutoReloadResources( self: Craft::ResourceCache, enable: bool )" },
  { dao_Craft_ResourceCache_SetReturnFailedResources, "SetReturnFailedResources( self: Craft::ResourceCache, enable: bool )" },
  { dao_Craft_ResourceCache_SetSearchPackagesFirst, "SetSearchPackagesFirst( self: Craft::ResourceCache, value: bool )" },
  { dao_Craft_ResourceCache_SetFinishBackgroundResourcesMs, "SetFinishBackgroundResourcesMs( self: Craft::ResourceCache, ms: int )" },
  { dao_Craft_ResourceCache_GetResource, "GetResource( self: Craft::ResourceCache, type: Craft::StringHash, name: string, sendEventOnFailure: bool =true )=>Craft::Resource" },
  { dao_Craft_ResourceCache_BackgroundLoadResource, "BackgroundLoadResource( self: Craft::ResourceCache, type: Craft::StringHash, name: string, sendEventOnFailure: bool =true, caller: Craft::Resource|none =none )=>bool" },
  { dao_Craft_ResourceCache_GetNumBackgroundLoadResources, "GetNumBackgroundLoadResources( self: Craft::ResourceCache )=>int" },
  { dao_Craft_ResourceCache_GetExistingResource, "GetExistingResource( self: Craft::ResourceCache, type: Craft::StringHash, name: string )=>Craft::Resource" },
  { dao_Craft_ResourceCache_GetImage, "GetImage( self: Craft::ResourceCache, name: string )=>Craft::Image|none" },
  { dao_Craft_ResourceCache_GetMaterial, "GetMaterial( self: Craft::ResourceCache, name: string )=>Craft::Material|none" },
  { dao_Craft_ResourceCache_Exists, "Exists( self: Craft::ResourceCache, name: string )=>bool" },
  { dao_Craft_ResourceCache_GetMemoryBudget, "GetMemoryBudget( self: Craft::ResourceCache, type: Craft::StringHash )=>int" },
  { dao_Craft_ResourceCache_GetMemoryUse, "GetMemoryUse( self: Craft::ResourceCache, type: Craft::StringHash )=>int" },
  { dao_Craft_ResourceCache_GetTotalMemoryUse, "GetTotalMemoryUse( self: Craft::ResourceCache )=>int" },
  { dao_Craft_ResourceCache_GetResourceFileName, "GetResourceFileName( self: Craft::ResourceCache, name: string )=>string" },
  { dao_Craft_ResourceCache_GetAutoReloadResources, "GetAutoReloadResources( self: Craft::ResourceCache )=>bool" },
  { dao_Craft_ResourceCache_GetReturnFailedResources, "GetReturnFailedResources( self: Craft::ResourceCache )=>bool" },
  { dao_Craft_ResourceCache_GetSearchPackagesFirst, "GetSearchPackagesFirst( self: Craft::ResourceCache )=>bool" },
  { dao_Craft_ResourceCache_GetFinishBackgroundResourcesMs, "GetFinishBackgroundResourcesMs( self: Craft::ResourceCache )=>int" },
  { dao_Craft_ResourceCache_GetPreferredResourceDir, "GetPreferredResourceDir( self: Craft::ResourceCache, path: string )=>string" },
  { dao_Craft_ResourceCache_SanitateResourceName, "SanitateResourceName( self: Craft::ResourceCache, name: string )=>string" },
  { dao_Craft_ResourceCache_SanitateResourceDirName, "SanitateResourceDirName( self: Craft::ResourceCache, name: string )=>string" },
  { dao_Craft_ResourceCache_StoreResourceDependency, "StoreResourceDependency( self: Craft::ResourceCache, resource: Craft::Resource, dependency: string )" },
  { dao_Craft_ResourceCache_ResetDependencies, "ResetDependencies( self: Craft::ResourceCache, resource: Craft::Resource )" },
  { dao_Craft_ResourceCache_PrintMemoryUsage, "PrintMemoryUsage( self: Craft::ResourceCache )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_ResourceCache_Delete( DaoValue *self )
{
	Craft::ResourceCache *obj = (Craft::ResourceCache*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ResourceCache_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ResourceCache *self = (DaoCxx_Craft_ResourceCache*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ResourceCache_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::ResourceCache*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::ResourceCache*)data);
}

static DaoTypeCore Craft_ResourceCache_Core = 
{
  "Craft::ResourceCache",
  sizeof(Craft::ResourceCache),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_ResourceCache_Craft_Object,NULL },
  dao_Craft_ResourceCache_Nums,
  dao_Craft_ResourceCache_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ResourceCache_Delete,
  Dao_Craft_ResourceCache_HandleGC
};
DaoTypeCore *dao_Craft_ResourceCache_Core = & Craft_ResourceCache_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_AddResourceDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );
  unsigned int priority = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _AddResourceDir = self->AddResourceDir( pathName, priority );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _AddResourceDir );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_AddPackageFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::PackageFile* package = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_PackageFile_Core );
  unsigned int priority = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _AddPackageFile = self->AddPackageFile( package, priority );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _AddPackageFile );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_AddPackageFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  unsigned int priority = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _AddPackageFile = self->AddPackageFile( fileName, priority );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _AddPackageFile );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_AddManualResource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::Resource* resource = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Resource_Core );

  bool _AddManualResource = self->AddManualResource( resource );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _AddManualResource );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_RemoveResourceDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_pathName = DaoValue_TryGetString( _p[1] );
  Craft::String pathName( DString_GetData( __str_pathName ), DString_Size( __str_pathName ) );

  self->RemoveResourceDir( pathName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_RemovePackageFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::PackageFile* package = (Craft::PackageFile*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_PackageFile_Core );
  bool releaseResources = (bool) DaoValue_TryGetBoolean( _p[2] );
  bool forceRelease = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->RemovePackageFile( package, releaseResources, forceRelease );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_RemovePackageFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );
  bool releaseResources = (bool) DaoValue_TryGetBoolean( _p[2] );
  bool forceRelease = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->RemovePackageFile( fileName, releaseResources, forceRelease );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReleaseResource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool force = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->ReleaseResource( *type, name, force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReleaseResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  bool force = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->ReleaseResources( *type, force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReleaseResources_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  DString *__str_partialName = DaoValue_TryGetString( _p[2] );
  Craft::String partialName( DString_GetData( __str_partialName ), DString_Size( __str_partialName ) );
  bool force = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->ReleaseResources( *type, partialName, force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReleaseResources_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_partialName = DaoValue_TryGetString( _p[1] );
  Craft::String partialName( DString_GetData( __str_partialName ), DString_Size( __str_partialName ) );
  bool force = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->ReleaseResources( partialName, force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReleaseAllResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  bool force = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->ReleaseAllResources( force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReloadResource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::Resource* resource = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Resource_Core );

  bool _ReloadResource = self->ReloadResource( resource );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ReloadResource );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ReloadResourceWithDependencies( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  self->ReloadResourceWithDependencies( fileName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SetMemoryBudget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  unsigned long long budget = (unsigned long long) DaoValue_TryGetInteger( _p[2] );

  self->SetMemoryBudget( *type, budget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SetAutoReloadResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAutoReloadResources( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SetReturnFailedResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetReturnFailedResources( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SetSearchPackagesFirst( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSearchPackagesFirst( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SetFinishBackgroundResourcesMs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  int ms = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetFinishBackgroundResourcesMs( ms );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetResource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool sendEventOnFailure = (bool) DaoValue_TryGetBoolean( _p[3] );

  Craft::Resource* _GetResource = self->GetResource( *type, name, sendEventOnFailure );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetResource, dao_Craft_Resource_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_BackgroundLoadResource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool sendEventOnFailure = (bool) DaoValue_TryGetBoolean( _p[3] );
  Craft::Resource* caller = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Resource_Core );

  bool _BackgroundLoadResource = self->BackgroundLoadResource( *type, name, sendEventOnFailure, caller );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BackgroundLoadResource );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetNumBackgroundLoadResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  unsigned int _GetNumBackgroundLoadResources = self->GetNumBackgroundLoadResources(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumBackgroundLoadResources );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetExistingResource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Resource* _GetExistingResource = self->GetExistingResource( *type, name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetExistingResource, dao_Craft_Resource_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_Exists( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _Exists = self->Exists( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Exists );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetMemoryBudget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  unsigned long long _GetMemoryBudget = self->GetMemoryBudget( *type );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMemoryBudget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  unsigned long long _GetMemoryUse = self->GetMemoryUse( *type );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMemoryUse );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetTotalMemoryUse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  unsigned long long _GetTotalMemoryUse = self->GetTotalMemoryUse(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTotalMemoryUse );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetResourceFileName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::String _GetResourceFileName = self->GetResourceFileName( name );
  DaoProcess_PutBytes( _proc, (char*) _GetResourceFileName.CString(), _GetResourceFileName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetAutoReloadResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  bool _GetAutoReloadResources = self->GetAutoReloadResources(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAutoReloadResources );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetReturnFailedResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  bool _GetReturnFailedResources = self->GetReturnFailedResources(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetReturnFailedResources );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetSearchPackagesFirst( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  bool _GetSearchPackagesFirst = self->GetSearchPackagesFirst(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSearchPackagesFirst );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetFinishBackgroundResourcesMs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  int _GetFinishBackgroundResourcesMs = self->GetFinishBackgroundResourcesMs(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFinishBackgroundResourcesMs );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_GetPreferredResourceDir( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_path = DaoValue_TryGetString( _p[1] );
  Craft::String path( DString_GetData( __str_path ), DString_Size( __str_path ) );

  Craft::String _GetPreferredResourceDir = self->GetPreferredResourceDir( path );
  DaoProcess_PutBytes( _proc, (char*) _GetPreferredResourceDir.CString(), _GetPreferredResourceDir.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SanitateResourceName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::String _SanitateResourceName = self->SanitateResourceName( name );
  DaoProcess_PutBytes( _proc, (char*) _SanitateResourceName.CString(), _SanitateResourceName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_SanitateResourceDirName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::String _SanitateResourceDirName = self->SanitateResourceDirName( name );
  DaoProcess_PutBytes( _proc, (char*) _SanitateResourceDirName.CString(), _SanitateResourceDirName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_StoreResourceDependency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::Resource* resource = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Resource_Core );
  DString *__str_dependency = DaoValue_TryGetString( _p[2] );
  Craft::String dependency( DString_GetData( __str_dependency ), DString_Size( __str_dependency ) );

  self->StoreResourceDependency( resource, dependency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_ResetDependencies( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );
  Craft::Resource* resource = (Craft::Resource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Resource_Core );

  self->ResetDependencies( resource );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ResourceCache_PrintMemoryUsage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ResourceCache* self = (Craft::ResourceCache*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ResourceCache_Core );

  Craft::String _PrintMemoryUsage = self->PrintMemoryUsage(  );
  DaoProcess_PutBytes( _proc, (char*) _PrintMemoryUsage.CString(), _PrintMemoryUsage.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Serializable_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Serializable_Serializable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_SaveDefaultAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_SetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_SetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_ResetToDefault( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_RemoveInstanceDefault( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_SetTemporary( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_SetInterceptNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_AllocateNetworkState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_WriteInitialDeltaUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_WriteLatestDataUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_ReadDeltaUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_ReadLatestDataUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetAttributeDefault( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetAttributeDefault_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetNumAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetNumNetworkAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_IsTemporary( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Serializable_GetInterceptNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Serializable_Meths[] = 
{
  { dao_Craft_Serializable_Serializable_dao_2, "Serializable(  )=>Craft::Serializable" },
  { dao_Craft_Serializable_Load, "Load( self: Craft::Serializable, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Serializable_Save, "Save( self: Craft::Serializable, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Serializable_ApplyAttributes, "ApplyAttributes( self: Craft::Serializable )" },
  { dao_Craft_Serializable_SaveDefaultAttributes, "SaveDefaultAttributes( self: Craft::Serializable )=>bool" },
  { dao_Craft_Serializable_MarkNetworkUpdate, "MarkNetworkUpdate( self: Craft::Serializable )" },
  { dao_Craft_Serializable_SetAttribute, "SetAttribute( self: Craft::Serializable, index: int, value: Craft::Variant )=>bool" },
  { dao_Craft_Serializable_SetAttribute_dao_2, "SetAttribute( self: Craft::Serializable, name: string, value: Craft::Variant )=>bool" },
  { dao_Craft_Serializable_ResetToDefault, "ResetToDefault( self: Craft::Serializable )" },
  { dao_Craft_Serializable_RemoveInstanceDefault, "RemoveInstanceDefault( self: Craft::Serializable )" },
  { dao_Craft_Serializable_SetTemporary, "SetTemporary( self: Craft::Serializable, enable: bool )" },
  { dao_Craft_Serializable_SetInterceptNetworkUpdate, "SetInterceptNetworkUpdate( self: Craft::Serializable, attributeName: string, enable: bool )" },
  { dao_Craft_Serializable_AllocateNetworkState, "AllocateNetworkState( self: Craft::Serializable )" },
  { dao_Craft_Serializable_WriteInitialDeltaUpdate, "WriteInitialDeltaUpdate( self: Craft::Serializable, dest: Craft::Serializer, timeStamp: int )" },
  { dao_Craft_Serializable_WriteLatestDataUpdate, "WriteLatestDataUpdate( self: Craft::Serializable, dest: Craft::Serializer, timeStamp: int )" },
  { dao_Craft_Serializable_ReadDeltaUpdate, "ReadDeltaUpdate( self: Craft::Serializable, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Serializable_ReadLatestDataUpdate, "ReadLatestDataUpdate( self: Craft::Serializable, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Serializable_GetAttribute, "GetAttribute( self: Craft::Serializable, index: int )=>Craft::Variant" },
  { dao_Craft_Serializable_GetAttribute_dao_2, "GetAttribute( self: Craft::Serializable, name: string )=>Craft::Variant" },
  { dao_Craft_Serializable_GetAttributeDefault, "GetAttributeDefault( self: Craft::Serializable, index: int )=>Craft::Variant" },
  { dao_Craft_Serializable_GetAttributeDefault_dao_2, "GetAttributeDefault( self: Craft::Serializable, name: string )=>Craft::Variant" },
  { dao_Craft_Serializable_GetNumAttributes, "GetNumAttributes( self: Craft::Serializable )=>int" },
  { dao_Craft_Serializable_GetNumNetworkAttributes, "GetNumNetworkAttributes( self: Craft::Serializable )=>int" },
  { dao_Craft_Serializable_IsTemporary, "IsTemporary( self: Craft::Serializable )=>bool" },
  { dao_Craft_Serializable_GetInterceptNetworkUpdate, "GetInterceptNetworkUpdate( self: Craft::Serializable, attributeName: string )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Serializable_Delete( DaoValue *self )
{
	Craft::Serializable *obj = (Craft::Serializable*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Serializable_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Serializable *self = (DaoCxx_Craft_Serializable*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Serializable_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Serializable*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Serializable*)data);
}

static DaoTypeCore Craft_Serializable_Core = 
{
  "Craft::Serializable",
  sizeof(Craft::Serializable),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Serializable_Craft_Object,NULL },
  dao_Craft_Serializable_Nums,
  dao_Craft_Serializable_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Serializable_Delete,
  Dao_Craft_Serializable_HandleGC
};
DaoTypeCore *dao_Craft_Serializable_Core = & Craft_Serializable_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_Serializable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Serializable *_self = new DaoCxx_Craft_Serializable( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_SaveDefaultAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  bool _SaveDefaultAttributes = self->SaveDefaultAttributes(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveDefaultAttributes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  self->MarkNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_SetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  bool _SetAttribute = self->SetAttribute( index, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_SetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  bool _SetAttribute = self->SetAttribute( name, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAttribute );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_ResetToDefault( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  self->ResetToDefault(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_RemoveInstanceDefault( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  self->RemoveInstanceDefault(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_SetTemporary( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetTemporary( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_SetInterceptNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  DString *__str_attributeName = DaoValue_TryGetString( _p[1] );
  Craft::String attributeName( DString_GetData( __str_attributeName ), DString_Size( __str_attributeName ) );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetInterceptNetworkUpdate( attributeName, enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_AllocateNetworkState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  self->AllocateNetworkState(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_WriteInitialDeltaUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );
  unsigned char timeStamp = (unsigned char) DaoValue_TryGetInteger( _p[2] );

  self->WriteInitialDeltaUpdate( *dest, timeStamp );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_WriteLatestDataUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );
  unsigned char timeStamp = (unsigned char) DaoValue_TryGetInteger( _p[2] );

  self->WriteLatestDataUpdate( *dest, timeStamp );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_ReadDeltaUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _ReadDeltaUpdate = self->ReadDeltaUpdate( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ReadDeltaUpdate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_ReadLatestDataUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _ReadLatestDataUpdate = self->ReadLatestDataUpdate( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ReadLatestDataUpdate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetAttribute( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Variant _GetAttribute = self->GetAttribute( index );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetAttribute ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetAttribute_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Variant _GetAttribute = self->GetAttribute( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetAttribute ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetAttributeDefault( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Variant _GetAttributeDefault = self->GetAttributeDefault( index );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetAttributeDefault ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetAttributeDefault_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Variant _GetAttributeDefault = self->GetAttributeDefault( name );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetAttributeDefault ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetNumAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  unsigned int _GetNumAttributes = self->GetNumAttributes(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumAttributes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetNumNetworkAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  unsigned int _GetNumNetworkAttributes = self->GetNumNetworkAttributes(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumNetworkAttributes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_IsTemporary( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );

  bool _IsTemporary = self->IsTemporary(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsTemporary );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Serializable_GetInterceptNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Serializable* self = (Craft::Serializable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Serializable_Core );
  DString *__str_attributeName = DaoValue_TryGetString( _p[1] );
  Craft::String attributeName( DString_GetData( __str_attributeName ), DString_Size( __str_attributeName ) );

  bool _GetInterceptNetworkUpdate = self->GetInterceptNetworkUpdate( attributeName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetInterceptNetworkUpdate );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Animatable_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Animatable_Animatable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_SetAnimationEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_SetObjectAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_SetAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_SetAttributeAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_SetAttributeAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_GetAnimationEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_GetObjectAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_GetAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_GetAttributeAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animatable_GetAttributeAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Animatable_Meths[] = 
{
  { dao_Craft_Animatable_Animatable_dao_2, "Animatable(  )=>Craft::Animatable" },
  { dao_Craft_Animatable_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_Animatable_SetAnimationEnabled, "SetAnimationEnabled( self: Craft::Animatable, enable: bool )" },
  { dao_Craft_Animatable_SetObjectAnimation, "SetObjectAnimation( self: Craft::Animatable, objectAnimation: Craft::ObjectAnimation )" },
  { dao_Craft_Animatable_SetAttributeAnimation, "SetAttributeAnimation( self: Craft::Animatable, name: string, attributeAnimation: Craft::ValueAnimation, wrapMode: int =WM_LOOP, speed: float =1.00 )" },
  { dao_Craft_Animatable_SetAttributeAnimationWrapMode, "SetAttributeAnimationWrapMode( self: Craft::Animatable, name: string, wrapMode: int )" },
  { dao_Craft_Animatable_SetAttributeAnimationSpeed, "SetAttributeAnimationSpeed( self: Craft::Animatable, name: string, speed: float )" },
  { dao_Craft_Animatable_GetAnimationEnabled, "GetAnimationEnabled( self: Craft::Animatable )=>bool" },
  { dao_Craft_Animatable_GetObjectAnimation, "GetObjectAnimation( self: Craft::Animatable )=>Craft::ObjectAnimation" },
  { dao_Craft_Animatable_GetAttributeAnimation, "GetAttributeAnimation( self: Craft::Animatable, name: string )=>Craft::ValueAnimation" },
  { dao_Craft_Animatable_GetAttributeAnimationWrapMode, "GetAttributeAnimationWrapMode( self: Craft::Animatable, name: string )=>int" },
  { dao_Craft_Animatable_GetAttributeAnimationSpeed, "GetAttributeAnimationSpeed( self: Craft::Animatable, name: string )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_Animatable_Delete( DaoValue *self )
{
	Craft::Animatable *obj = (Craft::Animatable*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Animatable_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Animatable *self = (DaoCxx_Craft_Animatable*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Animatable_Craft_Serializable( void *data, int down )
{
	if( down ) return static_cast<Craft::Animatable*>((Craft::Serializable*)data);
	return dynamic_cast<Craft::Serializable*>((Craft::Animatable*)data);
}

static DaoTypeCore Craft_Animatable_Core = 
{
  "Craft::Animatable",
  sizeof(Craft::Animatable),
  { dao_Craft_Serializable_Core, NULL },
  { dao_cast_Craft_Animatable_Craft_Serializable,NULL },
  dao_Craft_Animatable_Nums,
  dao_Craft_Animatable_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Animatable_Delete,
  Dao_Craft_Animatable_HandleGC
};
DaoTypeCore *dao_Craft_Animatable_Core = & Craft_Animatable_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_Animatable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Animatable *_self = new DaoCxx_Craft_Animatable( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::Animatable::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_SetAnimationEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAnimationEnabled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_SetObjectAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  Craft::ObjectAnimation* objectAnimation = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ObjectAnimation_Core );

  self->SetObjectAnimation( objectAnimation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_SetAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::ValueAnimation* attributeAnimation = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_ValueAnimation_Core );
  Craft::WrapMode wrapMode = (Craft::WrapMode) DaoValue_TryGetInteger( _p[3] );
  float speed = (float) DaoValue_TryGetFloat( _p[4] );

  self->SetAttributeAnimation( name, attributeAnimation, wrapMode, speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_SetAttributeAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::WrapMode wrapMode = (Craft::WrapMode) DaoValue_TryGetInteger( _p[2] );

  self->SetAttributeAnimationWrapMode( name, wrapMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_SetAttributeAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float speed = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetAttributeAnimationSpeed( name, speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_GetAnimationEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );

  bool _GetAnimationEnabled = self->GetAnimationEnabled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAnimationEnabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_GetObjectAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );

  Craft::ObjectAnimation* _GetObjectAnimation = self->GetObjectAnimation(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetObjectAnimation, dao_Craft_ObjectAnimation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_GetAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::ValueAnimation* _GetAttributeAnimation = self->GetAttributeAnimation( name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAttributeAnimation, dao_Craft_ValueAnimation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_GetAttributeAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::WrapMode _GetAttributeAnimationWrapMode = self->GetAttributeAnimationWrapMode( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAttributeAnimationWrapMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animatable_GetAttributeAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animatable* self = (Craft::Animatable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animatable_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetAttributeAnimationSpeed = self->GetAttributeAnimationSpeed( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAttributeAnimationSpeed );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Node_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Node_Node_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SaveDefaultAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SaveXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetPosition2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetRotation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetPartialRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetOrientation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetScale2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetScale2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransform_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransform2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransform2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransform2D_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldPosition2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldScale2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldScale2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldTransform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldTransform_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldTransform2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldTransform2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetWorldTransform2D_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Translate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Translate2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Rotate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Rotate2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RotateAround( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RotateAround2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Pitch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Yaw( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Roll( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_LookAt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Scale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Scale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Scale2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetDeepEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_ResetDeepEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetEnabledRecursive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_MarkDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_CreateChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_AddChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveAllChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_CreateComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetOrCreateComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_CloneComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_CloneComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveComponents_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveAllComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Clone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Remove( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetParent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetVar( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_AddListener( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_RemoveListener( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNameHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_IsEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_IsEnabledSelf( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetOrientation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetPartialRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetUp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetRight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetScale2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldUp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldRight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldScale2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_LocalToWorld( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_LocalToWorld_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_LocalToWorld2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_WorldToLocal( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_WorldToLocal_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_WorldToLocal2D( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_IsDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNumChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetChild_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetChild_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNumComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNumNetworkComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_HasComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetVar( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetVars( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_ResetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetNetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_Load_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_PrepareNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_CleanupConnection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_MarkReplicationDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_CreateChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_AddComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNumPersistentChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_GetNumPersistentComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetPositionSilent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetRotationSilent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetScaleSilent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Node_SetTransformSilent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetComponents( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetAnimationController( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetDaoComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetOrCreateDaoComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_CreateDaoComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_CreateCustomGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetCustomGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_CreateRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_CreateCollisionShape( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetCollisionShape( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Node_GetOctree( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Node_Meths[] = 
{
  { dao_Craft_Node_Node_dao_2, "Node(  )=>Craft::Node" },
  { dao_Craft_Node_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Node_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_Node_Load, "Load( self: Craft::Node, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Node_Save, "Save( self: Craft::Node, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Node_ApplyAttributes, "ApplyAttributes( self: Craft::Node )" },
  { dao_Craft_Node_SaveDefaultAttributes, "SaveDefaultAttributes( self: Craft::Node )=>bool" },
  { dao_Craft_Node_MarkNetworkUpdate, "MarkNetworkUpdate( self: Craft::Node )" },
  { dao_Craft_Node_SaveXML, "SaveXML( self: Craft::Node, dest: Craft::Serializer, indentation: string ='\t' )=>bool" },
  { dao_Craft_Node_SetName, "SetName( self: Craft::Node, name: string )" },
  { dao_Craft_Node_SetPosition, "SetPosition( self: Craft::Node, position: Craft::Vector3 )" },
  { dao_Craft_Node_SetPosition2D, "SetPosition2D( self: Craft::Node, position: Craft::Vector2 )" },
  { dao_Craft_Node_SetPosition2D_dao_2, "SetPosition2D( self: Craft::Node, x: float, y: float )" },
  { dao_Craft_Node_SetRotation, "SetRotation( self: Craft::Node, rotation: Craft::Quaternion, full: bool )" },
  { dao_Craft_Node_SetRotation_dao_2, "SetRotation( self: Craft::Node, rotation: Craft::Quaternion )" },
  { dao_Craft_Node_SetRotation2D, "SetRotation2D( self: Craft::Node, rotation: float )" },
  { dao_Craft_Node_SetPartialRotation, "SetPartialRotation( self: Craft::Node, rotation: Craft::Quaternion )" },
  { dao_Craft_Node_SetOrientation, "SetOrientation( self: Craft::Node, orientation: Craft::Quaternion )" },
  { dao_Craft_Node_SetDirection, "SetDirection( self: Craft::Node, direction: Craft::Vector3 )" },
  { dao_Craft_Node_SetScale, "SetScale( self: Craft::Node, scale: float )" },
  { dao_Craft_Node_SetScale_dao_2, "SetScale( self: Craft::Node, scale: Craft::Vector3 )" },
  { dao_Craft_Node_SetScale2D, "SetScale2D( self: Craft::Node, scale: Craft::Vector2 )" },
  { dao_Craft_Node_SetScale2D_dao_2, "SetScale2D( self: Craft::Node, x: float, y: float )" },
  { dao_Craft_Node_SetTransform, "SetTransform( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion )" },
  { dao_Craft_Node_SetTransform_dao_2, "SetTransform( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion, scale: float )" },
  { dao_Craft_Node_SetTransform_dao_3, "SetTransform( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion, scale: Craft::Vector3 )" },
  { dao_Craft_Node_SetTransform2D, "SetTransform2D( self: Craft::Node, position: Craft::Vector2, rotation: float )" },
  { dao_Craft_Node_SetTransform2D_dao_2, "SetTransform2D( self: Craft::Node, position: Craft::Vector2, rotation: float, scale: float )" },
  { dao_Craft_Node_SetTransform2D_dao_3, "SetTransform2D( self: Craft::Node, position: Craft::Vector2, rotation: float, scale: Craft::Vector2 )" },
  { dao_Craft_Node_SetWorldPosition, "SetWorldPosition( self: Craft::Node, position: Craft::Vector3 )" },
  { dao_Craft_Node_SetWorldPosition2D, "SetWorldPosition2D( self: Craft::Node, position: Craft::Vector2 )" },
  { dao_Craft_Node_SetWorldPosition2D_dao_2, "SetWorldPosition2D( self: Craft::Node, x: float, y: float )" },
  { dao_Craft_Node_SetWorldRotation, "SetWorldRotation( self: Craft::Node, rotation: Craft::Quaternion )" },
  { dao_Craft_Node_SetWorldRotation2D, "SetWorldRotation2D( self: Craft::Node, rotation: float )" },
  { dao_Craft_Node_SetWorldDirection, "SetWorldDirection( self: Craft::Node, direction: Craft::Vector3 )" },
  { dao_Craft_Node_SetWorldScale, "SetWorldScale( self: Craft::Node, scale: float )" },
  { dao_Craft_Node_SetWorldScale_dao_2, "SetWorldScale( self: Craft::Node, scale: Craft::Vector3 )" },
  { dao_Craft_Node_SetWorldScale2D, "SetWorldScale2D( self: Craft::Node, scale: Craft::Vector2 )" },
  { dao_Craft_Node_SetWorldScale2D_dao_2, "SetWorldScale2D( self: Craft::Node, x: float, y: float )" },
  { dao_Craft_Node_SetWorldTransform, "SetWorldTransform( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion )" },
  { dao_Craft_Node_SetWorldTransform_dao_2, "SetWorldTransform( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion, scale: float )" },
  { dao_Craft_Node_SetWorldTransform_dao_3, "SetWorldTransform( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion, scale: Craft::Vector3 )" },
  { dao_Craft_Node_SetWorldTransform2D, "SetWorldTransform2D( self: Craft::Node, position: Craft::Vector2, rotation: float )" },
  { dao_Craft_Node_SetWorldTransform2D_dao_2, "SetWorldTransform2D( self: Craft::Node, position: Craft::Vector2, rotation: float, scale: float )" },
  { dao_Craft_Node_SetWorldTransform2D_dao_3, "SetWorldTransform2D( self: Craft::Node, position: Craft::Vector2, rotation: float, scale: Craft::Vector2 )" },
  { dao_Craft_Node_Translate, "Translate( self: Craft::Node, delta: Craft::Vector3, space: int =TS_LOCAL )" },
  { dao_Craft_Node_Translate2D, "Translate2D( self: Craft::Node, delta: Craft::Vector2, space: int =TS_LOCAL )" },
  { dao_Craft_Node_Rotate, "Rotate( self: Craft::Node, delta: Craft::Quaternion, space: int =TS_LOCAL )" },
  { dao_Craft_Node_Rotate2D, "Rotate2D( self: Craft::Node, delta: float, space: int =TS_LOCAL )" },
  { dao_Craft_Node_RotateAround, "RotateAround( self: Craft::Node, point: Craft::Vector3, delta: Craft::Quaternion, space: int =TS_LOCAL )" },
  { dao_Craft_Node_RotateAround2D, "RotateAround2D( self: Craft::Node, point: Craft::Vector2, delta: float, space: int =TS_LOCAL )" },
  { dao_Craft_Node_Pitch, "Pitch( self: Craft::Node, angle: float, space: int =TS_LOCAL )" },
  { dao_Craft_Node_Yaw, "Yaw( self: Craft::Node, angle: float, space: int =TS_LOCAL )" },
  { dao_Craft_Node_Roll, "Roll( self: Craft::Node, angle: float, space: int =TS_LOCAL )" },
  { dao_Craft_Node_LookAt, "LookAt( self: Craft::Node, target: Craft::Vector3, up: Craft::Vector3|none =none, space: int =TS_WORLD )=>bool" },
  { dao_Craft_Node_Scale, "Scale( self: Craft::Node, scale: float )" },
  { dao_Craft_Node_Scale_dao_2, "Scale( self: Craft::Node, scale: Craft::Vector3 )" },
  { dao_Craft_Node_Scale2D, "Scale2D( self: Craft::Node, scale: Craft::Vector2 )" },
  { dao_Craft_Node_SetEnabled, "SetEnabled( self: Craft::Node, enable: bool )" },
  { dao_Craft_Node_SetDeepEnabled, "SetDeepEnabled( self: Craft::Node, enable: bool )" },
  { dao_Craft_Node_ResetDeepEnabled, "ResetDeepEnabled( self: Craft::Node )" },
  { dao_Craft_Node_SetEnabledRecursive, "SetEnabledRecursive( self: Craft::Node, enable: bool )" },
  { dao_Craft_Node_SetOwner, "SetOwner( self: Craft::Node, owner: Craft::Connection )" },
  { dao_Craft_Node_MarkDirty, "MarkDirty( self: Craft::Node )" },
  { dao_Craft_Node_CreateChild, "CreateChild( self: Craft::Node, name: string, mode: int =REPLICATED, id: int =0 )=>Craft::Node" },
  { dao_Craft_Node_AddChild, "AddChild( self: Craft::Node, node: Craft::Node, index: int =MATH_MAX_UNSIGNED )" },
  { dao_Craft_Node_RemoveChild, "RemoveChild( self: Craft::Node, node: Craft::Node )" },
  { dao_Craft_Node_RemoveAllChildren, "RemoveAllChildren( self: Craft::Node )" },
  { dao_Craft_Node_RemoveChildren, "RemoveChildren( self: Craft::Node, removeReplicated: bool, removeLocal: bool, recursive: bool )" },
  { dao_Craft_Node_CreateComponent, "CreateComponent( self: Craft::Node, type: Craft::StringHash, mode: int =REPLICATED, id: int =0 )=>Craft::Component" },
  { dao_Craft_Node_GetOrCreateComponent, "GetOrCreateComponent( self: Craft::Node, type: Craft::StringHash, mode: int =REPLICATED, id: int =0 )=>Craft::Component" },
  { dao_Craft_Node_CloneComponent, "CloneComponent( self: Craft::Node, component: Craft::Component, id: int =0 )=>Craft::Component" },
  { dao_Craft_Node_CloneComponent_dao_2, "CloneComponent( self: Craft::Node, component: Craft::Component, mode: int, id: int =0 )=>Craft::Component" },
  { dao_Craft_Node_RemoveComponent, "RemoveComponent( self: Craft::Node, component: Craft::Component )" },
  { dao_Craft_Node_RemoveComponent_dao_2, "RemoveComponent( self: Craft::Node, type: Craft::StringHash )" },
  { dao_Craft_Node_RemoveComponents, "RemoveComponents( self: Craft::Node, removeReplicated: bool, removeLocal: bool )" },
  { dao_Craft_Node_RemoveComponents_dao_2, "RemoveComponents( self: Craft::Node, type: Craft::StringHash )" },
  { dao_Craft_Node_RemoveAllComponents, "RemoveAllComponents( self: Craft::Node )" },
  { dao_Craft_Node_Clone, "Clone( self: Craft::Node, mode: int =REPLICATED )=>Craft::Node" },
  { dao_Craft_Node_Remove, "Remove( self: Craft::Node )" },
  { dao_Craft_Node_SetParent, "SetParent( self: Craft::Node, parent: Craft::Node )" },
  { dao_Craft_Node_SetVar, "SetVar( self: Craft::Node, key: Craft::StringHash, value: Craft::Variant )" },
  { dao_Craft_Node_AddListener, "AddListener( self: Craft::Node, component: Craft::Component )" },
  { dao_Craft_Node_RemoveListener, "RemoveListener( self: Craft::Node, component: Craft::Component )" },
  { dao_Craft_Node_GetID, "GetID( self: Craft::Node )=>int" },
  { dao_Craft_Node_GetName, "GetName( self: Craft::Node )=>string" },
  { dao_Craft_Node_GetNameHash, "GetNameHash( self: Craft::Node )=>Craft::StringHash" },
  { dao_Craft_Node_GetParent, "GetParent( self: Craft::Node )=>Craft::Node|none" },
  { dao_Craft_Node_GetScene, "GetScene( self: Craft::Node )=>Craft::Scene|none" },
  { dao_Craft_Node_IsEnabled, "IsEnabled( self: Craft::Node )=>bool" },
  { dao_Craft_Node_IsEnabledSelf, "IsEnabledSelf( self: Craft::Node )=>bool" },
  { dao_Craft_Node_GetOwner, "GetOwner( self: Craft::Node )=>Craft::Connection" },
  { dao_Craft_Node_GetPosition, "GetPosition( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetPosition2D, "GetPosition2D( self: Craft::Node )=>Craft::Vector2" },
  { dao_Craft_Node_GetRotation, "GetRotation( self: Craft::Node )=>Craft::Quaternion" },
  { dao_Craft_Node_GetOrientation, "GetOrientation( self: Craft::Node )=>Craft::Quaternion" },
  { dao_Craft_Node_GetPartialRotation, "GetPartialRotation( self: Craft::Node )=>Craft::Quaternion" },
  { dao_Craft_Node_GetRotation2D, "GetRotation2D( self: Craft::Node )=>float" },
  { dao_Craft_Node_GetDirection, "GetDirection( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetUp, "GetUp( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetRight, "GetRight( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetScale, "GetScale( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetScale2D, "GetScale2D( self: Craft::Node )=>Craft::Vector2" },
  { dao_Craft_Node_GetTransform, "GetTransform( self: Craft::Node )=>Craft::Matrix3x4" },
  { dao_Craft_Node_GetWorldPosition, "GetWorldPosition( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetWorldPosition2D, "GetWorldPosition2D( self: Craft::Node )=>Craft::Vector2" },
  { dao_Craft_Node_GetWorldRotation, "GetWorldRotation( self: Craft::Node )=>Craft::Quaternion" },
  { dao_Craft_Node_GetWorldRotation2D, "GetWorldRotation2D( self: Craft::Node )=>float" },
  { dao_Craft_Node_GetWorldDirection, "GetWorldDirection( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetWorldUp, "GetWorldUp( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetWorldRight, "GetWorldRight( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetWorldScale, "GetWorldScale( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_GetWorldScale2D, "GetWorldScale2D( self: Craft::Node )=>Craft::Vector2" },
  { dao_Craft_Node_GetWorldTransform, "GetWorldTransform( self: Craft::Node )=>Craft::Matrix3x4" },
  { dao_Craft_Node_LocalToWorld, "LocalToWorld( self: Craft::Node, position: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Node_LocalToWorld_dao_2, "LocalToWorld( self: Craft::Node, vector: Craft::Vector4 )=>Craft::Vector3" },
  { dao_Craft_Node_LocalToWorld2D, "LocalToWorld2D( self: Craft::Node, vector: Craft::Vector2 )=>Craft::Vector2" },
  { dao_Craft_Node_WorldToLocal, "WorldToLocal( self: Craft::Node, position: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Node_WorldToLocal_dao_2, "WorldToLocal( self: Craft::Node, vector: Craft::Vector4 )=>Craft::Vector3" },
  { dao_Craft_Node_WorldToLocal2D, "WorldToLocal2D( self: Craft::Node, vector: Craft::Vector2 )=>Craft::Vector2" },
  { dao_Craft_Node_IsDirty, "IsDirty( self: Craft::Node )=>bool" },
  { dao_Craft_Node_GetNumChildren, "GetNumChildren( self: Craft::Node, recursive: bool =false )=>int" },
  { dao_Craft_Node_GetChildren, "GetChildren( self: Craft::Node )=>list<Craft::Node>" },
  { dao_Craft_Node_GetChild, "GetChild( self: Craft::Node, index: int )=>Craft::Node|none" },
  { dao_Craft_Node_GetChild_dao_2, "GetChild( self: Craft::Node, name: string, recursive: bool =false )=>Craft::Node|none" },
  { dao_Craft_Node_GetChild_dao_3, "GetChild( self: Craft::Node, name: string, recursive: bool =false )=>Craft::Node|none" },
  { dao_Craft_Node_GetChild_dao_4, "GetChild( self: Craft::Node, nameHash: Craft::StringHash, recursive: bool =false )=>Craft::Node|none" },
  { dao_Craft_Node_GetNumComponents, "GetNumComponents( self: Craft::Node )=>int" },
  { dao_Craft_Node_GetNumNetworkComponents, "GetNumNetworkComponents( self: Craft::Node )=>int" },
  { dao_Craft_Node_GetComponent, "GetComponent( self: Craft::Node, nameHash: Craft::StringHash, recursive: bool =false )=>Craft::Component|none" },
  { dao_Craft_Node_HasComponent, "HasComponent( self: Craft::Node, type: Craft::StringHash )=>bool" },
  { dao_Craft_Node_GetVar, "GetVar( self: Craft::Node, key: Craft::StringHash )=>Craft::Variant" },
  { dao_Craft_Node_GetVars, "GetVars( self: Craft::Node )=>Craft::VariantMap" },
  { dao_Craft_Node_SetID, "SetID( self: Craft::Node, id: int )" },
  { dao_Craft_Node_SetScene, "SetScene( self: Craft::Node, scene: Craft::Scene )" },
  { dao_Craft_Node_ResetScene, "ResetScene( self: Craft::Node )" },
  { dao_Craft_Node_SetNetPositionAttr, "SetNetPositionAttr( self: Craft::Node, value: Craft::Vector3 )" },
  { dao_Craft_Node_GetNetPositionAttr, "GetNetPositionAttr( self: Craft::Node )=>Craft::Vector3" },
  { dao_Craft_Node_Load_dao_2, "Load( self: Craft::Node, source: Craft::Deserializer, resolver: Craft::SceneResolver, loadChildren: bool =true, rewriteIDs: bool =false, mode: int =REPLICATED )=>bool" },
  { dao_Craft_Node_PrepareNetworkUpdate, "PrepareNetworkUpdate( self: Craft::Node )" },
  { dao_Craft_Node_CleanupConnection, "CleanupConnection( self: Craft::Node, connection: Craft::Connection )" },
  { dao_Craft_Node_MarkReplicationDirty, "MarkReplicationDirty( self: Craft::Node )" },
  { dao_Craft_Node_CreateChild_dao_2, "CreateChild( self: Craft::Node, id: int, mode: int )=>Craft::Node" },
  { dao_Craft_Node_AddComponent, "AddComponent( self: Craft::Node, component: Craft::Component, id: int, mode: int )" },
  { dao_Craft_Node_GetNumPersistentChildren, "GetNumPersistentChildren( self: Craft::Node )=>int" },
  { dao_Craft_Node_GetNumPersistentComponents, "GetNumPersistentComponents( self: Craft::Node )=>int" },
  { dao_Craft_Node_SetPositionSilent, "SetPositionSilent( self: Craft::Node, position: Craft::Vector3 )" },
  { dao_Craft_Node_SetRotationSilent, "SetRotationSilent( self: Craft::Node, rotation: Craft::Quaternion )" },
  { dao_Craft_Node_SetScaleSilent, "SetScaleSilent( self: Craft::Node, scale: Craft::Vector3 )" },
  { dao_Craft_Node_SetTransformSilent, "SetTransformSilent( self: Craft::Node, position: Craft::Vector3, rotation: Craft::Quaternion, scale: Craft::Vector3 )" },
  { dao_Craft_Node_GetComponents, "GetComponents( self: Craft::Node, name: string ='Component', recursive: bool =false )=>list<Craft::Component>" },
  { dao_Craft_Node_GetAnimationController, "GetAnimationController( self: Craft::Node, recursive: bool =false )=>Craft::AnimationController|none" },
  { dao_Craft_Node_GetDaoComponent, "GetDaoComponent( self: Craft::Node, name: string, recursive: bool =false )=>Craft::DaoComponent|none" },
  { dao_Craft_Node_GetOrCreateDaoComponent, "GetOrCreateDaoComponent( self: Craft::Node, mode: int =REPLICATED, id: int =0 )=>Craft::DaoComponent|none" },
  { dao_Craft_Node_CreateDaoComponent, "CreateDaoComponent( self: Craft::Node, mode: int =REPLICATED, id: int =0 )=>Craft::DaoComponent|none" },
  { dao_Craft_Node_CreateCustomGeometry, "CreateCustomGeometry( self: Craft::Node )=>Craft::CustomGeometry" },
  { dao_Craft_Node_GetCustomGeometry, "GetCustomGeometry( self: Craft::Node )=>Craft::CustomGeometry|none" },
  { dao_Craft_Node_CreateRigidBody, "CreateRigidBody( self: Craft::Node )=>Craft::RigidBody" },
  { dao_Craft_Node_GetRigidBody, "GetRigidBody( self: Craft::Node )=>Craft::RigidBody|none" },
  { dao_Craft_Node_CreateCollisionShape, "CreateCollisionShape( self: Craft::Node )=>Craft::CollisionShape" },
  { dao_Craft_Node_GetCollisionShape, "GetCollisionShape( self: Craft::Node )=>Craft::CollisionShape|none" },
  { dao_Craft_Node_GetOctree, "GetOctree( self: Craft::Node )=>Craft::Octree|none" },
  { NULL, NULL }
};
static void Dao_Craft_Node_Delete( DaoValue *self )
{
	Craft::Node *obj = (Craft::Node*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Node_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Node *self = (DaoCxx_Craft_Node*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Node_Craft_Animatable( void *data, int down )
{
	if( down ) return static_cast<Craft::Node*>((Craft::Animatable*)data);
	return dynamic_cast<Craft::Animatable*>((Craft::Node*)data);
}

static DaoTypeCore Craft_Node_Core = 
{
  "Craft::Node",
  sizeof(Craft::Node),
  { dao_Craft_Animatable_Core, NULL },
  { dao_cast_Craft_Node_Craft_Animatable,NULL },
  dao_Craft_Node_Nums,
  dao_Craft_Node_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Node_Delete,
  Dao_Craft_Node_HandleGC
};
DaoTypeCore *dao_Craft_Node_Core = & Craft_Node_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Node_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Node *_self = new DaoCxx_Craft_Node( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Node::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::Node::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SaveDefaultAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  bool _SaveDefaultAttributes = self->SaveDefaultAttributes(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveDefaultAttributes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->MarkNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SaveXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );
  DString *__str_indentation = DaoValue_TryGetString( _p[2] );
  Craft::String indentation( DString_GetData( __str_indentation ), DString_Size( __str_indentation ) );

  bool _SaveXML = self->SaveXML( *dest, indentation );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetName( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetPosition2D( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetPosition2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetPosition2D( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );
  bool full = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetRotation( *rotation, full );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetRotation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetRotation2D( rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetPartialRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetPartialRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetOrientation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* orientation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetOrientation( *orientation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetDirection( *direction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetScale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetScale( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetScale2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* scale = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetScale2D( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetScale2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetScale2D( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  self->SetTransform( *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[3] );

  self->SetTransform( *position, *rotation, scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransform_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->SetTransform( *position, *rotation, *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransform2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetTransform2D( *position, rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransform2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );
  float scale = (float) DaoValue_TryGetFloat( _p[3] );

  self->SetTransform2D( *position, rotation, scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransform2D_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::Vector2* scale = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector2_Core );

  self->SetTransform2D( *position, rotation, *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetWorldPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetWorldPosition2D( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldPosition2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetWorldPosition2D( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetWorldRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetWorldRotation2D( rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetWorldDirection( *direction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetWorldScale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldScale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetWorldScale( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldScale2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* scale = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetWorldScale2D( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldScale2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetWorldScale2D( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  self->SetWorldTransform( *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldTransform_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[3] );

  self->SetWorldTransform( *position, *rotation, scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldTransform_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->SetWorldTransform( *position, *rotation, *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldTransform2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetWorldTransform2D( *position, rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldTransform2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );
  float scale = (float) DaoValue_TryGetFloat( _p[3] );

  self->SetWorldTransform2D( *position, rotation, scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetWorldTransform2D_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* position = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::Vector2* scale = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector2_Core );

  self->SetWorldTransform2D( *position, rotation, *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Translate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* delta = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Translate( *delta, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Translate2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* delta = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Translate2D( *delta, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Rotate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* delta = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Rotate( *delta, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Rotate2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float delta = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Rotate2D( delta, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RotateAround( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* delta = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[3] );

  self->RotateAround( *point, *delta, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RotateAround2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* point = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );
  float delta = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[3] );

  self->RotateAround2D( *point, delta, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Pitch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float angle = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Pitch( angle, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Yaw( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float angle = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Yaw( angle, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Roll( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float angle = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[2] );

  self->Roll( angle, space );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_LookAt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* target = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* up = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::TransformSpace space = (Craft::TransformSpace) DaoValue_TryGetInteger( _p[3] );

  bool _LookAt;
  if(_n<=2) _LookAt = self->LookAt( *target );
  else _LookAt = self->LookAt( *target, *up, space );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LookAt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Scale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->Scale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Scale_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->Scale( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Scale2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* scale = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->Scale2D( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetEnabled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetDeepEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDeepEnabled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_ResetDeepEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->ResetDeepEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetEnabledRecursive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetEnabledRecursive( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Connection* owner = (Craft::Connection*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Connection_Core );

  self->SetOwner( owner );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_MarkDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->MarkDirty(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_CreateChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[2] );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  Craft::Node* _CreateChild = self->CreateChild( name, mode, id );
  DaoProcess_WrapCdataTC( _proc, (void*) _CreateChild, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_AddChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->AddChild( node, index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->RemoveChild( node );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveAllChildren( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->RemoveAllChildren(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveChildren( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  bool removeReplicated = (bool) DaoValue_TryGetBoolean( _p[1] );
  bool removeLocal = (bool) DaoValue_TryGetBoolean( _p[2] );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->RemoveChildren( removeReplicated, removeLocal, recursive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_CreateComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[2] );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  Craft::Component* _CreateComponent = self->CreateComponent( *type, mode, id );
  DaoProcess_WrapCdataTC( _proc, (void*) _CreateComponent, dao_Craft_Component_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetOrCreateComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[2] );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  Craft::Component* _GetOrCreateComponent = self->GetOrCreateComponent( *type, mode, id );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOrCreateComponent, dao_Craft_Component_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_CloneComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  Craft::Component* _CloneComponent = self->CloneComponent( component, id );
  DaoProcess_WrapCdataTC( _proc, (void*) _CloneComponent, dao_Craft_Component_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_CloneComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[2] );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  Craft::Component* _CloneComponent = self->CloneComponent( component, mode, id );
  DaoProcess_WrapCdataTC( _proc, (void*) _CloneComponent, dao_Craft_Component_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->RemoveComponent( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  self->RemoveComponent( *type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  bool removeReplicated = (bool) DaoValue_TryGetBoolean( _p[1] );
  bool removeLocal = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->RemoveComponents( removeReplicated, removeLocal );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveComponents_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  self->RemoveComponents( *type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveAllComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->RemoveAllComponents(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Clone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[1] );

  Craft::Node* _Clone = self->Clone( mode );
  DaoProcess_WrapCdataTC( _proc, (void*) _Clone, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Remove( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->Remove(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetParent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Node* parent = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->SetParent( parent );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetVar( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* key = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  self->SetVar( *key, *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_AddListener( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->AddListener( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_RemoveListener( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->RemoveListener( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  unsigned int _GetID = self->GetID(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNameHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::StringHash _GetNameHash = self->GetNameHash(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetNameHash ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Node* dao_Craft_Node_GetParent = self->GetParent(  );
  if( dao_Craft_Node_GetParent ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetParent, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Scene* dao_Craft_Node_GetScene = self->GetScene(  );
  if( dao_Craft_Node_GetScene ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetScene, dao_Craft_Scene_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_IsEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  bool _IsEnabled = self->IsEnabled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEnabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_IsEnabledSelf( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  bool _IsEnabledSelf = self->IsEnabledSelf(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEnabledSelf );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Connection* _GetOwner = self->GetOwner(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOwner, dao_Craft_Connection_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Vector3& _GetPosition = self->GetPosition(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetPosition, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector2 _GetPosition2D = self->GetPosition2D(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _GetPosition2D ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Quaternion _GetRotation = self->GetRotation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _GetRotation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetOrientation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Quaternion _GetOrientation = self->GetOrientation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _GetOrientation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetPartialRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Quaternion& _GetPartialRotation = self->GetPartialRotation(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetPartialRotation, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  float _GetRotation2D = self->GetRotation2D(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRotation2D );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetDirection = self->GetDirection(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetDirection ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetUp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetUp = self->GetUp(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetUp ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetRight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetRight = self->GetRight(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetRight ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Vector3& _GetScale = self->GetScale(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetScale, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetScale2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector2 _GetScale2D = self->GetScale2D(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _GetScale2D ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Matrix3x4 _GetTransform = self->GetTransform(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3x4( _GetTransform ), dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetWorldPosition = self->GetWorldPosition(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetWorldPosition ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldPosition2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector2 _GetWorldPosition2D = self->GetWorldPosition2D(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _GetWorldPosition2D ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Quaternion _GetWorldRotation = self->GetWorldRotation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _GetWorldRotation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldRotation2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  float _GetWorldRotation2D = self->GetWorldRotation2D(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetWorldRotation2D );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetWorldDirection = self->GetWorldDirection(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetWorldDirection ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldUp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetWorldUp = self->GetWorldUp(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetWorldUp ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldRight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetWorldRight = self->GetWorldRight(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetWorldRight ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector3 _GetWorldScale = self->GetWorldScale(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetWorldScale ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldScale2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  Craft::Vector2 _GetWorldScale2D = self->GetWorldScale2D(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _GetWorldScale2D ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Matrix3x4& _GetWorldTransform = self->GetWorldTransform(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetWorldTransform, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_LocalToWorld( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _LocalToWorld = self->LocalToWorld( *position );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _LocalToWorld ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_LocalToWorld_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector4* vector = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  Craft::Vector3 _LocalToWorld = self->LocalToWorld( *vector );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _LocalToWorld ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_LocalToWorld2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* vector = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  Craft::Vector2 _LocalToWorld2D = self->LocalToWorld2D( *vector );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _LocalToWorld2D ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_WorldToLocal( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _WorldToLocal = self->WorldToLocal( *position );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _WorldToLocal ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_WorldToLocal_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector4* vector = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  Craft::Vector3 _WorldToLocal = self->WorldToLocal( *vector );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _WorldToLocal ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_WorldToLocal2D( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector2* vector = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  Craft::Vector2 _WorldToLocal2D = self->WorldToLocal2D( *vector );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _WorldToLocal2D ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_IsDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  bool _IsDirty = self->IsDirty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsDirty );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNumChildren( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[1] );

  unsigned int _GetNumChildren = self->GetNumChildren( recursive );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumChildren );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Node* dao_Craft_Node_GetChild = self->GetChild( index );
  if( dao_Craft_Node_GetChild ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetChild, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[2] );

  Craft::Node* dao_Craft_Node_GetChild2 = self->GetChild( name, recursive );
  if( dao_Craft_Node_GetChild2 ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetChild2, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetChild_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[2] );

  Craft::Node* dao_Craft_Node_GetChild3 = self->GetChild( name, recursive );
  if( dao_Craft_Node_GetChild3 ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetChild3, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetChild_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[2] );

  Craft::Node* dao_Craft_Node_GetChild4 = self->GetChild( *nameHash, recursive );
  if( dao_Craft_Node_GetChild4 ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetChild4, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNumComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  unsigned int _GetNumComponents = self->GetNumComponents(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumComponents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNumNetworkComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  unsigned int _GetNumNetworkComponents = self->GetNumNetworkComponents(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumNetworkComponents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[2] );

  Craft::Component* dao_Craft_Node_GetComponent = self->GetComponent( *nameHash, recursive );
  if( dao_Craft_Node_GetComponent ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Node_GetComponent, dao_Craft_Component_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_HasComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  bool _HasComponent = self->HasComponent( *type );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasComponent );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetVar( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::StringHash* key = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  const Craft::Variant& _GetVar = self->GetVar( *key );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVar, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetVars( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::VariantMap& _GetVars = self->GetVars(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVars, dao_Craft_VariantMap_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetID( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Scene* scene = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Scene_Core );

  self->SetScene( scene );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_ResetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->ResetScene(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetNetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* value = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetNetPositionAttr( *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  const Craft::Vector3& _GetNetPositionAttr = self->GetNetPositionAttr(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetNetPositionAttr, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_Load_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );
  Craft::SceneResolver* resolver = (Craft::SceneResolver*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_SceneResolver_Core );
  bool loadChildren = (bool) DaoValue_TryGetBoolean( _p[3] );
  bool rewriteIDs = (bool) DaoValue_TryGetBoolean( _p[4] );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[5] );

  bool _Load = self->Load( *source, *resolver, loadChildren, rewriteIDs, mode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_PrepareNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->PrepareNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_CleanupConnection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Connection* connection = (Craft::Connection*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Connection_Core );

  self->CleanupConnection( connection );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_MarkReplicationDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  self->MarkReplicationDirty(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_CreateChild_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[2] );

  Craft::Node* _CreateChild = self->CreateChild( id, mode );
  DaoProcess_WrapCdataTC( _proc, (void*) _CreateChild, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_AddComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[3] );

  self->AddComponent( component, id, mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNumPersistentChildren( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  unsigned int _GetNumPersistentChildren = self->GetNumPersistentChildren(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumPersistentChildren );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_GetNumPersistentComponents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );

  unsigned int _GetNumPersistentComponents = self->GetNumPersistentComponents(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumPersistentComponents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetPositionSilent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetPositionSilent( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetRotationSilent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetRotationSilent( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetScaleSilent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetScaleSilent( *scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Node_SetTransformSilent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* self = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );

  self->SetTransformSilent( *position, *rotation, *scale );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Scene_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Scene_Scene_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_LoadXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SaveXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_LoadAsync( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_LoadAsyncXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_StopAsyncLoading( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_Instantiate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_InstantiateXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetUpdateEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetTimeScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetElapsedTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetSmoothingConstant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetSnapThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetAsyncLoadingMs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_RegisterVar( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_UnregisterVar( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_UnregisterAllVars( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_IsUpdateEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_IsAsyncLoading( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetAsyncProgress( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetAsyncLoadMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetFileName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetTimeScale( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetElapsedTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetSmoothingConstant( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetSnapThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetAsyncLoadingMs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetVarName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_BeginThreadedUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_EndThreadedUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_DelayedMarkedDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_IsThreadedUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetFreeNodeID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetFreeComponentID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_NodeAdded( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_NodeRemoved( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_ComponentAdded( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_ComponentRemoved( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_SetVarNamesAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_GetVarNamesAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_PrepareNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_CleanupConnection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_MarkNetworkUpdate_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_MarkNetworkUpdate_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Scene_MarkReplicationDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Scene_GetMainCamera( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Scene_Meths[] = 
{
  { dao_Craft_Scene_Scene_dao_2, "Scene(  )=>Craft::Scene" },
  { dao_Craft_Scene_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Scene_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_Scene_Load, "Load( self: Craft::Scene, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Scene_Save, "Save( self: Craft::Scene, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Scene_MarkNetworkUpdate, "MarkNetworkUpdate( self: Craft::Scene )" },
  { dao_Craft_Scene_LoadXML, "LoadXML( self: Craft::Scene, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Scene_SaveXML, "SaveXML( self: Craft::Scene, dest: Craft::Serializer, indentation: string ='\t' )=>bool" },
  { dao_Craft_Scene_LoadAsync, "LoadAsync( self: Craft::Scene, file: Craft::File, mode: int =LOAD_SCENE_AND_RESOURCES )=>bool" },
  { dao_Craft_Scene_LoadAsyncXML, "LoadAsyncXML( self: Craft::Scene, file: Craft::File, mode: int =LOAD_SCENE_AND_RESOURCES )=>bool" },
  { dao_Craft_Scene_StopAsyncLoading, "StopAsyncLoading( self: Craft::Scene )" },
  { dao_Craft_Scene_Instantiate, "Instantiate( self: Craft::Scene, source: Craft::Deserializer, position: Craft::Vector3, rotation: Craft::Quaternion, mode: int =REPLICATED )=>Craft::Node" },
  { dao_Craft_Scene_InstantiateXML, "InstantiateXML( self: Craft::Scene, source: Craft::Deserializer, position: Craft::Vector3, rotation: Craft::Quaternion, mode: int =REPLICATED )=>Craft::Node" },
  { dao_Craft_Scene_Clear, "Clear( self: Craft::Scene, clearReplicated: bool =true, clearLocal: bool =true )" },
  { dao_Craft_Scene_SetUpdateEnabled, "SetUpdateEnabled( self: Craft::Scene, enable: bool )" },
  { dao_Craft_Scene_SetTimeScale, "SetTimeScale( self: Craft::Scene, scale: float )" },
  { dao_Craft_Scene_SetElapsedTime, "SetElapsedTime( self: Craft::Scene, time: float )" },
  { dao_Craft_Scene_SetSmoothingConstant, "SetSmoothingConstant( self: Craft::Scene, constant: float )" },
  { dao_Craft_Scene_SetSnapThreshold, "SetSnapThreshold( self: Craft::Scene, threshold: float )" },
  { dao_Craft_Scene_SetAsyncLoadingMs, "SetAsyncLoadingMs( self: Craft::Scene, ms: int )" },
  { dao_Craft_Scene_RegisterVar, "RegisterVar( self: Craft::Scene, name: string )" },
  { dao_Craft_Scene_UnregisterVar, "UnregisterVar( self: Craft::Scene, name: string )" },
  { dao_Craft_Scene_UnregisterAllVars, "UnregisterAllVars( self: Craft::Scene )" },
  { dao_Craft_Scene_GetNode, "GetNode( self: Craft::Scene, id: int )=>Craft::Node|none" },
  { dao_Craft_Scene_GetComponent, "GetComponent( self: Craft::Scene, id: int )=>Craft::Component|none" },
  { dao_Craft_Scene_IsUpdateEnabled, "IsUpdateEnabled( self: Craft::Scene )=>bool" },
  { dao_Craft_Scene_IsAsyncLoading, "IsAsyncLoading( self: Craft::Scene )=>bool" },
  { dao_Craft_Scene_GetAsyncProgress, "GetAsyncProgress( self: Craft::Scene )=>float" },
  { dao_Craft_Scene_GetAsyncLoadMode, "GetAsyncLoadMode( self: Craft::Scene )=>int" },
  { dao_Craft_Scene_GetFileName, "GetFileName( self: Craft::Scene )=>string" },
  { dao_Craft_Scene_GetChecksum, "GetChecksum( self: Craft::Scene )=>int" },
  { dao_Craft_Scene_GetTimeScale, "GetTimeScale( self: Craft::Scene )=>float" },
  { dao_Craft_Scene_GetElapsedTime, "GetElapsedTime( self: Craft::Scene )=>float" },
  { dao_Craft_Scene_GetSmoothingConstant, "GetSmoothingConstant( self: Craft::Scene )=>float" },
  { dao_Craft_Scene_GetSnapThreshold, "GetSnapThreshold( self: Craft::Scene )=>float" },
  { dao_Craft_Scene_GetAsyncLoadingMs, "GetAsyncLoadingMs( self: Craft::Scene )=>int" },
  { dao_Craft_Scene_GetVarName, "GetVarName( self: Craft::Scene, hash: Craft::StringHash )=>string" },
  { dao_Craft_Scene_Update, "Update( self: Craft::Scene, timeStep: float )" },
  { dao_Craft_Scene_BeginThreadedUpdate, "BeginThreadedUpdate( self: Craft::Scene )" },
  { dao_Craft_Scene_EndThreadedUpdate, "EndThreadedUpdate( self: Craft::Scene )" },
  { dao_Craft_Scene_DelayedMarkedDirty, "DelayedMarkedDirty( self: Craft::Scene, component: Craft::Component )" },
  { dao_Craft_Scene_IsThreadedUpdate, "IsThreadedUpdate( self: Craft::Scene )=>bool" },
  { dao_Craft_Scene_GetFreeNodeID, "GetFreeNodeID( self: Craft::Scene, mode: int )=>int" },
  { dao_Craft_Scene_GetFreeComponentID, "GetFreeComponentID( self: Craft::Scene, mode: int )=>int" },
  { dao_Craft_Scene_NodeAdded, "NodeAdded( self: Craft::Scene, node: Craft::Node )" },
  { dao_Craft_Scene_NodeRemoved, "NodeRemoved( self: Craft::Scene, node: Craft::Node )" },
  { dao_Craft_Scene_ComponentAdded, "ComponentAdded( self: Craft::Scene, component: Craft::Component )" },
  { dao_Craft_Scene_ComponentRemoved, "ComponentRemoved( self: Craft::Scene, component: Craft::Component )" },
  { dao_Craft_Scene_SetVarNamesAttr, "SetVarNamesAttr( self: Craft::Scene, value: string )" },
  { dao_Craft_Scene_GetVarNamesAttr, "GetVarNamesAttr( self: Craft::Scene )=>string" },
  { dao_Craft_Scene_PrepareNetworkUpdate, "PrepareNetworkUpdate( self: Craft::Scene )" },
  { dao_Craft_Scene_CleanupConnection, "CleanupConnection( self: Craft::Scene, connection: Craft::Connection )" },
  { dao_Craft_Scene_MarkNetworkUpdate_dao_2, "MarkNetworkUpdate( self: Craft::Scene, node: Craft::Node )" },
  { dao_Craft_Scene_MarkNetworkUpdate_dao_3, "MarkNetworkUpdate( self: Craft::Scene, component: Craft::Component )" },
  { dao_Craft_Scene_MarkReplicationDirty, "MarkReplicationDirty( self: Craft::Scene, node: Craft::Node )" },
  { dao_Craft_Scene_GetMainCamera, "GetMainCamera( self: Craft::Scene )=>Craft::Camera|none" },
  { NULL, NULL }
};
static void Dao_Craft_Scene_Delete( DaoValue *self )
{
	Craft::Scene *obj = (Craft::Scene*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Scene_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Scene *self = (DaoCxx_Craft_Scene*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Scene_Craft_Node( void *data, int down )
{
	if( down ) return static_cast<Craft::Scene*>((Craft::Node*)data);
	return dynamic_cast<Craft::Node*>((Craft::Scene*)data);
}

static DaoTypeCore Craft_Scene_Core = 
{
  "Craft::Scene",
  sizeof(Craft::Scene),
  { dao_Craft_Node_Core, NULL },
  { dao_cast_Craft_Scene_Craft_Node,NULL },
  dao_Craft_Scene_Nums,
  dao_Craft_Scene_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Scene_Delete,
  Dao_Craft_Scene_HandleGC
};
DaoTypeCore *dao_Craft_Scene_Core = & Craft_Scene_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_Scene_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Scene *_self = new DaoCxx_Craft_Scene( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Scene::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::Scene::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  self->MarkNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_LoadXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _LoadXML = self->LoadXML( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SaveXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );
  DString *__str_indentation = DaoValue_TryGetString( _p[2] );
  Craft::String indentation( DString_GetData( __str_indentation ), DString_Size( __str_indentation ) );

  bool _SaveXML = self->SaveXML( *dest, indentation );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_LoadAsync( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::File* file = (Craft::File*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_File_Core );
  Craft::LoadMode mode = (Craft::LoadMode) DaoValue_TryGetInteger( _p[2] );

  bool _LoadAsync = self->LoadAsync( file, mode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadAsync );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_LoadAsyncXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::File* file = (Craft::File*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_File_Core );
  Craft::LoadMode mode = (Craft::LoadMode) DaoValue_TryGetInteger( _p[2] );

  bool _LoadAsyncXML = self->LoadAsyncXML( file, mode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadAsyncXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_StopAsyncLoading( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  self->StopAsyncLoading(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_Instantiate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Quaternion_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[4] );

  Craft::Node* _Instantiate = self->Instantiate( *source, *position, *rotation, mode );
  DaoProcess_WrapCdataTC( _proc, (void*) _Instantiate, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_InstantiateXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Quaternion_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[4] );

  Craft::Node* _InstantiateXML = self->InstantiateXML( *source, *position, *rotation, mode );
  DaoProcess_WrapCdataTC( _proc, (void*) _InstantiateXML, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  bool clearReplicated = (bool) DaoValue_TryGetBoolean( _p[1] );
  bool clearLocal = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->Clear( clearReplicated, clearLocal );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetUpdateEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUpdateEnabled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetTimeScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  float scale = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetTimeScale( scale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetElapsedTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetElapsedTime( time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetSmoothingConstant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  float constant = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSmoothingConstant( constant );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetSnapThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  float threshold = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSnapThreshold( threshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetAsyncLoadingMs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  int ms = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetAsyncLoadingMs( ms );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_RegisterVar( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->RegisterVar( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_UnregisterVar( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->UnregisterVar( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_UnregisterAllVars( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  self->UnregisterAllVars(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Node* dao_Craft_Scene_GetNode = self->GetNode( id );
  if( dao_Craft_Scene_GetNode ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Scene_GetNode, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Component* dao_Craft_Scene_GetComponent = self->GetComponent( id );
  if( dao_Craft_Scene_GetComponent ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Scene_GetComponent, dao_Craft_Component_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_IsUpdateEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  bool _IsUpdateEnabled = self->IsUpdateEnabled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsUpdateEnabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_IsAsyncLoading( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  bool _IsAsyncLoading = self->IsAsyncLoading(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsAsyncLoading );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetAsyncProgress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  float _GetAsyncProgress = self->GetAsyncProgress(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAsyncProgress );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetAsyncLoadMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  Craft::LoadMode _GetAsyncLoadMode = self->GetAsyncLoadMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAsyncLoadMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetFileName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  const Craft::String& _GetFileName = self->GetFileName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetFileName.CString(), _GetFileName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetChecksum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  unsigned int _GetChecksum = self->GetChecksum(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetChecksum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetTimeScale( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  float _GetTimeScale = self->GetTimeScale(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetTimeScale );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetElapsedTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  float _GetElapsedTime = self->GetElapsedTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetElapsedTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetSmoothingConstant( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  float _GetSmoothingConstant = self->GetSmoothingConstant(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSmoothingConstant );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetSnapThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  float _GetSnapThreshold = self->GetSnapThreshold(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSnapThreshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetAsyncLoadingMs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  int _GetAsyncLoadingMs = self->GetAsyncLoadingMs(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAsyncLoadingMs );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetVarName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::StringHash* hash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  const Craft::String& _GetVarName = self->GetVarName( *hash );
  DaoProcess_PutBytes( _proc, (char*) _GetVarName.CString(), _GetVarName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_BeginThreadedUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  self->BeginThreadedUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_EndThreadedUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  self->EndThreadedUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_DelayedMarkedDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->DelayedMarkedDirty( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_IsThreadedUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  bool _IsThreadedUpdate = self->IsThreadedUpdate(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsThreadedUpdate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetFreeNodeID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetFreeNodeID = self->GetFreeNodeID( mode );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFreeNodeID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetFreeComponentID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::CreateMode mode = (Craft::CreateMode) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetFreeComponentID = self->GetFreeComponentID( mode );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFreeComponentID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_NodeAdded( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->NodeAdded( node );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_NodeRemoved( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->NodeRemoved( node );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_ComponentAdded( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->ComponentAdded( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_ComponentRemoved( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->ComponentRemoved( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_SetVarNamesAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  DString *__str_value = DaoValue_TryGetString( _p[1] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  self->SetVarNamesAttr( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_GetVarNamesAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  Craft::String _GetVarNamesAttr = self->GetVarNamesAttr(  );
  DaoProcess_PutBytes( _proc, (char*) _GetVarNamesAttr.CString(), _GetVarNamesAttr.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_PrepareNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );

  self->PrepareNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_CleanupConnection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Connection* connection = (Craft::Connection*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Connection_Core );

  self->CleanupConnection( connection );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_MarkNetworkUpdate_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->MarkNetworkUpdate( node );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_MarkNetworkUpdate_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Component* component = (Craft::Component*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Component_Core );

  self->MarkNetworkUpdate( component );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Scene_MarkReplicationDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Scene* self = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->MarkReplicationDirty( node );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ValueAnimation_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ValueAnimation_ValueAnimation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_SetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_SetInterpolationMethod( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_SetSplineTension( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_SetValueType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_SetKeyFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_SetEventFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_IsValid( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetInterpolationMethod( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetSplineTension( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetValueType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetBeginTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetEndTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_GetAnimationValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ValueAnimation_HasEventFrames( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ValueAnimation_Meths[] = 
{
  { dao_Craft_ValueAnimation_ValueAnimation_dao_2, "ValueAnimation(  )=>Craft::ValueAnimation" },
  { dao_Craft_ValueAnimation_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_ValueAnimation_BeginLoad, "BeginLoad( self: Craft::ValueAnimation, source: Craft::Deserializer )=>bool" },
  { dao_Craft_ValueAnimation_Save, "Save( self: Craft::ValueAnimation, dest: Craft::Serializer )=>bool" },
  { dao_Craft_ValueAnimation_SetOwner, "SetOwner( self: Craft::ValueAnimation, owner: cdata )" },
  { dao_Craft_ValueAnimation_SetInterpolationMethod, "SetInterpolationMethod( self: Craft::ValueAnimation, method: int )" },
  { dao_Craft_ValueAnimation_SetSplineTension, "SetSplineTension( self: Craft::ValueAnimation, tension: float )" },
  { dao_Craft_ValueAnimation_SetValueType, "SetValueType( self: Craft::ValueAnimation, valueType: int )" },
  { dao_Craft_ValueAnimation_SetKeyFrame, "SetKeyFrame( self: Craft::ValueAnimation, time: float, value: Craft::Variant )=>bool" },
  { dao_Craft_ValueAnimation_SetEventFrame, "SetEventFrame( self: Craft::ValueAnimation, time: float, eventType: Craft::StringHash, eventData: Craft::VariantMap|none =none )" },
  { dao_Craft_ValueAnimation_IsValid, "IsValid( self: Craft::ValueAnimation )=>bool" },
  { dao_Craft_ValueAnimation_GetOwner, "GetOwner( self: Craft::ValueAnimation )=>cdata" },
  { dao_Craft_ValueAnimation_GetInterpolationMethod, "GetInterpolationMethod( self: Craft::ValueAnimation )=>int" },
  { dao_Craft_ValueAnimation_GetSplineTension, "GetSplineTension( self: Craft::ValueAnimation )=>float" },
  { dao_Craft_ValueAnimation_GetValueType, "GetValueType( self: Craft::ValueAnimation )=>int" },
  { dao_Craft_ValueAnimation_GetBeginTime, "GetBeginTime( self: Craft::ValueAnimation )=>float" },
  { dao_Craft_ValueAnimation_GetEndTime, "GetEndTime( self: Craft::ValueAnimation )=>float" },
  { dao_Craft_ValueAnimation_GetAnimationValue, "GetAnimationValue( self: Craft::ValueAnimation, scaledTime: float )=>Craft::Variant" },
  { dao_Craft_ValueAnimation_HasEventFrames, "HasEventFrames( self: Craft::ValueAnimation )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_ValueAnimation_Delete( DaoValue *self )
{
	Craft::ValueAnimation *obj = (Craft::ValueAnimation*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ValueAnimation_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ValueAnimation *self = (DaoCxx_Craft_ValueAnimation*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ValueAnimation_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::ValueAnimation*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::ValueAnimation*)data);
}

static DaoTypeCore Craft_ValueAnimation_Core = 
{
  "Craft::ValueAnimation",
  sizeof(Craft::ValueAnimation),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_ValueAnimation_Craft_Resource,NULL },
  dao_Craft_ValueAnimation_Nums,
  dao_Craft_ValueAnimation_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ValueAnimation_Delete,
  Dao_Craft_ValueAnimation_HandleGC
};
DaoTypeCore *dao_Craft_ValueAnimation_Core = & Craft_ValueAnimation_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_ValueAnimation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_ValueAnimation *_self = new DaoCxx_Craft_ValueAnimation( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::ValueAnimation::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_SetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  void* owner = (void*) DaoValue_TryGetCdata( _p[1] );

  self->SetOwner( owner );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_SetInterpolationMethod( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  Craft::InterpMethod method = (Craft::InterpMethod) DaoValue_TryGetInteger( _p[1] );

  self->SetInterpolationMethod( method );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_SetSplineTension( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  float tension = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSplineTension( tension );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_SetValueType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  Craft::VariantType valueType = (Craft::VariantType) DaoValue_TryGetInteger( _p[1] );

  self->SetValueType( valueType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_SetKeyFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  bool _SetKeyFrame = self->SetKeyFrame( time, *value );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetKeyFrame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_SetEventFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::StringHash* eventType = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_StringHash_Core );
  Craft::VariantMap* eventData = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_VariantMap_Core );

  if(_n<=3) self->SetEventFrame( time, *eventType );
  else self->SetEventFrame( time, *eventType, *eventData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_IsValid( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  bool _IsValid = self->IsValid(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsValid );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  void* _GetOwner = self->GetOwner(  );
  DaoProcess_WrapCdata( _proc, (void*) _GetOwner, NULL );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetInterpolationMethod( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  Craft::InterpMethod _GetInterpolationMethod = self->GetInterpolationMethod(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetInterpolationMethod );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetSplineTension( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  float _GetSplineTension = self->GetSplineTension(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSplineTension );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetValueType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  Craft::VariantType _GetValueType = self->GetValueType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetValueType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetBeginTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  float _GetBeginTime = self->GetBeginTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetBeginTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetEndTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  float _GetEndTime = self->GetEndTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetEndTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_GetAnimationValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );
  float scaledTime = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Variant _GetAnimationValue = self->GetAnimationValue( scaledTime );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Variant( _GetAnimationValue ), dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ValueAnimation_HasEventFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ValueAnimation* self = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ValueAnimation_Core );

  bool _HasEventFrames = self->HasEventFrames(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasEventFrames );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ObjectAnimation_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ObjectAnimation_ObjectAnimation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_AddAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_RemoveAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_RemoveAttributeAnimation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_GetAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_GetAttributeAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ObjectAnimation_GetAttributeAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ObjectAnimation_Meths[] = 
{
  { dao_Craft_ObjectAnimation_ObjectAnimation_dao_2, "ObjectAnimation(  )=>Craft::ObjectAnimation" },
  { dao_Craft_ObjectAnimation_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_ObjectAnimation_BeginLoad, "BeginLoad( self: Craft::ObjectAnimation, source: Craft::Deserializer )=>bool" },
  { dao_Craft_ObjectAnimation_Save, "Save( self: Craft::ObjectAnimation, dest: Craft::Serializer )=>bool" },
  { dao_Craft_ObjectAnimation_AddAttributeAnimation, "AddAttributeAnimation( self: Craft::ObjectAnimation, name: string, attributeAnimation: Craft::ValueAnimation, wrapMode: int =WM_LOOP, speed: float =1.00 )" },
  { dao_Craft_ObjectAnimation_RemoveAttributeAnimation, "RemoveAttributeAnimation( self: Craft::ObjectAnimation, name: string )" },
  { dao_Craft_ObjectAnimation_RemoveAttributeAnimation_dao_2, "RemoveAttributeAnimation( self: Craft::ObjectAnimation, attributeAnimation: Craft::ValueAnimation )" },
  { dao_Craft_ObjectAnimation_GetAttributeAnimation, "GetAttributeAnimation( self: Craft::ObjectAnimation, name: string )=>Craft::ValueAnimation" },
  { dao_Craft_ObjectAnimation_GetAttributeAnimationWrapMode, "GetAttributeAnimationWrapMode( self: Craft::ObjectAnimation, name: string )=>int" },
  { dao_Craft_ObjectAnimation_GetAttributeAnimationSpeed, "GetAttributeAnimationSpeed( self: Craft::ObjectAnimation, name: string )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_ObjectAnimation_Delete( DaoValue *self )
{
	Craft::ObjectAnimation *obj = (Craft::ObjectAnimation*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ObjectAnimation_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ObjectAnimation *self = (DaoCxx_Craft_ObjectAnimation*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ObjectAnimation_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::ObjectAnimation*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::ObjectAnimation*)data);
}

static DaoTypeCore Craft_ObjectAnimation_Core = 
{
  "Craft::ObjectAnimation",
  sizeof(Craft::ObjectAnimation),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_ObjectAnimation_Craft_Resource,NULL },
  dao_Craft_ObjectAnimation_Nums,
  dao_Craft_ObjectAnimation_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ObjectAnimation_Delete,
  Dao_Craft_ObjectAnimation_HandleGC
};
DaoTypeCore *dao_Craft_ObjectAnimation_Core = & Craft_ObjectAnimation_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_ObjectAnimation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_ObjectAnimation *_self = new DaoCxx_Craft_ObjectAnimation( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::ObjectAnimation::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_AddAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::ValueAnimation* attributeAnimation = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_ValueAnimation_Core );
  Craft::WrapMode wrapMode = (Craft::WrapMode) DaoValue_TryGetInteger( _p[3] );
  float speed = (float) DaoValue_TryGetFloat( _p[4] );

  self->AddAttributeAnimation( name, attributeAnimation, wrapMode, speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_RemoveAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->RemoveAttributeAnimation( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_RemoveAttributeAnimation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  Craft::ValueAnimation* attributeAnimation = (Craft::ValueAnimation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ValueAnimation_Core );

  self->RemoveAttributeAnimation( attributeAnimation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_GetAttributeAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::ValueAnimation* _GetAttributeAnimation = self->GetAttributeAnimation( name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAttributeAnimation, dao_Craft_ValueAnimation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_GetAttributeAnimationWrapMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::WrapMode _GetAttributeAnimationWrapMode = self->GetAttributeAnimationWrapMode( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAttributeAnimationWrapMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ObjectAnimation_GetAttributeAnimationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ObjectAnimation* self = (Craft::ObjectAnimation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ObjectAnimation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetAttributeAnimationSpeed = self->GetAttributeAnimationSpeed( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAttributeAnimationSpeed );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Component_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Component_Component_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_SetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_Remove( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_GetID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_GetNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_IsEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_IsEnabledEffective( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_GetComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Component_PrepareNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Component_Meths[] = 
{
  { dao_Craft_Component_Component_dao_2, "Component(  )=>Craft::Component" },
  { dao_Craft_Component_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_Component_OnSetEnabled, "OnSetEnabled( self: Craft::Component )" },
  { dao_Craft_Component_Save, "Save( self: Craft::Component, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Component_MarkNetworkUpdate, "MarkNetworkUpdate( self: Craft::Component )" },
  { dao_Craft_Component_SetEnabled, "SetEnabled( self: Craft::Component, enable: bool )" },
  { dao_Craft_Component_Remove, "Remove( self: Craft::Component )" },
  { dao_Craft_Component_GetID, "GetID( self: Craft::Component )=>int" },
  { dao_Craft_Component_GetNode, "GetNode( self: Craft::Component )=>Craft::Node|none" },
  { dao_Craft_Component_GetScene, "GetScene( self: Craft::Component )=>Craft::Scene|none" },
  { dao_Craft_Component_IsEnabled, "IsEnabled( self: Craft::Component )=>bool" },
  { dao_Craft_Component_IsEnabledEffective, "IsEnabledEffective( self: Craft::Component )=>bool" },
  { dao_Craft_Component_GetComponent, "GetComponent( self: Craft::Component, type: Craft::StringHash )=>Craft::Component|none" },
  { dao_Craft_Component_PrepareNetworkUpdate, "PrepareNetworkUpdate( self: Craft::Component )" },
  { NULL, NULL }
};
static void Dao_Craft_Component_Delete( DaoValue *self )
{
	Craft::Component *obj = (Craft::Component*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Component_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Component *self = (DaoCxx_Craft_Component*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Component_Craft_Animatable( void *data, int down )
{
	if( down ) return static_cast<Craft::Component*>((Craft::Animatable*)data);
	return dynamic_cast<Craft::Animatable*>((Craft::Component*)data);
}

static DaoTypeCore Craft_Component_Core = 
{
  "Craft::Component",
  sizeof(Craft::Component),
  { dao_Craft_Animatable_Core, NULL },
  { dao_cast_Craft_Component_Craft_Animatable,NULL },
  dao_Craft_Component_Nums,
  dao_Craft_Component_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Component_Delete,
  Dao_Craft_Component_HandleGC
};
DaoTypeCore *dao_Craft_Component_Core = & Craft_Component_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_Component_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Component *_self = new DaoCxx_Craft_Component( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::Component::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_MarkNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  self->MarkNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_SetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetEnabled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_Remove( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  self->Remove(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_GetID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  unsigned int _GetID = self->GetID(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetID );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_GetNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  Craft::Node* dao_Craft_Component_GetNode = self->GetNode(  );
  if( dao_Craft_Component_GetNode ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Component_GetNode, dao_Craft_Node_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  Craft::Scene* dao_Craft_Component_GetScene = self->GetScene(  );
  if( dao_Craft_Component_GetScene ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Component_GetScene, dao_Craft_Scene_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_IsEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  bool _IsEnabled = self->IsEnabled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEnabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_IsEnabledEffective( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  bool _IsEnabledEffective = self->IsEnabledEffective(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEnabledEffective );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_GetComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );
  Craft::StringHash* type = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  Craft::Component* dao_Craft_Component_GetComponent = self->GetComponent( *type );
  if( dao_Craft_Component_GetComponent ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Component_GetComponent, dao_Craft_Component_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Component_PrepareNetworkUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Component* self = (Craft::Component*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Component_Core );

  self->PrepareNetworkUpdate(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Camera_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Camera_Camera_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetNearClip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetFarClip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetFov( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetOrthoSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetOrthoSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetZoom( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetViewOverrideFlags( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetOrthographic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetAutoAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetProjectionOffset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetUseReflection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetReflectionPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetUseClipping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetFlipVertical( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFarClip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetNearClip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFov( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetOrthoSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetZoom( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetViewOverrideFlags( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_IsOrthographic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetAutoAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFrustum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetProjection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFrustumSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetHalfViewSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetSplitFrustum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetViewSpaceFrustum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetViewSpaceSplitFrustum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetScreenRay( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_WorldToScreenPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_ScreenToWorldPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetProjectionOffset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetReflectionPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetUseReflection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetUseClipping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFlipVertical( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetReverseCulling( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetDistanceSquared( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetFaceCameraRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetEffectiveWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_IsProjectionValid( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetAspectRatioInternal( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetOrthoSizeAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetReflectionPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetReflectionPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_SetClipPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Camera_GetClipPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Camera_Meths[] = 
{
  { dao_Craft_Camera_Camera_dao_2, "Camera(  )=>Craft::Camera" },
  { dao_Craft_Camera_SetNearClip, "SetNearClip( self: Craft::Camera, nearClip: float )" },
  { dao_Craft_Camera_SetFarClip, "SetFarClip( self: Craft::Camera, farClip: float )" },
  { dao_Craft_Camera_SetFov, "SetFov( self: Craft::Camera, fov: float )" },
  { dao_Craft_Camera_SetOrthoSize, "SetOrthoSize( self: Craft::Camera, orthoSize: float )" },
  { dao_Craft_Camera_SetOrthoSize_dao_2, "SetOrthoSize( self: Craft::Camera, orthoSize: Craft::Vector2 )" },
  { dao_Craft_Camera_SetAspectRatio, "SetAspectRatio( self: Craft::Camera, aspectRatio: float )" },
  { dao_Craft_Camera_SetFillMode, "SetFillMode( self: Craft::Camera, mode: int )" },
  { dao_Craft_Camera_SetZoom, "SetZoom( self: Craft::Camera, zoom: float )" },
  { dao_Craft_Camera_SetLodBias, "SetLodBias( self: Craft::Camera, bias: float )" },
  { dao_Craft_Camera_SetViewMask, "SetViewMask( self: Craft::Camera, mask: int )" },
  { dao_Craft_Camera_SetViewOverrideFlags, "SetViewOverrideFlags( self: Craft::Camera, flags: int )" },
  { dao_Craft_Camera_SetOrthographic, "SetOrthographic( self: Craft::Camera, enable: bool )" },
  { dao_Craft_Camera_SetAutoAspectRatio, "SetAutoAspectRatio( self: Craft::Camera, enable: bool )" },
  { dao_Craft_Camera_SetProjectionOffset, "SetProjectionOffset( self: Craft::Camera, offset: Craft::Vector2 )" },
  { dao_Craft_Camera_SetUseReflection, "SetUseReflection( self: Craft::Camera, enable: bool )" },
  { dao_Craft_Camera_SetReflectionPlane, "SetReflectionPlane( self: Craft::Camera, plane: Craft::Plane )" },
  { dao_Craft_Camera_SetUseClipping, "SetUseClipping( self: Craft::Camera, enable: bool )" },
  { dao_Craft_Camera_SetClipPlane, "SetClipPlane( self: Craft::Camera, plane: Craft::Plane )" },
  { dao_Craft_Camera_SetFlipVertical, "SetFlipVertical( self: Craft::Camera, enable: bool )" },
  { dao_Craft_Camera_GetFarClip, "GetFarClip( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetNearClip, "GetNearClip( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetFov, "GetFov( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetOrthoSize, "GetOrthoSize( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetAspectRatio, "GetAspectRatio( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetZoom, "GetZoom( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetLodBias, "GetLodBias( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetViewMask, "GetViewMask( self: Craft::Camera )=>int" },
  { dao_Craft_Camera_GetViewOverrideFlags, "GetViewOverrideFlags( self: Craft::Camera )=>int" },
  { dao_Craft_Camera_GetFillMode, "GetFillMode( self: Craft::Camera )=>int" },
  { dao_Craft_Camera_IsOrthographic, "IsOrthographic( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_GetAutoAspectRatio, "GetAutoAspectRatio( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_GetFrustum, "GetFrustum( self: Craft::Camera )=>Craft::Frustum" },
  { dao_Craft_Camera_GetProjection, "GetProjection( self: Craft::Camera )=>Craft::Matrix4" },
  { dao_Craft_Camera_GetView, "GetView( self: Craft::Camera )=>Craft::Matrix3x4" },
  { dao_Craft_Camera_GetFrustumSize, "GetFrustumSize( self: Craft::Camera, near: Craft::Vector3, far: Craft::Vector3 )" },
  { dao_Craft_Camera_GetHalfViewSize, "GetHalfViewSize( self: Craft::Camera )=>float" },
  { dao_Craft_Camera_GetSplitFrustum, "GetSplitFrustum( self: Craft::Camera, nearClip: float, farClip: float )=>Craft::Frustum" },
  { dao_Craft_Camera_GetViewSpaceFrustum, "GetViewSpaceFrustum( self: Craft::Camera )=>Craft::Frustum" },
  { dao_Craft_Camera_GetViewSpaceSplitFrustum, "GetViewSpaceSplitFrustum( self: Craft::Camera, nearClip: float, farClip: float )=>Craft::Frustum" },
  { dao_Craft_Camera_GetScreenRay, "GetScreenRay( self: Craft::Camera, x: float, y: float )=>Craft::Ray" },
  { dao_Craft_Camera_WorldToScreenPoint, "WorldToScreenPoint( self: Craft::Camera, worldPos: Craft::Vector3 )=>Craft::Vector2" },
  { dao_Craft_Camera_ScreenToWorldPoint, "ScreenToWorldPoint( self: Craft::Camera, screenPos: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Camera_GetProjectionOffset, "GetProjectionOffset( self: Craft::Camera )=>Craft::Vector2" },
  { dao_Craft_Camera_GetReflectionPlane, "GetReflectionPlane( self: Craft::Camera )=>Craft::Plane" },
  { dao_Craft_Camera_GetClipPlane, "GetClipPlane( self: Craft::Camera )=>Craft::Plane" },
  { dao_Craft_Camera_GetUseReflection, "GetUseReflection( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_GetUseClipping, "GetUseClipping( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_GetFlipVertical, "GetFlipVertical( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_GetReverseCulling, "GetReverseCulling( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_GetDistance, "GetDistance( self: Craft::Camera, worldPos: Craft::Vector3 )=>float" },
  { dao_Craft_Camera_GetDistanceSquared, "GetDistanceSquared( self: Craft::Camera, worldPos: Craft::Vector3 )=>float" },
  { dao_Craft_Camera_GetLodDistance, "GetLodDistance( self: Craft::Camera, distance: float, scale: float, bias: float )=>float" },
  { dao_Craft_Camera_GetFaceCameraRotation, "GetFaceCameraRotation( self: Craft::Camera, position: Craft::Vector3, rotation: Craft::Quaternion, mode: int )=>Craft::Quaternion" },
  { dao_Craft_Camera_GetEffectiveWorldTransform, "GetEffectiveWorldTransform( self: Craft::Camera )=>Craft::Matrix3x4" },
  { dao_Craft_Camera_IsProjectionValid, "IsProjectionValid( self: Craft::Camera )=>bool" },
  { dao_Craft_Camera_SetAspectRatioInternal, "SetAspectRatioInternal( self: Craft::Camera, aspectRatio: float )" },
  { dao_Craft_Camera_SetOrthoSizeAttr, "SetOrthoSizeAttr( self: Craft::Camera, orthoSize: float )" },
  { dao_Craft_Camera_SetReflectionPlaneAttr, "SetReflectionPlaneAttr( self: Craft::Camera, value: Craft::Vector4 )" },
  { dao_Craft_Camera_GetReflectionPlaneAttr, "GetReflectionPlaneAttr( self: Craft::Camera )=>Craft::Vector4" },
  { dao_Craft_Camera_SetClipPlaneAttr, "SetClipPlaneAttr( self: Craft::Camera, value: Craft::Vector4 )" },
  { dao_Craft_Camera_GetClipPlaneAttr, "GetClipPlaneAttr( self: Craft::Camera )=>Craft::Vector4" },
  { NULL, NULL }
};
static void Dao_Craft_Camera_Delete( DaoValue *self )
{
	Craft::Camera *obj = (Craft::Camera*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Camera_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Camera *self = (DaoCxx_Craft_Camera*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Camera_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::Camera*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::Camera*)data);
}

static DaoTypeCore Craft_Camera_Core = 
{
  "Craft::Camera",
  sizeof(Craft::Camera),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_Camera_Craft_Component,NULL },
  dao_Craft_Camera_Nums,
  dao_Craft_Camera_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Camera_Delete,
  Dao_Craft_Camera_HandleGC
};
DaoTypeCore *dao_Craft_Camera_Core = & Craft_Camera_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_Camera_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Camera *_self = new DaoCxx_Craft_Camera( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetNearClip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float nearClip = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetNearClip( nearClip );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetFarClip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float farClip = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFarClip( farClip );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetFov( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float fov = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFov( fov );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetOrthoSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float orthoSize = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetOrthoSize( orthoSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetOrthoSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector2* orthoSize = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetOrthoSize( *orthoSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float aspectRatio = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAspectRatio( aspectRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::FillMode mode = (Craft::FillMode) DaoValue_TryGetInteger( _p[1] );

  self->SetFillMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetZoom( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float zoom = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetZoom( zoom );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float bias = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLodBias( bias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetViewMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetViewOverrideFlags( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  unsigned int flags = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetViewOverrideFlags( flags );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetOrthographic( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetOrthographic( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetAutoAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAutoAspectRatio( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetProjectionOffset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector2* offset = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetProjectionOffset( *offset );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetUseReflection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUseReflection( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetReflectionPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Plane* plane = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Plane_Core );

  self->SetReflectionPlane( *plane );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetUseClipping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUseClipping( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Plane* plane = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Plane_Core );

  self->SetClipPlane( *plane );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetFlipVertical( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetFlipVertical( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFarClip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetFarClip = self->GetFarClip(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFarClip );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetNearClip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetNearClip = self->GetNearClip(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetNearClip );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFov( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetFov = self->GetFov(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFov );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetOrthoSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetOrthoSize = self->GetOrthoSize(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetOrthoSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetAspectRatio = self->GetAspectRatio(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAspectRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetZoom( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetZoom = self->GetZoom(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetZoom );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetLodBias = self->GetLodBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLodBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  unsigned int _GetViewMask = self->GetViewMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetViewMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetViewOverrideFlags( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  unsigned int _GetViewOverrideFlags = self->GetViewOverrideFlags(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetViewOverrideFlags );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  Craft::FillMode _GetFillMode = self->GetFillMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFillMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_IsOrthographic( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _IsOrthographic = self->IsOrthographic(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsOrthographic );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetAutoAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _GetAutoAspectRatio = self->GetAutoAspectRatio(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAutoAspectRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFrustum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  const Craft::Frustum& _GetFrustum = self->GetFrustum(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetFrustum, dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetProjection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  Craft::Matrix4 _GetProjection = self->GetProjection(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix4( _GetProjection ), dao_Craft_Matrix4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  const Craft::Matrix3x4& _GetView = self->GetView(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetView, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFrustumSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector3* near = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* far = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->GetFrustumSize( *near, *far );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetHalfViewSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  float _GetHalfViewSize = self->GetHalfViewSize(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetHalfViewSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetSplitFrustum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float nearClip = (float) DaoValue_TryGetFloat( _p[1] );
  float farClip = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Frustum _GetSplitFrustum = self->GetSplitFrustum( nearClip, farClip );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Frustum( _GetSplitFrustum ), dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetViewSpaceFrustum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  Craft::Frustum _GetViewSpaceFrustum = self->GetViewSpaceFrustum(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Frustum( _GetViewSpaceFrustum ), dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetViewSpaceSplitFrustum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float nearClip = (float) DaoValue_TryGetFloat( _p[1] );
  float farClip = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Frustum _GetViewSpaceSplitFrustum = self->GetViewSpaceSplitFrustum( nearClip, farClip );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Frustum( _GetViewSpaceSplitFrustum ), dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetScreenRay( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float x = (float) DaoValue_TryGetFloat( _p[1] );
  float y = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Ray _GetScreenRay = self->GetScreenRay( x, y );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Ray( _GetScreenRay ), dao_Craft_Ray_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_WorldToScreenPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector3* worldPos = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector2 _WorldToScreenPoint = self->WorldToScreenPoint( *worldPos );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _WorldToScreenPoint ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_ScreenToWorldPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector3* screenPos = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _ScreenToWorldPoint = self->ScreenToWorldPoint( *screenPos );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ScreenToWorldPoint ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetProjectionOffset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  const Craft::Vector2& _GetProjectionOffset = self->GetProjectionOffset(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetProjectionOffset, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetReflectionPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  const Craft::Plane& _GetReflectionPlane = self->GetReflectionPlane(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetReflectionPlane, dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  const Craft::Plane& _GetClipPlane = self->GetClipPlane(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetClipPlane, dao_Craft_Plane_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetUseReflection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _GetUseReflection = self->GetUseReflection(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUseReflection );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetUseClipping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _GetUseClipping = self->GetUseClipping(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUseClipping );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFlipVertical( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _GetFlipVertical = self->GetFlipVertical(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetFlipVertical );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetReverseCulling( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _GetReverseCulling = self->GetReverseCulling(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetReverseCulling );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector3* worldPos = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _GetDistance = self->GetDistance( *worldPos );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetDistanceSquared( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector3* worldPos = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _GetDistanceSquared = self->GetDistanceSquared( *worldPos );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDistanceSquared );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );
  float scale = (float) DaoValue_TryGetFloat( _p[2] );
  float bias = (float) DaoValue_TryGetFloat( _p[3] );

  float _GetLodDistance = self->GetLodDistance( distance, scale, bias );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLodDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetFaceCameraRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );
  Craft::FaceCameraMode mode = (Craft::FaceCameraMode) DaoValue_TryGetInteger( _p[3] );

  Craft::Quaternion _GetFaceCameraRotation = self->GetFaceCameraRotation( *position, *rotation, mode );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _GetFaceCameraRotation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetEffectiveWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  Craft::Matrix3x4 _GetEffectiveWorldTransform = self->GetEffectiveWorldTransform(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Matrix3x4( _GetEffectiveWorldTransform ), dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_IsProjectionValid( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  bool _IsProjectionValid = self->IsProjectionValid(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsProjectionValid );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetAspectRatioInternal( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float aspectRatio = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAspectRatioInternal( aspectRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetOrthoSizeAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  float orthoSize = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetOrthoSizeAttr( orthoSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetReflectionPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector4* value = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  self->SetReflectionPlaneAttr( *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetReflectionPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  Craft::Vector4 _GetReflectionPlaneAttr = self->GetReflectionPlaneAttr(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _GetReflectionPlaneAttr ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_SetClipPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );
  Craft::Vector4* value = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  self->SetClipPlaneAttr( *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Camera_GetClipPlaneAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Camera* self = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Camera_Core );

  Craft::Vector4 _GetClipPlaneAttr = self->GetClipPlaneAttr(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector4( _GetClipPlaneAttr ), dao_Craft_Vector4_Core );
}
/* DaoCraftEngineMod.cpp */
static DaoTypeCore Craft_Connection_Core = 
{
  "Craft::Connection",
  0,
  { NULL },
  { NULL },
  NULL,
  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL
};

DaoTypeCore *dao_Craft_Connection_Core = & Craft_Connection_Core;
/* DaoCraftEngineMod.cpp */
static DaoTypeCore Craft_SceneResolver_Core = 
{
  "Craft::SceneResolver",
  0,
  { NULL },
  { NULL },
  NULL,
  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL
};

DaoTypeCore *dao_Craft_SceneResolver_Core = & Craft_SceneResolver_Core;
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ScriptComponent_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ScriptComponent_ScriptComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ScriptComponent_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ScriptComponent_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ScriptComponent_GetComponentClassName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ScriptComponent_GetComponentFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ScriptComponent_GetFieldValues( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ScriptComponent_Meths[] = 
{
  { dao_Craft_ScriptComponent_ScriptComponent_dao_2, "ScriptComponent(  )=>Craft::ScriptComponent" },
  { dao_Craft_ScriptComponent_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_ScriptComponent_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_ScriptComponent_GetComponentClassName, "GetComponentClassName( self: Craft::ScriptComponent )=>string" },
  { dao_Craft_ScriptComponent_GetComponentFile, "GetComponentFile( self: Craft::ScriptComponent )=>Craft::ScriptComponentFile" },
  { dao_Craft_ScriptComponent_GetFieldValues, "GetFieldValues( self: Craft::ScriptComponent )=>Craft::VariantMap" },
  { NULL, NULL }
};
static void Dao_Craft_ScriptComponent_Delete( DaoValue *self )
{
	Craft::ScriptComponent *obj = (Craft::ScriptComponent*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ScriptComponent_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ScriptComponent *self = (DaoCxx_Craft_ScriptComponent*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ScriptComponent_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::ScriptComponent*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::ScriptComponent*)data);
}

static DaoTypeCore Craft_ScriptComponent_Core = 
{
  "Craft::ScriptComponent",
  sizeof(Craft::ScriptComponent),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_ScriptComponent_Craft_Component,NULL },
  dao_Craft_ScriptComponent_Nums,
  dao_Craft_ScriptComponent_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ScriptComponent_Delete,
  Dao_Craft_ScriptComponent_HandleGC
};
DaoTypeCore *dao_Craft_ScriptComponent_Core = & Craft_ScriptComponent_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponent_ScriptComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_ScriptComponent *_self = new DaoCxx_Craft_ScriptComponent( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponent_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::ScriptComponent::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponent_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::ScriptComponent::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponent_GetComponentClassName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ScriptComponent* self = (Craft::ScriptComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ScriptComponent_Core );

  const Craft::String& _GetComponentClassName = self->GetComponentClassName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetComponentClassName.CString(), _GetComponentClassName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponent_GetComponentFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ScriptComponent* self = (Craft::ScriptComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ScriptComponent_Core );

  Craft::ScriptComponentFile* _GetComponentFile = self->GetComponentFile(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetComponentFile, dao_Craft_ScriptComponentFile_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponent_GetFieldValues( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ScriptComponent* self = (Craft::ScriptComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ScriptComponent_Core );

  Craft::VariantMap& _GetFieldValues = self->GetFieldValues(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetFieldValues, dao_Craft_VariantMap_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_DaoComponent_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_DaoComponent_DaoComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_MatchScriptName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_SetUpdateEventMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_GetUpdateEventMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_IsDelayedStartCalled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_SetDestroyed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_GetComponentFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_SetComponentFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponent_GetComponentClassName( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_DaoComponent_SetData( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_DaoComponent_GetData( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_DaoComponent_Meths[] = 
{
  { dao_Craft_DaoComponent_DaoComponent_dao_2, "DaoComponent(  )=>Craft::DaoComponent" },
  { dao_Craft_DaoComponent_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_DaoComponent_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_DaoComponent_Load, "Load( self: Craft::DaoComponent, source: Craft::Deserializer )=>bool" },
  { dao_Craft_DaoComponent_ApplyAttributes, "ApplyAttributes( self: Craft::DaoComponent )" },
  { dao_Craft_DaoComponent_MatchScriptName, "MatchScriptName( self: Craft::DaoComponent, path: string )=>bool" },
  { dao_Craft_DaoComponent_OnSetEnabled, "OnSetEnabled( self: Craft::DaoComponent )" },
  { dao_Craft_DaoComponent_SetUpdateEventMask, "SetUpdateEventMask( self: Craft::DaoComponent, mask: int )" },
  { dao_Craft_DaoComponent_GetUpdateEventMask, "GetUpdateEventMask( self: Craft::DaoComponent )=>int" },
  { dao_Craft_DaoComponent_IsDelayedStartCalled, "IsDelayedStartCalled( self: Craft::DaoComponent )=>bool" },
  { dao_Craft_DaoComponent_SetDestroyed, "SetDestroyed( self: Craft::DaoComponent )" },
  { dao_Craft_DaoComponent_GetComponentFile, "GetComponentFile( self: Craft::DaoComponent )=>Craft::ScriptComponentFile" },
  { dao_Craft_DaoComponent_SetComponentFile, "SetComponentFile( self: Craft::DaoComponent, cfile: Craft::DaoComponentFile )" },
  { dao_Craft_DaoComponent_GetComponentClassName, "GetComponentClassName( self: Craft::DaoComponent )=>string" },
  { dao_Craft_DaoComponent_SetData, "SetData( self: Craft::DaoComponent, key: string, data :any )" },
  { dao_Craft_DaoComponent_GetData, "GetData( self: Craft::DaoComponent, key: string )=>any" },
  { NULL, NULL }
};
static void Dao_Craft_DaoComponent_Delete( DaoValue *self )
{
	Craft::DaoComponent *obj = (Craft::DaoComponent*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_DaoComponent_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_DaoComponent *self = (DaoCxx_Craft_DaoComponent*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_DaoComponent_Craft_ScriptComponent( void *data, int down )
{
	if( down ) return static_cast<Craft::DaoComponent*>((Craft::ScriptComponent*)data);
	return dynamic_cast<Craft::ScriptComponent*>((Craft::DaoComponent*)data);
}

static DaoTypeCore Craft_DaoComponent_Core = 
{
  "Craft::DaoComponent",
  sizeof(Craft::DaoComponent),
  { dao_Craft_ScriptComponent_Core, NULL },
  { dao_cast_Craft_DaoComponent_Craft_ScriptComponent,NULL },
  dao_Craft_DaoComponent_Nums,
  dao_Craft_DaoComponent_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_DaoComponent_Delete,
  Dao_Craft_DaoComponent_HandleGC
};
DaoTypeCore *dao_Craft_DaoComponent_Core = & Craft_DaoComponent_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_DaoComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_DaoComponent *_self = new DaoCxx_Craft_DaoComponent( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::DaoComponent::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::DaoComponent::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_MatchScriptName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );
  DString *__str_path = DaoValue_TryGetString( _p[1] );
  Craft::String path( DString_GetData( __str_path ), DString_Size( __str_path ) );

  bool _MatchScriptName = self->MatchScriptName( path );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _MatchScriptName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_SetUpdateEventMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );
  unsigned char mask = (unsigned char) DaoValue_TryGetInteger( _p[1] );

  self->SetUpdateEventMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_GetUpdateEventMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  unsigned char _GetUpdateEventMask = self->GetUpdateEventMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUpdateEventMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_IsDelayedStartCalled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  bool _IsDelayedStartCalled = self->IsDelayedStartCalled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsDelayedStartCalled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_SetDestroyed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  self->SetDestroyed(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_GetComponentFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  Craft::ScriptComponentFile* _GetComponentFile = self->GetComponentFile(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetComponentFile, dao_Craft_ScriptComponentFile_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_SetComponentFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );
  Craft::DaoComponentFile* cfile = (Craft::DaoComponentFile*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_DaoComponentFile_Core );

  self->SetComponentFile( cfile );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponent_GetComponentClassName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponent* self = (Craft::DaoComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponent_Core );

  const Craft::String& _GetComponentClassName = self->GetComponentClassName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetComponentClassName.CString(), _GetComponentClassName.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationController_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationController_AnimationController_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_Play( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_PlayExclusive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_Stop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_StopLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_StopAll( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_Fade( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_FadeOthers( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetLooped( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetAutoFade( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_SetRemoveOnCompletion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_IsPlaying( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_IsFadingIn( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_IsFadingOut( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_IsAtEnd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetStartBoneName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_IsLooped( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetFadeTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetFadeTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetAutoFade( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetRemoveOnCompletion( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationController_GetAnimationState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationController_Meths[] = 
{
  { dao_Craft_AnimationController_AnimationController_dao_2, "AnimationController(  )=>Craft::AnimationController" },
  { dao_Craft_AnimationController_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_AnimationController_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_AnimationController_OnSetEnabled, "OnSetEnabled( self: Craft::AnimationController )" },
  { dao_Craft_AnimationController_Update, "Update( self: Craft::AnimationController, timeStep: float )" },
  { dao_Craft_AnimationController_Play, "Play( self: Craft::AnimationController, name: string, layer: int, looped: bool, fadeInTime: float =0.00 )=>bool" },
  { dao_Craft_AnimationController_PlayExclusive, "PlayExclusive( self: Craft::AnimationController, name: string, layer: int, looped: bool, fadeTime: float =0.00 )=>bool" },
  { dao_Craft_AnimationController_Stop, "Stop( self: Craft::AnimationController, name: string, fadeOutTime: float =0.00 )=>bool" },
  { dao_Craft_AnimationController_StopLayer, "StopLayer( self: Craft::AnimationController, layer: int, fadeOutTime: float =0.00 )" },
  { dao_Craft_AnimationController_StopAll, "StopAll( self: Craft::AnimationController, fadeTime: float =0.00 )" },
  { dao_Craft_AnimationController_Fade, "Fade( self: Craft::AnimationController, name: string, targetWeight: float, fadeTime: float )=>bool" },
  { dao_Craft_AnimationController_FadeOthers, "FadeOthers( self: Craft::AnimationController, name: string, targetWeight: float, fadeTime: float )=>bool" },
  { dao_Craft_AnimationController_SetLayer, "SetLayer( self: Craft::AnimationController, name: string, layer: int )=>bool" },
  { dao_Craft_AnimationController_SetStartBone, "SetStartBone( self: Craft::AnimationController, name: string, startBoneName: string )=>bool" },
  { dao_Craft_AnimationController_SetTime, "SetTime( self: Craft::AnimationController, name: string, time: float )=>bool" },
  { dao_Craft_AnimationController_SetWeight, "SetWeight( self: Craft::AnimationController, name: string, weight: float )=>bool" },
  { dao_Craft_AnimationController_SetLooped, "SetLooped( self: Craft::AnimationController, name: string, enable: bool )=>bool" },
  { dao_Craft_AnimationController_SetSpeed, "SetSpeed( self: Craft::AnimationController, name: string, speed: float )=>bool" },
  { dao_Craft_AnimationController_SetAutoFade, "SetAutoFade( self: Craft::AnimationController, name: string, fadeOutTime: float )=>bool" },
  { dao_Craft_AnimationController_SetRemoveOnCompletion, "SetRemoveOnCompletion( self: Craft::AnimationController, name: string, removeOnCompletion: bool )=>bool" },
  { dao_Craft_AnimationController_IsPlaying, "IsPlaying( self: Craft::AnimationController, name: string )=>bool" },
  { dao_Craft_AnimationController_IsFadingIn, "IsFadingIn( self: Craft::AnimationController, name: string )=>bool" },
  { dao_Craft_AnimationController_IsFadingOut, "IsFadingOut( self: Craft::AnimationController, name: string )=>bool" },
  { dao_Craft_AnimationController_IsAtEnd, "IsAtEnd( self: Craft::AnimationController, name: string )=>bool" },
  { dao_Craft_AnimationController_GetLayer, "GetLayer( self: Craft::AnimationController, name: string )=>int" },
  { dao_Craft_AnimationController_GetStartBone, "GetStartBone( self: Craft::AnimationController, name: string )=>Craft::Bone" },
  { dao_Craft_AnimationController_GetStartBoneName, "GetStartBoneName( self: Craft::AnimationController, name: string )=>string" },
  { dao_Craft_AnimationController_GetTime, "GetTime( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_GetWeight, "GetWeight( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_IsLooped, "IsLooped( self: Craft::AnimationController, name: string )=>bool" },
  { dao_Craft_AnimationController_GetLength, "GetLength( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_GetSpeed, "GetSpeed( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_GetFadeTarget, "GetFadeTarget( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_GetFadeTime, "GetFadeTime( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_GetAutoFade, "GetAutoFade( self: Craft::AnimationController, name: string )=>float" },
  { dao_Craft_AnimationController_GetRemoveOnCompletion, "GetRemoveOnCompletion( self: Craft::AnimationController, name: string )=>bool" },
  { dao_Craft_AnimationController_GetAnimationState, "GetAnimationState( self: Craft::AnimationController, name: string )=>Craft::AnimationState" },
  { dao_Craft_AnimationController_GetAnimationState_dao_2, "GetAnimationState( self: Craft::AnimationController, nameHash: Craft::StringHash )=>Craft::AnimationState" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationController_Delete( DaoValue *self )
{
	Craft::AnimationController *obj = (Craft::AnimationController*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_AnimationController_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_AnimationController *self = (DaoCxx_Craft_AnimationController*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_AnimationController_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::AnimationController*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::AnimationController*)data);
}

static DaoTypeCore Craft_AnimationController_Core = 
{
  "Craft::AnimationController",
  sizeof(Craft::AnimationController),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_AnimationController_Craft_Component,NULL },
  dao_Craft_AnimationController_Nums,
  dao_Craft_AnimationController_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_AnimationController_Delete,
  Dao_Craft_AnimationController_HandleGC
};
DaoTypeCore *dao_Craft_AnimationController_Core = & Craft_AnimationController_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_AnimationController_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_AnimationController *_self = new DaoCxx_Craft_AnimationController( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::AnimationController::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::AnimationController::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_Play( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  unsigned char layer = (unsigned char) DaoValue_TryGetInteger( _p[2] );
  bool looped = (bool) DaoValue_TryGetBoolean( _p[3] );
  float fadeInTime = (float) DaoValue_TryGetFloat( _p[4] );

  bool _Play = self->Play( name, layer, looped, fadeInTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Play );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_PlayExclusive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  unsigned char layer = (unsigned char) DaoValue_TryGetInteger( _p[2] );
  bool looped = (bool) DaoValue_TryGetBoolean( _p[3] );
  float fadeTime = (float) DaoValue_TryGetFloat( _p[4] );

  bool _PlayExclusive = self->PlayExclusive( name, layer, looped, fadeTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _PlayExclusive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_Stop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float fadeOutTime = (float) DaoValue_TryGetFloat( _p[2] );

  bool _Stop = self->Stop( name, fadeOutTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Stop );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_StopLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  unsigned char layer = (unsigned char) DaoValue_TryGetInteger( _p[1] );
  float fadeOutTime = (float) DaoValue_TryGetFloat( _p[2] );

  self->StopLayer( layer, fadeOutTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_StopAll( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  float fadeTime = (float) DaoValue_TryGetFloat( _p[1] );

  self->StopAll( fadeTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_Fade( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float targetWeight = (float) DaoValue_TryGetFloat( _p[2] );
  float fadeTime = (float) DaoValue_TryGetFloat( _p[3] );

  bool _Fade = self->Fade( name, targetWeight, fadeTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Fade );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_FadeOthers( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float targetWeight = (float) DaoValue_TryGetFloat( _p[2] );
  float fadeTime = (float) DaoValue_TryGetFloat( _p[3] );

  bool _FadeOthers = self->FadeOthers( name, targetWeight, fadeTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _FadeOthers );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  unsigned char layer = (unsigned char) DaoValue_TryGetInteger( _p[2] );

  bool _SetLayer = self->SetLayer( name, layer );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetLayer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  DString *__str_startBoneName = DaoValue_TryGetString( _p[2] );
  Craft::String startBoneName( DString_GetData( __str_startBoneName ), DString_Size( __str_startBoneName ) );

  bool _SetStartBone = self->SetStartBone( name, startBoneName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetStartBone );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float time = (float) DaoValue_TryGetFloat( _p[2] );

  bool _SetTime = self->SetTime( name, time );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );

  bool _SetWeight = self->SetWeight( name, weight );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetLooped( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _SetLooped = self->SetLooped( name, enable );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetLooped );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float speed = (float) DaoValue_TryGetFloat( _p[2] );

  bool _SetSpeed = self->SetSpeed( name, speed );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetAutoFade( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float fadeOutTime = (float) DaoValue_TryGetFloat( _p[2] );

  bool _SetAutoFade = self->SetAutoFade( name, fadeOutTime );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetAutoFade );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_SetRemoveOnCompletion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  bool removeOnCompletion = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _SetRemoveOnCompletion = self->SetRemoveOnCompletion( name, removeOnCompletion );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetRemoveOnCompletion );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_IsPlaying( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _IsPlaying = self->IsPlaying( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsPlaying );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_IsFadingIn( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _IsFadingIn = self->IsFadingIn( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsFadingIn );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_IsFadingOut( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _IsFadingOut = self->IsFadingOut( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsFadingOut );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_IsAtEnd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _IsAtEnd = self->IsAtEnd( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsAtEnd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  unsigned char _GetLayer = self->GetLayer( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Bone* _GetStartBone = self->GetStartBone( name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetStartBone, dao_Craft_Bone_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetStartBoneName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  const Craft::String& _GetStartBoneName = self->GetStartBoneName( name );
  DaoProcess_PutBytes( _proc, (char*) _GetStartBoneName.CString(), _GetStartBoneName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetTime = self->GetTime( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetWeight = self->GetWeight( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_IsLooped( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _IsLooped = self->IsLooped( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsLooped );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetLength = self->GetLength( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLength );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetSpeed = self->GetSpeed( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetFadeTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetFadeTarget = self->GetFadeTarget( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFadeTarget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetFadeTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetFadeTime = self->GetFadeTime( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFadeTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetAutoFade( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetAutoFade = self->GetAutoFade( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAutoFade );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetRemoveOnCompletion( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  bool _GetRemoveOnCompletion = self->GetRemoveOnCompletion( name );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetRemoveOnCompletion );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::AnimationState* _GetAnimationState = self->GetAnimationState( name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationController_GetAnimationState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationController* self = (Craft::AnimationController*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationController_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  Craft::AnimationState* _GetAnimationState = self->GetAnimationState( *nameHash );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Drawable_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Drawable_Drawable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetOccluder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetOccludee( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_MarkForUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetWorldBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetDrawableFlags( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_IsOccluder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_IsOccludee( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_IsInView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_IsInView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetSortValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetMinMaxZ( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_MarkInView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_LimitLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_LimitVertexLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_SetBasePass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetSortValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_HasBasePass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetFirstLight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetMinZ( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_GetMaxZ( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_AddLight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Drawable_AddVertexLight( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Drawable_Meths[] = 
{
  { dao_Craft_Drawable_Drawable_dao_2, "Drawable( drawableFlags: int =0 )=>Craft::Drawable" },
  { dao_Craft_Drawable_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Drawable_OnSetEnabled, "OnSetEnabled( self: Craft::Drawable )" },
  { dao_Craft_Drawable_GetLodGeometry, "GetLodGeometry( self: Craft::Drawable, batchIndex: int, level: int )=>Craft::Geometry" },
  { dao_Craft_Drawable_SetDrawDistance, "SetDrawDistance( self: Craft::Drawable, distance: float )" },
  { dao_Craft_Drawable_SetShadowDistance, "SetShadowDistance( self: Craft::Drawable, distance: float )" },
  { dao_Craft_Drawable_SetLodBias, "SetLodBias( self: Craft::Drawable, bias: float )" },
  { dao_Craft_Drawable_SetViewMask, "SetViewMask( self: Craft::Drawable, mask: int )" },
  { dao_Craft_Drawable_SetLightMask, "SetLightMask( self: Craft::Drawable, mask: int )" },
  { dao_Craft_Drawable_SetShadowMask, "SetShadowMask( self: Craft::Drawable, mask: int )" },
  { dao_Craft_Drawable_SetZoneMask, "SetZoneMask( self: Craft::Drawable, mask: int )" },
  { dao_Craft_Drawable_SetMaxLights, "SetMaxLights( self: Craft::Drawable, num: int )" },
  { dao_Craft_Drawable_SetCastShadows, "SetCastShadows( self: Craft::Drawable, enable: bool )" },
  { dao_Craft_Drawable_SetOccluder, "SetOccluder( self: Craft::Drawable, enable: bool )" },
  { dao_Craft_Drawable_SetOccludee, "SetOccludee( self: Craft::Drawable, enable: bool )" },
  { dao_Craft_Drawable_MarkForUpdate, "MarkForUpdate( self: Craft::Drawable )" },
  { dao_Craft_Drawable_GetBoundingBox, "GetBoundingBox( self: Craft::Drawable )=>Craft::BoundingBox" },
  { dao_Craft_Drawable_GetWorldBoundingBox, "GetWorldBoundingBox( self: Craft::Drawable )=>Craft::BoundingBox" },
  { dao_Craft_Drawable_GetDrawableFlags, "GetDrawableFlags( self: Craft::Drawable )=>int" },
  { dao_Craft_Drawable_GetDrawDistance, "GetDrawDistance( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_GetShadowDistance, "GetShadowDistance( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_GetLodBias, "GetLodBias( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_GetViewMask, "GetViewMask( self: Craft::Drawable )=>int" },
  { dao_Craft_Drawable_GetLightMask, "GetLightMask( self: Craft::Drawable )=>int" },
  { dao_Craft_Drawable_GetShadowMask, "GetShadowMask( self: Craft::Drawable )=>int" },
  { dao_Craft_Drawable_GetZoneMask, "GetZoneMask( self: Craft::Drawable )=>int" },
  { dao_Craft_Drawable_GetMaxLights, "GetMaxLights( self: Craft::Drawable )=>int" },
  { dao_Craft_Drawable_GetCastShadows, "GetCastShadows( self: Craft::Drawable )=>bool" },
  { dao_Craft_Drawable_IsOccluder, "IsOccluder( self: Craft::Drawable )=>bool" },
  { dao_Craft_Drawable_IsOccludee, "IsOccludee( self: Craft::Drawable )=>bool" },
  { dao_Craft_Drawable_IsInView, "IsInView( self: Craft::Drawable )=>bool" },
  { dao_Craft_Drawable_IsInView_dao_2, "IsInView( self: Craft::Drawable, camera: Craft::Camera )=>bool" },
  { dao_Craft_Drawable_SetSortValue, "SetSortValue( self: Craft::Drawable, value: float )" },
  { dao_Craft_Drawable_SetMinMaxZ, "SetMinMaxZ( self: Craft::Drawable, minZ: float, maxZ: float )" },
  { dao_Craft_Drawable_MarkInView, "MarkInView( self: Craft::Drawable, frameNumber: int )" },
  { dao_Craft_Drawable_LimitLights, "LimitLights( self: Craft::Drawable )" },
  { dao_Craft_Drawable_LimitVertexLights, "LimitVertexLights( self: Craft::Drawable, removeConvertedLights: bool )" },
  { dao_Craft_Drawable_SetBasePass, "SetBasePass( self: Craft::Drawable, batchIndex: int )" },
  { dao_Craft_Drawable_GetDistance, "GetDistance( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_GetLodDistance, "GetLodDistance( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_GetSortValue, "GetSortValue( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_HasBasePass, "HasBasePass( self: Craft::Drawable, batchIndex: int )=>bool" },
  { dao_Craft_Drawable_GetFirstLight, "GetFirstLight( self: Craft::Drawable )=>Craft::Light" },
  { dao_Craft_Drawable_GetMinZ, "GetMinZ( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_GetMaxZ, "GetMaxZ( self: Craft::Drawable )=>float" },
  { dao_Craft_Drawable_AddLight, "AddLight( self: Craft::Drawable, light: Craft::Light )" },
  { dao_Craft_Drawable_AddVertexLight, "AddVertexLight( self: Craft::Drawable, light: Craft::Light )" },
  { NULL, NULL }
};
static void Dao_Craft_Drawable_Delete( DaoValue *self )
{
	Craft::Drawable *obj = (Craft::Drawable*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Drawable_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Drawable *self = (DaoCxx_Craft_Drawable*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Drawable_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::Drawable*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::Drawable*)data);
}

static DaoTypeCore Craft_Drawable_Core = 
{
  "Craft::Drawable",
  sizeof(Craft::Drawable),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_Drawable_Craft_Component,NULL },
  dao_Craft_Drawable_Nums,
  dao_Craft_Drawable_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Drawable_Delete,
  Dao_Craft_Drawable_HandleGC
};
DaoTypeCore *dao_Craft_Drawable_Core = & Craft_Drawable_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_Drawable_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  unsigned char drawableFlags = (unsigned char) DaoValue_TryGetInteger( _p[0] );

  DaoCxx_Craft_Drawable *_self = new DaoCxx_Craft_Drawable( context, drawableFlags );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Drawable::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int batchIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  Craft::Geometry* _GetLodGeometry = self->GetLodGeometry( batchIndex, level );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLodGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetDrawDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetShadowDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  float bias = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLodBias( bias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetViewMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetLightMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetShadowMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetZoneMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxLights( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetCastShadows( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetOccluder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetOccluder( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetOccludee( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetOccludee( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_MarkForUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  self->MarkForUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  const Craft::BoundingBox& _GetBoundingBox = self->GetBoundingBox(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetBoundingBox, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetWorldBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  const Craft::BoundingBox& _GetWorldBoundingBox = self->GetWorldBoundingBox(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetWorldBoundingBox, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetDrawableFlags( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  unsigned char _GetDrawableFlags = self->GetDrawableFlags(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDrawableFlags );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetDrawDistance = self->GetDrawDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDrawDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetShadowDistance = self->GetShadowDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetLodBias = self->GetLodBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLodBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  unsigned int _GetViewMask = self->GetViewMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetViewMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  unsigned int _GetLightMask = self->GetLightMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLightMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  unsigned int _GetShadowMask = self->GetShadowMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadowMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  unsigned int _GetZoneMask = self->GetZoneMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetZoneMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  unsigned int _GetMaxLights = self->GetMaxLights(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxLights );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  bool _GetCastShadows = self->GetCastShadows(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetCastShadows );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_IsOccluder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  bool _IsOccluder = self->IsOccluder(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsOccluder );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_IsOccludee( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  bool _IsOccludee = self->IsOccludee(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsOccludee );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_IsInView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  bool _IsInView = self->IsInView(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInView );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_IsInView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Camera_Core );

  bool _IsInView = self->IsInView( camera );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInView );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetSortValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  float value = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSortValue( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetMinMaxZ( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  float minZ = (float) DaoValue_TryGetFloat( _p[1] );
  float maxZ = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetMinMaxZ( minZ, maxZ );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_MarkInView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int frameNumber = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->MarkInView( frameNumber );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_LimitLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  self->LimitLights(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_LimitVertexLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  bool removeConvertedLights = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->LimitVertexLights( removeConvertedLights );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_SetBasePass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int batchIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetBasePass( batchIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetDistance = self->GetDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetLodDistance = self->GetLodDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLodDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetSortValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetSortValue = self->GetSortValue(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSortValue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_HasBasePass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  unsigned int batchIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _HasBasePass = self->HasBasePass( batchIndex );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasBasePass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetFirstLight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  Craft::Light* _GetFirstLight = self->GetFirstLight(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetFirstLight, dao_Craft_Light_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetMinZ( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetMinZ = self->GetMinZ(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMinZ );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_GetMaxZ( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );

  float _GetMaxZ = self->GetMaxZ(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxZ );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_AddLight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );

  self->AddLight( light );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Drawable_AddVertexLight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Drawable* self = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Drawable_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );

  self->AddVertexLight( light );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_CustomGeometry_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_CustomGeometry_CustomGeometry_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_SetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_SetDynamic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_BeginGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_DefineVertex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_DefineNormal( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_DefineColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_DefineTexCoord( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_DefineTangent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_DefineGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_Commit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_SetMaterial_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_GetNumVertices( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_IsDynamic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CustomGeometry_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_CustomGeometry_Meths[] = 
{
  { dao_Craft_CustomGeometry_CustomGeometry_dao_2, "CustomGeometry(  )=>Craft::CustomGeometry" },
  { dao_Craft_CustomGeometry_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_CustomGeometry_GetLodGeometry, "GetLodGeometry( self: Craft::CustomGeometry, batchIndex: int, level: int )=>Craft::Geometry" },
  { dao_Craft_CustomGeometry_Clear, "Clear( self: Craft::CustomGeometry )" },
  { dao_Craft_CustomGeometry_SetNumGeometries, "SetNumGeometries( self: Craft::CustomGeometry, num: int )" },
  { dao_Craft_CustomGeometry_SetDynamic, "SetDynamic( self: Craft::CustomGeometry, enable: bool )" },
  { dao_Craft_CustomGeometry_BeginGeometry, "BeginGeometry( self: Craft::CustomGeometry, index: int, type: int )" },
  { dao_Craft_CustomGeometry_DefineVertex, "DefineVertex( self: Craft::CustomGeometry, position: Craft::Vector3 )" },
  { dao_Craft_CustomGeometry_DefineNormal, "DefineNormal( self: Craft::CustomGeometry, normal: Craft::Vector3 )" },
  { dao_Craft_CustomGeometry_DefineColor, "DefineColor( self: Craft::CustomGeometry, color: Craft::Color )" },
  { dao_Craft_CustomGeometry_DefineTexCoord, "DefineTexCoord( self: Craft::CustomGeometry, texCoord: Craft::Vector2 )" },
  { dao_Craft_CustomGeometry_DefineTangent, "DefineTangent( self: Craft::CustomGeometry, tangent: Craft::Vector4 )" },
  { dao_Craft_CustomGeometry_DefineGeometry, "DefineGeometry( self: Craft::CustomGeometry, index: int, type: int, numVertices: int, hasNormals: bool, hasColors: bool, hasTexCoords: bool, hasTangents: bool )" },
  { dao_Craft_CustomGeometry_Commit, "Commit( self: Craft::CustomGeometry )" },
  { dao_Craft_CustomGeometry_SetMaterial, "SetMaterial( self: Craft::CustomGeometry, material: Craft::Material )" },
  { dao_Craft_CustomGeometry_SetMaterial_dao_2, "SetMaterial( self: Craft::CustomGeometry, index: int, material: Craft::Material )=>bool" },
  { dao_Craft_CustomGeometry_GetNumGeometries, "GetNumGeometries( self: Craft::CustomGeometry )=>int" },
  { dao_Craft_CustomGeometry_GetNumVertices, "GetNumVertices( self: Craft::CustomGeometry, index: int )=>int" },
  { dao_Craft_CustomGeometry_IsDynamic, "IsDynamic( self: Craft::CustomGeometry )=>bool" },
  { dao_Craft_CustomGeometry_GetMaterial, "GetMaterial( self: Craft::CustomGeometry, index: int =0 )=>Craft::Material" },
  { NULL, NULL }
};
static void Dao_Craft_CustomGeometry_Delete( DaoValue *self )
{
	Craft::CustomGeometry *obj = (Craft::CustomGeometry*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_CustomGeometry_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_CustomGeometry *self = (DaoCxx_Craft_CustomGeometry*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_CustomGeometry_Craft_Drawable( void *data, int down )
{
	if( down ) return static_cast<Craft::CustomGeometry*>((Craft::Drawable*)data);
	return dynamic_cast<Craft::Drawable*>((Craft::CustomGeometry*)data);
}

static DaoTypeCore Craft_CustomGeometry_Core = 
{
  "Craft::CustomGeometry",
  sizeof(Craft::CustomGeometry),
  { dao_Craft_Drawable_Core, NULL },
  { dao_cast_Craft_CustomGeometry_Craft_Drawable,NULL },
  dao_Craft_CustomGeometry_Nums,
  dao_Craft_CustomGeometry_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_CustomGeometry_Delete,
  Dao_Craft_CustomGeometry_HandleGC
};
DaoTypeCore *dao_Craft_CustomGeometry_Core = & Craft_CustomGeometry_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_CustomGeometry_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_CustomGeometry *_self = new DaoCxx_Craft_CustomGeometry( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::CustomGeometry::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int batchIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  Craft::Geometry* _GetLodGeometry = self->GetLodGeometry( batchIndex, level );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLodGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_SetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumGeometries( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_SetDynamic( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDynamic( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_BeginGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::PrimitiveType type = (Craft::PrimitiveType) DaoValue_TryGetInteger( _p[2] );

  self->BeginGeometry( index, type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_DefineVertex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->DefineVertex( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_DefineNormal( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  Craft::Vector3* normal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->DefineNormal( *normal );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_DefineColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );

  self->DefineColor( *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_DefineTexCoord( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  Craft::Vector2* texCoord = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->DefineTexCoord( *texCoord );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_DefineTangent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  Craft::Vector4* tangent = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector4_Core );

  self->DefineTangent( *tangent );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_DefineGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::PrimitiveType type = (Craft::PrimitiveType) DaoValue_TryGetInteger( _p[2] );
  unsigned int numVertices = (unsigned int) DaoValue_TryGetInteger( _p[3] );
  bool hasNormals = (bool) DaoValue_TryGetBoolean( _p[4] );
  bool hasColors = (bool) DaoValue_TryGetBoolean( _p[5] );
  bool hasTexCoords = (bool) DaoValue_TryGetBoolean( _p[6] );
  bool hasTangents = (bool) DaoValue_TryGetBoolean( _p[7] );

  self->DefineGeometry( index, type, numVertices, hasNormals, hasColors, hasTexCoords, hasTangents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_Commit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );

  self->Commit(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Material_Core );

  self->SetMaterial( material );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_SetMaterial_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Material_Core );

  bool _SetMaterial = self->SetMaterial( index, material );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMaterial );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );

  unsigned int _GetNumGeometries = self->GetNumGeometries(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumGeometries );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_GetNumVertices( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetNumVertices = self->GetNumVertices( index );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumVertices );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_IsDynamic( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );

  bool _IsDynamic = self->IsDynamic(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsDynamic );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CustomGeometry_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CustomGeometry* self = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CustomGeometry_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Material* _GetMaterial = self->GetMaterial( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetMaterial, dao_Craft_Material_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_RigidBody_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_RigidBody_RigidBody_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetMass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetLinearVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetLinearFactor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetLinearRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetLinearDamping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetAngularFactor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetAngularRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetAngularDamping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetFriction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetAnisotropicFriction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetRollingFriction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetRestitution( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetContactProcessingThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetCcdRadius( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetCcdMotionThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetUseGravity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetGravityOverride( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetKinematic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetTrigger( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetCollisionLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetCollisionMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetCollisionLayerAndMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_SetCollisionEventMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyForce( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyForce_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyTorque( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyImpulse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyImpulse_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyTorqueImpulse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ResetForces( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_Activate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ReAddBodyToWorld( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_DisableMassUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_EnableMassUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetPhysicsWorld( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetMass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetLinearVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetLinearFactor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetVelocityAtPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetLinearRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetLinearDamping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetAngularFactor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetAngularRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetAngularDamping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetFriction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetAnisotropicFriction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetRollingFriction( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetRestitution( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetContactProcessingThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetCcdRadius( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetCcdMotionThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetUseGravity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetGravityOverride( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetCenterOfMass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_IsKinematic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_IsTrigger( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_IsActive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetCollisionLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetCollisionMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_GetCollisionEventMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ApplyWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_UpdateMass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_UpdateGravity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_AddConstraint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_RemoveConstraint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RigidBody_ReleaseBody( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_RigidBody_Meths[] = 
{
  { dao_Craft_RigidBody_RigidBody_dao_2, "RigidBody(  )=>Craft::RigidBody" },
  { dao_Craft_RigidBody_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_RigidBody_ApplyAttributes, "ApplyAttributes( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_OnSetEnabled, "OnSetEnabled( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_SetMass, "SetMass( self: Craft::RigidBody, mass: float )" },
  { dao_Craft_RigidBody_SetPosition, "SetPosition( self: Craft::RigidBody, position: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetRotation, "SetRotation( self: Craft::RigidBody, rotation: Craft::Quaternion )" },
  { dao_Craft_RigidBody_SetTransform, "SetTransform( self: Craft::RigidBody, position: Craft::Vector3, rotation: Craft::Quaternion )" },
  { dao_Craft_RigidBody_SetLinearVelocity, "SetLinearVelocity( self: Craft::RigidBody, velocity: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetLinearFactor, "SetLinearFactor( self: Craft::RigidBody, factor: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetLinearRestThreshold, "SetLinearRestThreshold( self: Craft::RigidBody, threshold: float )" },
  { dao_Craft_RigidBody_SetLinearDamping, "SetLinearDamping( self: Craft::RigidBody, damping: float )" },
  { dao_Craft_RigidBody_SetAngularVelocity, "SetAngularVelocity( self: Craft::RigidBody, angularVelocity: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetAngularFactor, "SetAngularFactor( self: Craft::RigidBody, factor: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetAngularRestThreshold, "SetAngularRestThreshold( self: Craft::RigidBody, threshold: float )" },
  { dao_Craft_RigidBody_SetAngularDamping, "SetAngularDamping( self: Craft::RigidBody, factor: float )" },
  { dao_Craft_RigidBody_SetFriction, "SetFriction( self: Craft::RigidBody, friction: float )" },
  { dao_Craft_RigidBody_SetAnisotropicFriction, "SetAnisotropicFriction( self: Craft::RigidBody, friction: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetRollingFriction, "SetRollingFriction( self: Craft::RigidBody, friction: float )" },
  { dao_Craft_RigidBody_SetRestitution, "SetRestitution( self: Craft::RigidBody, restitution: float )" },
  { dao_Craft_RigidBody_SetContactProcessingThreshold, "SetContactProcessingThreshold( self: Craft::RigidBody, threshold: float )" },
  { dao_Craft_RigidBody_SetCcdRadius, "SetCcdRadius( self: Craft::RigidBody, radius: float )" },
  { dao_Craft_RigidBody_SetCcdMotionThreshold, "SetCcdMotionThreshold( self: Craft::RigidBody, threshold: float )" },
  { dao_Craft_RigidBody_SetUseGravity, "SetUseGravity( self: Craft::RigidBody, enable: bool )" },
  { dao_Craft_RigidBody_SetGravityOverride, "SetGravityOverride( self: Craft::RigidBody, gravity: Craft::Vector3 )" },
  { dao_Craft_RigidBody_SetKinematic, "SetKinematic( self: Craft::RigidBody, enable: bool )" },
  { dao_Craft_RigidBody_SetTrigger, "SetTrigger( self: Craft::RigidBody, enable: bool )" },
  { dao_Craft_RigidBody_SetCollisionLayer, "SetCollisionLayer( self: Craft::RigidBody, layer: int )" },
  { dao_Craft_RigidBody_SetCollisionMask, "SetCollisionMask( self: Craft::RigidBody, mask: int )" },
  { dao_Craft_RigidBody_SetCollisionLayerAndMask, "SetCollisionLayerAndMask( self: Craft::RigidBody, layer: int, mask: int )" },
  { dao_Craft_RigidBody_SetCollisionEventMode, "SetCollisionEventMode( self: Craft::RigidBody, mode: int )" },
  { dao_Craft_RigidBody_ApplyForce, "ApplyForce( self: Craft::RigidBody, force: Craft::Vector3 )" },
  { dao_Craft_RigidBody_ApplyForce_dao_2, "ApplyForce( self: Craft::RigidBody, force: Craft::Vector3, position: Craft::Vector3 )" },
  { dao_Craft_RigidBody_ApplyTorque, "ApplyTorque( self: Craft::RigidBody, torque: Craft::Vector3 )" },
  { dao_Craft_RigidBody_ApplyImpulse, "ApplyImpulse( self: Craft::RigidBody, impulse: Craft::Vector3 )" },
  { dao_Craft_RigidBody_ApplyImpulse_dao_2, "ApplyImpulse( self: Craft::RigidBody, impulse: Craft::Vector3, position: Craft::Vector3 )" },
  { dao_Craft_RigidBody_ApplyTorqueImpulse, "ApplyTorqueImpulse( self: Craft::RigidBody, torque: Craft::Vector3 )" },
  { dao_Craft_RigidBody_ResetForces, "ResetForces( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_Activate, "Activate( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_ReAddBodyToWorld, "ReAddBodyToWorld( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_DisableMassUpdate, "DisableMassUpdate( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_EnableMassUpdate, "EnableMassUpdate( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_GetPhysicsWorld, "GetPhysicsWorld( self: Craft::RigidBody )=>Craft::PhysicsWorld" },
  { dao_Craft_RigidBody_GetMass, "GetMass( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetPosition, "GetPosition( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetRotation, "GetRotation( self: Craft::RigidBody )=>Craft::Quaternion" },
  { dao_Craft_RigidBody_GetLinearVelocity, "GetLinearVelocity( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetLinearFactor, "GetLinearFactor( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetVelocityAtPoint, "GetVelocityAtPoint( self: Craft::RigidBody, position: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetLinearRestThreshold, "GetLinearRestThreshold( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetLinearDamping, "GetLinearDamping( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetAngularVelocity, "GetAngularVelocity( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetAngularFactor, "GetAngularFactor( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetAngularRestThreshold, "GetAngularRestThreshold( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetAngularDamping, "GetAngularDamping( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetFriction, "GetFriction( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetAnisotropicFriction, "GetAnisotropicFriction( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetRollingFriction, "GetRollingFriction( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetRestitution, "GetRestitution( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetContactProcessingThreshold, "GetContactProcessingThreshold( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetCcdRadius, "GetCcdRadius( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetCcdMotionThreshold, "GetCcdMotionThreshold( self: Craft::RigidBody )=>float" },
  { dao_Craft_RigidBody_GetUseGravity, "GetUseGravity( self: Craft::RigidBody )=>bool" },
  { dao_Craft_RigidBody_GetGravityOverride, "GetGravityOverride( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_GetCenterOfMass, "GetCenterOfMass( self: Craft::RigidBody )=>Craft::Vector3" },
  { dao_Craft_RigidBody_IsKinematic, "IsKinematic( self: Craft::RigidBody )=>bool" },
  { dao_Craft_RigidBody_IsTrigger, "IsTrigger( self: Craft::RigidBody )=>bool" },
  { dao_Craft_RigidBody_IsActive, "IsActive( self: Craft::RigidBody )=>bool" },
  { dao_Craft_RigidBody_GetCollisionLayer, "GetCollisionLayer( self: Craft::RigidBody )=>int" },
  { dao_Craft_RigidBody_GetCollisionMask, "GetCollisionMask( self: Craft::RigidBody )=>int" },
  { dao_Craft_RigidBody_GetCollisionEventMode, "GetCollisionEventMode( self: Craft::RigidBody )=>int" },
  { dao_Craft_RigidBody_ApplyWorldTransform, "ApplyWorldTransform( self: Craft::RigidBody, newWorldPosition: Craft::Vector3, newWorldRotation: Craft::Quaternion )" },
  { dao_Craft_RigidBody_UpdateMass, "UpdateMass( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_UpdateGravity, "UpdateGravity( self: Craft::RigidBody )" },
  { dao_Craft_RigidBody_AddConstraint, "AddConstraint( self: Craft::RigidBody, constraint: Craft::Constraint )" },
  { dao_Craft_RigidBody_RemoveConstraint, "RemoveConstraint( self: Craft::RigidBody, constraint: Craft::Constraint )" },
  { dao_Craft_RigidBody_ReleaseBody, "ReleaseBody( self: Craft::RigidBody )" },
  { NULL, NULL }
};
static void Dao_Craft_RigidBody_Delete( DaoValue *self )
{
	Craft::RigidBody *obj = (Craft::RigidBody*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_RigidBody_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_RigidBody *self = (DaoCxx_Craft_RigidBody*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_RigidBody_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::RigidBody*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::RigidBody*)data);
}
extern DaoType* dao_Craft_RigidBody_CheckGetField( DaoType *self, DaoString *field, DaoRoutine *rout );
extern DaoValue* dao_Craft_RigidBody_DoGetField( DaoValue *self, DaoString *field, DaoProcess *proc );
extern int dao_Craft_RigidBody_CheckSetField( DaoType *self, DaoString *field, DaoType *value, DaoRoutine *rout );
extern int dao_Craft_RigidBody_DoSetField( DaoValue *self, DaoString *field, DaoValue *value, DaoProcess *proc );

static DaoTypeCore Craft_RigidBody_Core = 
{
  "Craft::RigidBody",
  sizeof(Craft::RigidBody),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_RigidBody_Craft_Component,NULL },
  dao_Craft_RigidBody_Nums,
  dao_Craft_RigidBody_Meths,
  dao_Craft_RigidBody_CheckGetField,    dao_Craft_RigidBody_DoGetField,
  dao_Craft_RigidBody_CheckSetField,    dao_Craft_RigidBody_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_RigidBody_Delete,
  Dao_Craft_RigidBody_HandleGC
};
DaoTypeCore *dao_Craft_RigidBody_Core = & Craft_RigidBody_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_RigidBody_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_RigidBody *_self = new DaoCxx_Craft_RigidBody( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::RigidBody::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetMass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float mass = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMass( mass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  self->SetTransform( *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetLinearVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* velocity = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetLinearVelocity( *velocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetLinearFactor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* factor = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetLinearFactor( *factor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetLinearRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float threshold = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLinearRestThreshold( threshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetLinearDamping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float damping = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLinearDamping( damping );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* angularVelocity = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetAngularVelocity( *angularVelocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetAngularFactor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* factor = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetAngularFactor( *factor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetAngularRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float threshold = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAngularRestThreshold( threshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetAngularDamping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float factor = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAngularDamping( factor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetFriction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float friction = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFriction( friction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetAnisotropicFriction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* friction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetAnisotropicFriction( *friction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetRollingFriction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float friction = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetRollingFriction( friction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetRestitution( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float restitution = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetRestitution( restitution );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetContactProcessingThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float threshold = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetContactProcessingThreshold( threshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetCcdRadius( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float radius = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetCcdRadius( radius );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetCcdMotionThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  float threshold = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetCcdMotionThreshold( threshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetUseGravity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUseGravity( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetGravityOverride( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* gravity = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetGravityOverride( *gravity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetKinematic( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetKinematic( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetTrigger( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetTrigger( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetCollisionLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  unsigned int layer = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetCollisionLayer( layer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetCollisionMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetCollisionMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetCollisionLayerAndMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  unsigned int layer = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->SetCollisionLayerAndMask( layer, mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_SetCollisionEventMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::CollisionEventMode mode = (Craft::CollisionEventMode) DaoValue_TryGetInteger( _p[1] );

  self->SetCollisionEventMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyForce( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* force = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->ApplyForce( *force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyForce_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* force = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->ApplyForce( *force, *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyTorque( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* torque = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->ApplyTorque( *torque );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyImpulse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* impulse = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->ApplyImpulse( *impulse );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyImpulse_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* impulse = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->ApplyImpulse( *impulse, *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyTorqueImpulse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* torque = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->ApplyTorqueImpulse( *torque );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ResetForces( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->ResetForces(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_Activate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->Activate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ReAddBodyToWorld( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->ReAddBodyToWorld(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_DisableMassUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->DisableMassUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_EnableMassUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->EnableMassUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetPhysicsWorld( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::PhysicsWorld* _GetPhysicsWorld = self->GetPhysicsWorld(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPhysicsWorld, dao_Craft_PhysicsWorld_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetMass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetMass = self->GetMass(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Vector3 _GetPosition = self->GetPosition(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetPosition ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Quaternion _GetRotation = self->GetRotation(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Quaternion( _GetRotation ), dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetLinearVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Vector3 _GetLinearVelocity = self->GetLinearVelocity(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetLinearVelocity ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetLinearFactor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Vector3 _GetLinearFactor = self->GetLinearFactor(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetLinearFactor ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetVelocityAtPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _GetVelocityAtPoint = self->GetVelocityAtPoint( *position );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetVelocityAtPoint ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetLinearRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetLinearRestThreshold = self->GetLinearRestThreshold(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLinearRestThreshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetLinearDamping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetLinearDamping = self->GetLinearDamping(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLinearDamping );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Vector3 _GetAngularVelocity = self->GetAngularVelocity(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetAngularVelocity ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetAngularFactor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Vector3 _GetAngularFactor = self->GetAngularFactor(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetAngularFactor ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetAngularRestThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetAngularRestThreshold = self->GetAngularRestThreshold(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAngularRestThreshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetAngularDamping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetAngularDamping = self->GetAngularDamping(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAngularDamping );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetFriction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetFriction = self->GetFriction(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFriction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetAnisotropicFriction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::Vector3 _GetAnisotropicFriction = self->GetAnisotropicFriction(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetAnisotropicFriction ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetRollingFriction( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetRollingFriction = self->GetRollingFriction(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRollingFriction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetRestitution( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetRestitution = self->GetRestitution(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRestitution );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetContactProcessingThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetContactProcessingThreshold = self->GetContactProcessingThreshold(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetContactProcessingThreshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetCcdRadius( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetCcdRadius = self->GetCcdRadius(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetCcdRadius );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetCcdMotionThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  float _GetCcdMotionThreshold = self->GetCcdMotionThreshold(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetCcdMotionThreshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetUseGravity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  bool _GetUseGravity = self->GetUseGravity(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUseGravity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetGravityOverride( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  const Craft::Vector3& _GetGravityOverride = self->GetGravityOverride(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetGravityOverride, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetCenterOfMass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  const Craft::Vector3& _GetCenterOfMass = self->GetCenterOfMass(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetCenterOfMass, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_IsKinematic( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  bool _IsKinematic = self->IsKinematic(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsKinematic );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_IsTrigger( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  bool _IsTrigger = self->IsTrigger(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsTrigger );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_IsActive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  bool _IsActive = self->IsActive(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsActive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetCollisionLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  unsigned int _GetCollisionLayer = self->GetCollisionLayer(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCollisionLayer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetCollisionMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  unsigned int _GetCollisionMask = self->GetCollisionMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCollisionMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_GetCollisionEventMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  Craft::CollisionEventMode _GetCollisionEventMode = self->GetCollisionEventMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCollisionEventMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ApplyWorldTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Vector3* newWorldPosition = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* newWorldRotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  self->ApplyWorldTransform( *newWorldPosition, *newWorldRotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_UpdateMass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->UpdateMass(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_UpdateGravity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->UpdateGravity(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_AddConstraint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Constraint* constraint = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Constraint_Core );

  self->AddConstraint( constraint );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_RemoveConstraint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );
  Craft::Constraint* constraint = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Constraint_Core );

  self->RemoveConstraint( constraint );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RigidBody_ReleaseBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RigidBody* self = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RigidBody_Core );

  self->ReleaseBody(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_CollisionShape_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_CollisionShape_CollisionShape_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetSphere( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetStaticPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetCylinder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetCapsule( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetCone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetTriangleMesh( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetCustomTriangleMesh( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetConvexHull( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetCustomConvexHull( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetTerrain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetShapeType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetMargin( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetModel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_SetLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetPhysicsWorld( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetShapeType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetMargin( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetModel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_GetWorldBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_NotifyRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CollisionShape_ReleaseShape( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_CollisionShape_Meths[] = 
{
  { dao_Craft_CollisionShape_CollisionShape_dao_2, "CollisionShape(  )=>Craft::CollisionShape" },
  { dao_Craft_CollisionShape_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_CollisionShape_ApplyAttributes, "ApplyAttributes( self: Craft::CollisionShape )" },
  { dao_Craft_CollisionShape_OnSetEnabled, "OnSetEnabled( self: Craft::CollisionShape )" },
  { dao_Craft_CollisionShape_SetBox, "SetBox( self: Craft::CollisionShape, size: Craft::Vector3, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetSphere, "SetSphere( self: Craft::CollisionShape, diameter: float, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetStaticPlane, "SetStaticPlane( self: Craft::CollisionShape, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetCylinder, "SetCylinder( self: Craft::CollisionShape, diameter: float, height: float, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetCapsule, "SetCapsule( self: Craft::CollisionShape, diameter: float, height: float, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetCone, "SetCone( self: Craft::CollisionShape, diameter: float, height: float, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetTriangleMesh, "SetTriangleMesh( self: Craft::CollisionShape, model: Craft::Model, lodLevel: int =0, scale: Craft::Vector3|none =none, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetCustomTriangleMesh, "SetCustomTriangleMesh( self: Craft::CollisionShape, custom: Craft::CustomGeometry, scale: Craft::Vector3|none =none, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetConvexHull, "SetConvexHull( self: Craft::CollisionShape, model: Craft::Model, lodLevel: int =0, scale: Craft::Vector3|none =none, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetCustomConvexHull, "SetCustomConvexHull( self: Craft::CollisionShape, custom: Craft::CustomGeometry, scale: Craft::Vector3|none =none, position: Craft::Vector3|none =none, rotation: Craft::Quaternion|none =none )" },
  { dao_Craft_CollisionShape_SetTerrain, "SetTerrain( self: Craft::CollisionShape, lodLevel: int =0 )" },
  { dao_Craft_CollisionShape_SetShapeType, "SetShapeType( self: Craft::CollisionShape, type: int )" },
  { dao_Craft_CollisionShape_SetSize, "SetSize( self: Craft::CollisionShape, size: Craft::Vector3 )" },
  { dao_Craft_CollisionShape_SetPosition, "SetPosition( self: Craft::CollisionShape, position: Craft::Vector3 )" },
  { dao_Craft_CollisionShape_SetRotation, "SetRotation( self: Craft::CollisionShape, rotation: Craft::Quaternion )" },
  { dao_Craft_CollisionShape_SetTransform, "SetTransform( self: Craft::CollisionShape, position: Craft::Vector3, rotation: Craft::Quaternion )" },
  { dao_Craft_CollisionShape_SetMargin, "SetMargin( self: Craft::CollisionShape, margin: float )" },
  { dao_Craft_CollisionShape_SetModel, "SetModel( self: Craft::CollisionShape, model: Craft::Model )" },
  { dao_Craft_CollisionShape_SetLodLevel, "SetLodLevel( self: Craft::CollisionShape, lodLevel: int )" },
  { dao_Craft_CollisionShape_GetPhysicsWorld, "GetPhysicsWorld( self: Craft::CollisionShape )=>Craft::PhysicsWorld" },
  { dao_Craft_CollisionShape_GetShapeType, "GetShapeType( self: Craft::CollisionShape )=>int" },
  { dao_Craft_CollisionShape_GetSize, "GetSize( self: Craft::CollisionShape )=>Craft::Vector3" },
  { dao_Craft_CollisionShape_GetPosition, "GetPosition( self: Craft::CollisionShape )=>Craft::Vector3" },
  { dao_Craft_CollisionShape_GetRotation, "GetRotation( self: Craft::CollisionShape )=>Craft::Quaternion" },
  { dao_Craft_CollisionShape_GetMargin, "GetMargin( self: Craft::CollisionShape )=>float" },
  { dao_Craft_CollisionShape_GetModel, "GetModel( self: Craft::CollisionShape )=>Craft::Model" },
  { dao_Craft_CollisionShape_GetLodLevel, "GetLodLevel( self: Craft::CollisionShape )=>int" },
  { dao_Craft_CollisionShape_GetWorldBoundingBox, "GetWorldBoundingBox( self: Craft::CollisionShape )=>Craft::BoundingBox" },
  { dao_Craft_CollisionShape_NotifyRigidBody, "NotifyRigidBody( self: Craft::CollisionShape, updateMass: bool =true )" },
  { dao_Craft_CollisionShape_ReleaseShape, "ReleaseShape( self: Craft::CollisionShape )" },
  { NULL, NULL }
};
static void Dao_Craft_CollisionShape_Delete( DaoValue *self )
{
	Craft::CollisionShape *obj = (Craft::CollisionShape*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_CollisionShape_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_CollisionShape *self = (DaoCxx_Craft_CollisionShape*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_CollisionShape_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::CollisionShape*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::CollisionShape*)data);
}

static DaoTypeCore Craft_CollisionShape_Core = 
{
  "Craft::CollisionShape",
  sizeof(Craft::CollisionShape),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_CollisionShape_Craft_Component,NULL },
  dao_Craft_CollisionShape_Nums,
  dao_Craft_CollisionShape_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_CollisionShape_Delete,
  Dao_Craft_CollisionShape_HandleGC
};
DaoTypeCore *dao_Craft_CollisionShape_Core = & Craft_CollisionShape_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_CollisionShape_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_CollisionShape *_self = new DaoCxx_Craft_CollisionShape( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::CollisionShape::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Vector3* size = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Quaternion_Core );

  if(_n<=2) self->SetBox( *size );
  else if(_n<=3) self->SetBox( *size, *position );
  else self->SetBox( *size, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetSphere( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  float diameter = (float) DaoValue_TryGetFloat( _p[1] );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Quaternion_Core );

  if(_n<=2) self->SetSphere( diameter );
  else if(_n<=3) self->SetSphere( diameter, *position );
  else self->SetSphere( diameter, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetStaticPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  if(_n<=1) self->SetStaticPlane(  );
  else if(_n<=2) self->SetStaticPlane( *position );
  else self->SetStaticPlane( *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetCylinder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  float diameter = (float) DaoValue_TryGetFloat( _p[1] );
  float height = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Quaternion_Core );

  if(_n<=3) self->SetCylinder( diameter, height );
  else if(_n<=4) self->SetCylinder( diameter, height, *position );
  else self->SetCylinder( diameter, height, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetCapsule( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  float diameter = (float) DaoValue_TryGetFloat( _p[1] );
  float height = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Quaternion_Core );

  if(_n<=3) self->SetCapsule( diameter, height );
  else if(_n<=4) self->SetCapsule( diameter, height, *position );
  else self->SetCapsule( diameter, height, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetCone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  float diameter = (float) DaoValue_TryGetFloat( _p[1] );
  float height = (float) DaoValue_TryGetFloat( _p[2] );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Quaternion_Core );

  if(_n<=3) self->SetCone( diameter, height );
  else if(_n<=4) self->SetCone( diameter, height, *position );
  else self->SetCone( diameter, height, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetTriangleMesh( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Model* model = (Craft::Model*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Model_Core );
  unsigned int lodLevel = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[5], dao_Craft_Quaternion_Core );

  if(_n<=3) self->SetTriangleMesh( model, lodLevel );
  else if(_n<=4) self->SetTriangleMesh( model, lodLevel, *scale );
  else if(_n<=5) self->SetTriangleMesh( model, lodLevel, *scale, *position );
  else self->SetTriangleMesh( model, lodLevel, *scale, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetCustomTriangleMesh( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::CustomGeometry* custom = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_CustomGeometry_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Quaternion_Core );

  if(_n<=2) self->SetCustomTriangleMesh( custom );
  else if(_n<=3) self->SetCustomTriangleMesh( custom, *scale );
  else if(_n<=4) self->SetCustomTriangleMesh( custom, *scale, *position );
  else self->SetCustomTriangleMesh( custom, *scale, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetConvexHull( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Model* model = (Craft::Model*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Model_Core );
  unsigned int lodLevel = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[5], dao_Craft_Quaternion_Core );

  if(_n<=3) self->SetConvexHull( model, lodLevel );
  else if(_n<=4) self->SetConvexHull( model, lodLevel, *scale );
  else if(_n<=5) self->SetConvexHull( model, lodLevel, *scale, *position );
  else self->SetConvexHull( model, lodLevel, *scale, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetCustomConvexHull( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::CustomGeometry* custom = (Craft::CustomGeometry*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_CustomGeometry_Core );
  Craft::Vector3* scale = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Quaternion_Core );

  if(_n<=2) self->SetCustomConvexHull( custom );
  else if(_n<=3) self->SetCustomConvexHull( custom, *scale );
  else if(_n<=4) self->SetCustomConvexHull( custom, *scale, *position );
  else self->SetCustomConvexHull( custom, *scale, *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetTerrain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  unsigned int lodLevel = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetTerrain( lodLevel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetShapeType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::ShapeType type = (Craft::ShapeType) DaoValue_TryGetInteger( _p[1] );

  self->SetShapeType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Vector3* size = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetSize( *size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Quaternion_Core );

  self->SetTransform( *position, *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetMargin( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  float margin = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMargin( margin );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetModel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  Craft::Model* model = (Craft::Model*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Model_Core );

  self->SetModel( model );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_SetLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  unsigned int lodLevel = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetLodLevel( lodLevel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetPhysicsWorld( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  Craft::PhysicsWorld* _GetPhysicsWorld = self->GetPhysicsWorld(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPhysicsWorld, dao_Craft_PhysicsWorld_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetShapeType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  Craft::ShapeType _GetShapeType = self->GetShapeType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShapeType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  const Craft::Vector3& _GetSize = self->GetSize(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetSize, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  const Craft::Vector3& _GetPosition = self->GetPosition(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetPosition, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  const Craft::Quaternion& _GetRotation = self->GetRotation(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetRotation, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetMargin( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  float _GetMargin = self->GetMargin(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMargin );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetModel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  Craft::Model* _GetModel = self->GetModel(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetModel, dao_Craft_Model_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  unsigned int _GetLodLevel = self->GetLodLevel(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLodLevel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_GetWorldBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  Craft::BoundingBox _GetWorldBoundingBox = self->GetWorldBoundingBox(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::BoundingBox( _GetWorldBoundingBox ), dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_NotifyRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );
  bool updateMass = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->NotifyRigidBody( updateMass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CollisionShape_ReleaseShape( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CollisionShape* self = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CollisionShape_Core );

  self->ReleaseShape(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Octant_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Octant_Octant_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetOrCreateChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_DeleteChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_InsertDrawable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_CheckDrawableFit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_AddDrawable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_RemoveDrawable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetWorldBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetCullingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetRoot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_GetNumDrawables( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_IsEmpty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octant_ResetRoot( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Octant_Meths[] = 
{
  { dao_Craft_Octant_Octant_dao_2, "Octant( box: Craft::BoundingBox, level: int, parent: Craft::Octant, root: Craft::Octree, index: int =ROOT_INDEX )=>Craft::Octant" },
  { dao_Craft_Octant_GetOrCreateChild, "GetOrCreateChild( self: Craft::Octant, index: int )=>Craft::Octant" },
  { dao_Craft_Octant_DeleteChild, "DeleteChild( self: Craft::Octant, index: int )" },
  { dao_Craft_Octant_InsertDrawable, "InsertDrawable( self: Craft::Octant, drawable: Craft::Drawable )" },
  { dao_Craft_Octant_CheckDrawableFit, "CheckDrawableFit( self: Craft::Octant, box: Craft::BoundingBox )=>bool" },
  { dao_Craft_Octant_AddDrawable, "AddDrawable( self: Craft::Octant, drawable: Craft::Drawable )" },
  { dao_Craft_Octant_RemoveDrawable, "RemoveDrawable( self: Craft::Octant, drawable: Craft::Drawable, resetOctant: bool =true )" },
  { dao_Craft_Octant_GetWorldBoundingBox, "GetWorldBoundingBox( self: Craft::Octant )=>Craft::BoundingBox" },
  { dao_Craft_Octant_GetCullingBox, "GetCullingBox( self: Craft::Octant )=>Craft::BoundingBox" },
  { dao_Craft_Octant_GetLevel, "GetLevel( self: Craft::Octant )=>int" },
  { dao_Craft_Octant_GetParent, "GetParent( self: Craft::Octant )=>Craft::Octant" },
  { dao_Craft_Octant_GetRoot, "GetRoot( self: Craft::Octant )=>Craft::Octree" },
  { dao_Craft_Octant_GetNumDrawables, "GetNumDrawables( self: Craft::Octant )=>int" },
  { dao_Craft_Octant_IsEmpty, "IsEmpty( self: Craft::Octant )=>bool" },
  { dao_Craft_Octant_ResetRoot, "ResetRoot( self: Craft::Octant )" },
  { NULL, NULL }
};
static void Dao_Craft_Octant_Delete( DaoValue *self )
{
	delete (Craft::Octant*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_Octant_Core = 
{
  "Craft::Octant",
  sizeof(Craft::Octant),
  { NULL },
  { NULL },
  dao_Craft_Octant_Nums,
  dao_Craft_Octant_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Octant_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Octant_Core = & Craft_Octant_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_Octant_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BoundingBox_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Octant* parent = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Octant_Core );
  Craft::Octree* root = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Octree_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[4] );

  Craft::Octant *_self = new Craft::Octant( *box, level, parent, root, index );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_Octant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetOrCreateChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Octant* _GetOrCreateChild = self->GetOrCreateChild( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOrCreateChild, dao_Craft_Octant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_DeleteChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->DeleteChild( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_InsertDrawable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );

  self->InsertDrawable( drawable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_CheckDrawableFit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  bool _CheckDrawableFit = self->CheckDrawableFit( *box );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _CheckDrawableFit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_AddDrawable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );

  self->AddDrawable( drawable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_RemoveDrawable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );
  bool resetOctant = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->RemoveDrawable( drawable, resetOctant );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetWorldBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  const Craft::BoundingBox& _GetWorldBoundingBox = self->GetWorldBoundingBox(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetWorldBoundingBox, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetCullingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  const Craft::BoundingBox& _GetCullingBox = self->GetCullingBox(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetCullingBox, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  unsigned int _GetLevel = self->GetLevel(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLevel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  Craft::Octant* _GetParent = self->GetParent(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetParent, dao_Craft_Octant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetRoot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  Craft::Octree* _GetRoot = self->GetRoot(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRoot, dao_Craft_Octree_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_GetNumDrawables( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  unsigned int _GetNumDrawables = self->GetNumDrawables(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumDrawables );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_IsEmpty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  bool _IsEmpty = self->IsEmpty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEmpty );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octant_ResetRoot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octant* self = (Craft::Octant*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octant_Core );

  self->ResetRoot(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Octree_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Octree_Octree_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_AddManualDrawable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_RemoveManualDrawable( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Octree_RaycastSingle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_GetNumLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_QueueUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_CancelUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Octree_DrawDebugGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Octree_Meths[] = 
{
  { dao_Craft_Octree_Octree_dao_2, "Octree(  )=>Craft::Octree" },
  { dao_Craft_Octree_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Octree_SetSize, "SetSize( self: Craft::Octree, box: Craft::BoundingBox, numLevels: int )" },
  { dao_Craft_Octree_Update, "Update( self: Craft::Octree, frame: Craft::FrameInfo )" },
  { dao_Craft_Octree_AddManualDrawable, "AddManualDrawable( self: Craft::Octree, drawable: Craft::Drawable )" },
  { dao_Craft_Octree_RemoveManualDrawable, "RemoveManualDrawable( self: Craft::Octree, drawable: Craft::Drawable )" },
  { dao_Craft_Octree_RaycastSingle, "RaycastSingle( self: Craft::Octree, query :Craft::Ray,maxdist=MATH_INFINITY,texuv=false )=>none|tuple<drawable:Craft::Drawable,node:Craft::Node,position:Craft::Vector3,normal:Craft::Vector3,texuv:Craft::Vector2,distance:float>" },
  { dao_Craft_Octree_GetNumLevels, "GetNumLevels( self: Craft::Octree )=>int" },
  { dao_Craft_Octree_QueueUpdate, "QueueUpdate( self: Craft::Octree, drawable: Craft::Drawable )" },
  { dao_Craft_Octree_CancelUpdate, "CancelUpdate( self: Craft::Octree, drawable: Craft::Drawable )" },
  { dao_Craft_Octree_DrawDebugGeometry, "DrawDebugGeometry( self: Craft::Octree, depthTest: bool )" },
  { NULL, NULL }
};
static void Dao_Craft_Octree_Delete( DaoValue *self )
{
	Craft::Octree *obj = (Craft::Octree*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Octree_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Octree *self = (DaoCxx_Craft_Octree*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Octree_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::Octree*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::Octree*)data);
}
void* dao_cast_Craft_Octree_Craft_Octant( void *data, int down )
{
	if( down ) return static_cast<Craft::Octree*>((Craft::Octant*)data);
	return dynamic_cast<Craft::Octant*>((Craft::Octree*)data);
}

static DaoTypeCore Craft_Octree_Core = 
{
  "Craft::Octree",
  sizeof(Craft::Octree),
  { dao_Craft_Component_Core, dao_Craft_Octant_Core, NULL },
  { dao_cast_Craft_Octree_Craft_Component,dao_cast_Craft_Octree_Craft_Octant,NULL },
  dao_Craft_Octree_Nums,
  dao_Craft_Octree_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Octree_Delete,
  Dao_Craft_Octree_HandleGC
};
DaoTypeCore *dao_Craft_Octree_Core = & Craft_Octree_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_Octree_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Octree *_self = new DaoCxx_Craft_Octree( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Octree::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );
  unsigned int numLevels = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->SetSize( *box, numLevels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->Update( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_AddManualDrawable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );

  self->AddManualDrawable( drawable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_RemoveManualDrawable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );

  self->RemoveManualDrawable( drawable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_GetNumLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );

  unsigned int _GetNumLevels = self->GetNumLevels(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumLevels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_QueueUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );

  self->QueueUpdate( drawable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_CancelUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  Craft::Drawable* drawable = (Craft::Drawable*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Drawable_Core );

  self->CancelUpdate( drawable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Octree_DrawDebugGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Octree* self = (Craft::Octree*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Octree_Core );
  bool depthTest = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->DrawDebugGeometry( depthTest );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_SplinePath_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_SplinePath_SplinePath_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_AddControlPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_RemoveControlPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_ClearControlPoints( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_SetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_SetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_SetControlledNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetControlledNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_Move( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_IsFinished( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_SetControlledIdAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SplinePath_GetControlledIdAttr( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_SplinePath_Meths[] = 
{
  { dao_Craft_SplinePath_SplinePath_dao_2, "SplinePath(  )=>Craft::SplinePath" },
  { dao_Craft_SplinePath_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_SplinePath_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_SplinePath_ApplyAttributes, "ApplyAttributes( self: Craft::SplinePath )" },
  { dao_Craft_SplinePath_AddControlPoint, "AddControlPoint( self: Craft::SplinePath, point: Craft::Node, index: int =MATH_MAX_UNSIGNED )" },
  { dao_Craft_SplinePath_RemoveControlPoint, "RemoveControlPoint( self: Craft::SplinePath, point: Craft::Node )" },
  { dao_Craft_SplinePath_ClearControlPoints, "ClearControlPoints( self: Craft::SplinePath )" },
  { dao_Craft_SplinePath_SetInterpolationMode, "SetInterpolationMode( self: Craft::SplinePath, interpolationMode: int )" },
  { dao_Craft_SplinePath_SetSpeed, "SetSpeed( self: Craft::SplinePath, speed: float )" },
  { dao_Craft_SplinePath_SetPosition, "SetPosition( self: Craft::SplinePath, factor: float )" },
  { dao_Craft_SplinePath_SetControlledNode, "SetControlledNode( self: Craft::SplinePath, controlled: Craft::Node )" },
  { dao_Craft_SplinePath_GetInterpolationMode, "GetInterpolationMode( self: Craft::SplinePath )=>int" },
  { dao_Craft_SplinePath_GetSpeed, "GetSpeed( self: Craft::SplinePath )=>float" },
  { dao_Craft_SplinePath_GetLength, "GetLength( self: Craft::SplinePath )=>float" },
  { dao_Craft_SplinePath_GetPosition, "GetPosition( self: Craft::SplinePath )=>Craft::Vector3" },
  { dao_Craft_SplinePath_GetControlledNode, "GetControlledNode( self: Craft::SplinePath )=>Craft::Node" },
  { dao_Craft_SplinePath_GetPoint, "GetPoint( self: Craft::SplinePath, factor: float )=>Craft::Vector3" },
  { dao_Craft_SplinePath_Move, "Move( self: Craft::SplinePath, timeStep: float )" },
  { dao_Craft_SplinePath_Reset, "Reset( self: Craft::SplinePath )" },
  { dao_Craft_SplinePath_IsFinished, "IsFinished( self: Craft::SplinePath )=>bool" },
  { dao_Craft_SplinePath_SetControlledIdAttr, "SetControlledIdAttr( self: Craft::SplinePath, value: int )" },
  { dao_Craft_SplinePath_GetControlledIdAttr, "GetControlledIdAttr( self: Craft::SplinePath )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_SplinePath_Delete( DaoValue *self )
{
	Craft::SplinePath *obj = (Craft::SplinePath*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_SplinePath_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_SplinePath *self = (DaoCxx_Craft_SplinePath*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_SplinePath_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::SplinePath*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::SplinePath*)data);
}

static DaoTypeCore Craft_SplinePath_Core = 
{
  "Craft::SplinePath",
  sizeof(Craft::SplinePath),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_SplinePath_Craft_Component,NULL },
  dao_Craft_SplinePath_Nums,
  dao_Craft_SplinePath_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_SplinePath_Delete,
  Dao_Craft_SplinePath_HandleGC
};
DaoTypeCore *dao_Craft_SplinePath_Core = & Craft_SplinePath_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_SplinePath_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_SplinePath *_self = new DaoCxx_Craft_SplinePath( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::SplinePath::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::SplinePath::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_AddControlPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  Craft::Node* point = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->AddControlPoint( point, index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_RemoveControlPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  Craft::Node* point = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->RemoveControlPoint( point );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_ClearControlPoints( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  self->ClearControlPoints(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_SetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  Craft::InterpolationMode interpolationMode = (Craft::InterpolationMode) DaoValue_TryGetInteger( _p[1] );

  self->SetInterpolationMode( interpolationMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_SetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  float speed = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSpeed( speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  float factor = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetPosition( factor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_SetControlledNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  Craft::Node* controlled = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->SetControlledNode( controlled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetInterpolationMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  Craft::InterpolationMode _GetInterpolationMode = self->GetInterpolationMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetInterpolationMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  float _GetSpeed = self->GetSpeed(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  float _GetLength = self->GetLength(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLength );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  Craft::Vector3 _GetPosition = self->GetPosition(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetPosition ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetControlledNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  Craft::Node* _GetControlledNode = self->GetControlledNode(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetControlledNode, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  float factor = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::Vector3 _GetPoint = self->GetPoint( factor );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetPoint ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_Move( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Move( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_IsFinished( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  bool _IsFinished = self->IsFinished(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsFinished );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_SetControlledIdAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetControlledIdAttr( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SplinePath_GetControlledIdAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SplinePath* self = (Craft::SplinePath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SplinePath_Core );

  unsigned int _GetControlledIdAttr = self->GetControlledIdAttr(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetControlledIdAttr );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UnknownComponent_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UnknownComponent_UnknownComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_GetType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_LoadXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_SaveXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_SetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_SetType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_GetUseXML( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UnknownComponent_GetTypeNameStatic( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UnknownComponent_Meths[] = 
{
  { dao_Craft_UnknownComponent_UnknownComponent_dao_2, "UnknownComponent(  )=>Craft::UnknownComponent" },
  { dao_Craft_UnknownComponent_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_UnknownComponent_GetType, "GetType( self: Craft::UnknownComponent )=>Craft::StringHash" },
  { dao_Craft_UnknownComponent_GetTypeName, "GetTypeName( self: Craft::UnknownComponent )=>string" },
  { dao_Craft_UnknownComponent_Load, "Load( self: Craft::UnknownComponent, source: Craft::Deserializer )=>bool" },
  { dao_Craft_UnknownComponent_LoadXML, "LoadXML( self: Craft::UnknownComponent, source: Craft::XMLElement )=>bool" },
  { dao_Craft_UnknownComponent_Save, "Save( self: Craft::UnknownComponent, dest: Craft::Serializer )=>bool" },
  { dao_Craft_UnknownComponent_SaveXML, "SaveXML( self: Craft::UnknownComponent, dest: Craft::XMLElement )=>bool" },
  { dao_Craft_UnknownComponent_SetTypeName, "SetTypeName( self: Craft::UnknownComponent, typeName: string )" },
  { dao_Craft_UnknownComponent_SetType, "SetType( self: Craft::UnknownComponent, typeHash: Craft::StringHash )" },
  { dao_Craft_UnknownComponent_GetUseXML, "GetUseXML( self: Craft::UnknownComponent )=>bool" },
  { dao_Craft_UnknownComponent_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_UnknownComponent_GetTypeNameStatic, "GetTypeNameStatic(  )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_UnknownComponent_Delete( DaoValue *self )
{
	Craft::UnknownComponent *obj = (Craft::UnknownComponent*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UnknownComponent_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UnknownComponent *self = (DaoCxx_Craft_UnknownComponent*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UnknownComponent_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::UnknownComponent*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::UnknownComponent*)data);
}

static DaoTypeCore Craft_UnknownComponent_Core = 
{
  "Craft::UnknownComponent",
  sizeof(Craft::UnknownComponent),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_UnknownComponent_Craft_Component,NULL },
  dao_Craft_UnknownComponent_Nums,
  dao_Craft_UnknownComponent_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UnknownComponent_Delete,
  Dao_Craft_UnknownComponent_HandleGC
};
DaoTypeCore *dao_Craft_UnknownComponent_Core = & Craft_UnknownComponent_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_UnknownComponent_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UnknownComponent *_self = new DaoCxx_Craft_UnknownComponent( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::UnknownComponent::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_GetType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );

  Craft::StringHash _GetType = self->GetType(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetType ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_GetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );

  const Craft::String& _GetTypeName = self->GetTypeName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeName.CString(), _GetTypeName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_LoadXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );
  Craft::XMLElement* source = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  bool _LoadXML = self->LoadXML( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_SaveXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );
  Craft::XMLElement* dest = (Craft::XMLElement*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_XMLElement_Core );

  bool _SaveXML = self->SaveXML( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_SetTypeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );
  DString *__str_typeName = DaoValue_TryGetString( _p[1] );
  Craft::String typeName( DString_GetData( __str_typeName ), DString_Size( __str_typeName ) );

  self->SetTypeName( typeName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_SetType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );
  Craft::StringHash* typeHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  self->SetType( *typeHash );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_GetUseXML( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UnknownComponent* self = (Craft::UnknownComponent*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UnknownComponent_Core );

  bool _GetUseXML = self->GetUseXML(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUseXML );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::UnknownComponent::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UnknownComponent_GetTypeNameStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  const Craft::String& _GetTypeNameStatic = Craft::UnknownComponent::GetTypeNameStatic(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTypeNameStatic.CString(), _GetTypeNameStatic.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ScriptComponentFile_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ScriptComponentFile_ScriptComponentFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ScriptComponentFile_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ScriptComponentFile_Meths[] = 
{
  { dao_Craft_ScriptComponentFile_ScriptComponentFile_dao_2, "ScriptComponentFile(  )=>Craft::ScriptComponentFile" },
  { dao_Craft_ScriptComponentFile_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { NULL, NULL }
};
static void Dao_Craft_ScriptComponentFile_Delete( DaoValue *self )
{
	Craft::ScriptComponentFile *obj = (Craft::ScriptComponentFile*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ScriptComponentFile_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ScriptComponentFile *self = (DaoCxx_Craft_ScriptComponentFile*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ScriptComponentFile_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::ScriptComponentFile*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::ScriptComponentFile*)data);
}

static DaoTypeCore Craft_ScriptComponentFile_Core = 
{
  "Craft::ScriptComponentFile",
  sizeof(Craft::ScriptComponentFile),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_ScriptComponentFile_Craft_Resource,NULL },
  dao_Craft_ScriptComponentFile_Nums,
  dao_Craft_ScriptComponentFile_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ScriptComponentFile_Delete,
  Dao_Craft_ScriptComponentFile_HandleGC
};
DaoTypeCore *dao_Craft_ScriptComponentFile_Core = & Craft_ScriptComponentFile_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponentFile_ScriptComponentFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_ScriptComponentFile *_self = new DaoCxx_Craft_ScriptComponentFile( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ScriptComponentFile_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::ScriptComponentFile::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_DaoComponentFile_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_DaoComponentFile_DaoComponentFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponentFile_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponentFile_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponentFile_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponentFile_CreateDaoComponent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoComponentFile_PushModule( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_DaoComponentFile_Meths[] = 
{
  { dao_Craft_DaoComponentFile_DaoComponentFile_dao_2, "DaoComponentFile(  )=>Craft::DaoComponentFile" },
  { dao_Craft_DaoComponentFile_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_DaoComponentFile_BeginLoad, "BeginLoad( self: Craft::DaoComponentFile, source: Craft::Deserializer )=>bool" },
  { dao_Craft_DaoComponentFile_Save, "Save( self: Craft::DaoComponentFile, dest: Craft::Serializer )=>bool" },
  { dao_Craft_DaoComponentFile_CreateDaoComponent, "CreateDaoComponent( self: Craft::DaoComponentFile )=>Craft::DaoComponent" },
  { dao_Craft_DaoComponentFile_PushModule, "PushModule( self: Craft::DaoComponentFile )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_DaoComponentFile_Delete( DaoValue *self )
{
	Craft::DaoComponentFile *obj = (Craft::DaoComponentFile*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_DaoComponentFile_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_DaoComponentFile *self = (DaoCxx_Craft_DaoComponentFile*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_DaoComponentFile_Craft_ScriptComponentFile( void *data, int down )
{
	if( down ) return static_cast<Craft::DaoComponentFile*>((Craft::ScriptComponentFile*)data);
	return dynamic_cast<Craft::ScriptComponentFile*>((Craft::DaoComponentFile*)data);
}

static DaoTypeCore Craft_DaoComponentFile_Core = 
{
  "Craft::DaoComponentFile",
  sizeof(Craft::DaoComponentFile),
  { dao_Craft_ScriptComponentFile_Core, NULL },
  { dao_cast_Craft_DaoComponentFile_Craft_ScriptComponentFile,NULL },
  dao_Craft_DaoComponentFile_Nums,
  dao_Craft_DaoComponentFile_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_DaoComponentFile_Delete,
  Dao_Craft_DaoComponentFile_HandleGC
};
DaoTypeCore *dao_Craft_DaoComponentFile_Core = & Craft_DaoComponentFile_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponentFile_DaoComponentFile_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_DaoComponentFile *_self = new DaoCxx_Craft_DaoComponentFile( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponentFile_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::DaoComponentFile::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponentFile_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponentFile* self = (Craft::DaoComponentFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponentFile_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponentFile_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponentFile* self = (Craft::DaoComponentFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponentFile_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponentFile_CreateDaoComponent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponentFile* self = (Craft::DaoComponentFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponentFile_Core );

  Craft::DaoComponent* _CreateDaoComponent = self->CreateDaoComponent(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _CreateDaoComponent, dao_Craft_DaoComponent_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoComponentFile_PushModule( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoComponentFile* self = (Craft::DaoComponentFile*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoComponentFile_Core );

  bool _PushModule = self->PushModule(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _PushModule );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Graphics_Nums[] = 
{
  { NULL, 0, 0 }
};


extern void dao_Craft_Graphics_Graphics_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetExternalWindow( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetWindowIcon( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetWindowTitle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetWindowPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetWindowPosition_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_Raise( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetMode_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetFlushGPU( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetForceGL2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetOrientations( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ToggleFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_Close( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_TakeScreenShot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_BeginFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_EndFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ResolveToTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetShaderParameter_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_NeedParameterUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_HasShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_HasTextureUnit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ClearParameterSource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ClearParameterSources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ClearTransformSources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetTextureForUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetDefaultTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetTextureParametersDirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ResetRenderTargets( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ResetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_ResetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetRenderTarget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetDepthStencil_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetColorWrite( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetDepthBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetDepthTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetScissorTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetScissorTest_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetStencilTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_BeginDumpShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_EndDumpShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_PrecacheShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_IsInitialized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetExternalWindow( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetWindowTitle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetApiName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetWindowPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetMultiSample( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetBorderless( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetResizable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetVSync( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetTripleBuffer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFlushGPU( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetForceGL2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetOrientations( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_IsDeviceLost( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetNumPrimitives( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetNumBatches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDummyColorFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetShadowMapFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetHiresShadowMapFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetInstancingSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetLightPrepassSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDeferredSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetAnisotropySupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetHardwareShadowSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetReadableDepthSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetSRGBSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetSRGBWriteSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDesktopResolution( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetShader_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetVertexShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetPixelShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetShaderProgram( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetTextureUnit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetTextureUnitName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDefaultTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetColorWrite( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDepthConstantBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDepthSlopeScaledBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDepthTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetScissorTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetScissorRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilTestMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilPass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilFail( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilZFail( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilRef( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilCompareMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetStencilWriteMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetUseClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRenderTargetDimensions( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_CleanupRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_CleanupShaderPrograms( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_Restore( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_Maximize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_Minimize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_MarkFBODirty( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetVBO( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_SetUBO( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetAlphaFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetLuminanceFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetLuminanceAlphaFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGBFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGBAFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGBA16Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGBAFloat16Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGBAFloat32Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRG16Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGFloat16Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetRGFloat32Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFloat16Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFloat32Format( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetLinearDepthFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetDepthStencilFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetReadableDepthFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetFormat_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetPixelUVOffset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetMaxBones( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetGL3Support( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetCurrentMonitor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Graphics_GetMaximized( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Graphics_Meths[] = 
{
  { dao_Craft_Graphics_Graphics_dao_2, "Graphics(  )=>Craft::Graphics" },
  { dao_Craft_Graphics_SetExternalWindow, "SetExternalWindow( self: Craft::Graphics, window: cdata )" },
  { dao_Craft_Graphics_SetWindowIcon, "SetWindowIcon( self: Craft::Graphics, windowIcon: Craft::Image )" },
  { dao_Craft_Graphics_SetWindowTitle, "SetWindowTitle( self: Craft::Graphics, windowTitle: string )" },
  { dao_Craft_Graphics_SetWindowPosition, "SetWindowPosition( self: Craft::Graphics, position: Craft::IntVector2 )" },
  { dao_Craft_Graphics_SetWindowPosition_dao_2, "SetWindowPosition( self: Craft::Graphics, x: int, y: int )" },
  { dao_Craft_Graphics_Raise, "Raise( self: Craft::Graphics )" },
  { dao_Craft_Graphics_SetMode, "SetMode( self: Craft::Graphics, width: int, height: int, fullscreen: bool, borderless: bool, resizable: bool, highDPI: bool, vsync: bool, tripleBuffer: bool, multiSample: int, monitor: int, refreshRate: int )=>bool" },
  { dao_Craft_Graphics_SetMode_dao_2, "SetMode( self: Craft::Graphics, width: int, height: int )=>bool" },
  { dao_Craft_Graphics_SetSRGB, "SetSRGB( self: Craft::Graphics, enable: bool )" },
  { dao_Craft_Graphics_SetFlushGPU, "SetFlushGPU( self: Craft::Graphics, enable: bool )" },
  { dao_Craft_Graphics_SetForceGL2, "SetForceGL2( self: Craft::Graphics, enable: bool )" },
  { dao_Craft_Graphics_SetOrientations, "SetOrientations( self: Craft::Graphics, orientations: string )" },
  { dao_Craft_Graphics_ToggleFullscreen, "ToggleFullscreen( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_Close, "Close( self: Craft::Graphics )" },
  { dao_Craft_Graphics_TakeScreenShot, "TakeScreenShot( self: Craft::Graphics, destImage: Craft::Image )=>bool" },
  { dao_Craft_Graphics_BeginFrame, "BeginFrame( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_EndFrame, "EndFrame( self: Craft::Graphics )" },
  { dao_Craft_Graphics_Clear, "Clear( self: Craft::Graphics, flags: int, color: Craft::Color|none =none, depth: float =1.00, stencil: int =0 )" },
  { dao_Craft_Graphics_ResolveToTexture, "ResolveToTexture( self: Craft::Graphics, destination: Craft::Texture2D, viewport: Craft::IntRect )=>bool" },
  { dao_Craft_Graphics_SetShaders, "SetShaders( self: Craft::Graphics, vs: Craft::ShaderVariation, ps: Craft::ShaderVariation )" },
  { dao_Craft_Graphics_SetShaderParameter, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, data: array<float>, count: int )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_2, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, value: float )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_3, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, color: Craft::Color )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_4, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, vector: Craft::Vector2 )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_5, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, matrix: Craft::Matrix3 )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_6, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, vector: Craft::Vector3 )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_7, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, matrix: Craft::Matrix4 )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_8, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, vector: Craft::Vector4 )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_9, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, matrix: Craft::Matrix3x4 )" },
  { dao_Craft_Graphics_SetShaderParameter_dao_10, "SetShaderParameter( self: Craft::Graphics, param: Craft::StringHash, value: Craft::Variant )" },
  { dao_Craft_Graphics_NeedParameterUpdate, "NeedParameterUpdate( self: Craft::Graphics, group: int, source: cdata )=>bool" },
  { dao_Craft_Graphics_HasShaderParameter, "HasShaderParameter( self: Craft::Graphics, param: Craft::StringHash )=>bool" },
  { dao_Craft_Graphics_HasTextureUnit, "HasTextureUnit( self: Craft::Graphics, unit: int )=>bool" },
  { dao_Craft_Graphics_ClearParameterSource, "ClearParameterSource( self: Craft::Graphics, group: int )" },
  { dao_Craft_Graphics_ClearParameterSources, "ClearParameterSources( self: Craft::Graphics )" },
  { dao_Craft_Graphics_ClearTransformSources, "ClearTransformSources( self: Craft::Graphics )" },
  { dao_Craft_Graphics_SetTexture, "SetTexture( self: Craft::Graphics, index: int, texture: Craft::Texture )" },
  { dao_Craft_Graphics_SetTextureForUpdate, "SetTextureForUpdate( self: Craft::Graphics, texture: Craft::Texture )" },
  { dao_Craft_Graphics_SetDefaultTextureFilterMode, "SetDefaultTextureFilterMode( self: Craft::Graphics, mode: int )" },
  { dao_Craft_Graphics_SetTextureParametersDirty, "SetTextureParametersDirty( self: Craft::Graphics )" },
  { dao_Craft_Graphics_ResetRenderTargets, "ResetRenderTargets( self: Craft::Graphics )" },
  { dao_Craft_Graphics_ResetRenderTarget, "ResetRenderTarget( self: Craft::Graphics, index: int )" },
  { dao_Craft_Graphics_ResetDepthStencil, "ResetDepthStencil( self: Craft::Graphics )" },
  { dao_Craft_Graphics_SetRenderTarget, "SetRenderTarget( self: Craft::Graphics, index: int, renderTarget: Craft::RenderSurface )" },
  { dao_Craft_Graphics_SetRenderTarget_dao_2, "SetRenderTarget( self: Craft::Graphics, index: int, texture: Craft::Texture2D )" },
  { dao_Craft_Graphics_SetDepthStencil, "SetDepthStencil( self: Craft::Graphics, depthStencil: Craft::RenderSurface )" },
  { dao_Craft_Graphics_SetDepthStencil_dao_2, "SetDepthStencil( self: Craft::Graphics, texture: Craft::Texture2D )" },
  { dao_Craft_Graphics_SetViewport, "SetViewport( self: Craft::Graphics, rect: Craft::IntRect )" },
  { dao_Craft_Graphics_SetBlendMode, "SetBlendMode( self: Craft::Graphics, mode: int )" },
  { dao_Craft_Graphics_SetColorWrite, "SetColorWrite( self: Craft::Graphics, enable: bool )" },
  { dao_Craft_Graphics_SetCullMode, "SetCullMode( self: Craft::Graphics, mode: int )" },
  { dao_Craft_Graphics_SetDepthBias, "SetDepthBias( self: Craft::Graphics, constantBias: float, slopeScaledBias: float )" },
  { dao_Craft_Graphics_SetDepthTest, "SetDepthTest( self: Craft::Graphics, mode: int )" },
  { dao_Craft_Graphics_SetDepthWrite, "SetDepthWrite( self: Craft::Graphics, enable: bool )" },
  { dao_Craft_Graphics_SetFillMode, "SetFillMode( self: Craft::Graphics, mode: int )" },
  { dao_Craft_Graphics_SetScissorTest, "SetScissorTest( self: Craft::Graphics, enable: bool, rect: Craft::Rect|none =none, borderInclusive: bool =true )" },
  { dao_Craft_Graphics_SetScissorTest_dao_2, "SetScissorTest( self: Craft::Graphics, enable: bool, rect: Craft::IntRect )" },
  { dao_Craft_Graphics_SetStencilTest, "SetStencilTest( self: Craft::Graphics, enable: bool, mode: int =CMP_ALWAYS, pass: int =OP_KEEP, fail: int =OP_KEEP, zFail: int =OP_KEEP, stencilRef: int =0, compareMask: int =MATH_MAX_UNSIGNED, writeMask: int =MATH_MAX_UNSIGNED )" },
  { dao_Craft_Graphics_SetClipPlane, "SetClipPlane( self: Craft::Graphics, enable: bool, clipPlane: Craft::Plane|none =none, view: Craft::Matrix3x4|none =none, projection: Craft::Matrix4|none =none )" },
  { dao_Craft_Graphics_BeginDumpShaders, "BeginDumpShaders( self: Craft::Graphics, fileName: string )" },
  { dao_Craft_Graphics_EndDumpShaders, "EndDumpShaders( self: Craft::Graphics )" },
  { dao_Craft_Graphics_PrecacheShaders, "PrecacheShaders( self: Craft::Graphics, source: Craft::Deserializer )" },
  { dao_Craft_Graphics_IsInitialized, "IsInitialized( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetExternalWindow, "GetExternalWindow( self: Craft::Graphics )=>cdata" },
  { dao_Craft_Graphics_GetWindowTitle, "GetWindowTitle( self: Craft::Graphics )=>string" },
  { dao_Craft_Graphics_GetApiName, "GetApiName( self: Craft::Graphics )=>string" },
  { dao_Craft_Graphics_GetWindowPosition, "GetWindowPosition( self: Craft::Graphics )=>Craft::IntVector2" },
  { dao_Craft_Graphics_GetWidth, "GetWidth( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetHeight, "GetHeight( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetMultiSample, "GetMultiSample( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetFullscreen, "GetFullscreen( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetBorderless, "GetBorderless( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetResizable, "GetResizable( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetVSync, "GetVSync( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetTripleBuffer, "GetTripleBuffer( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetSRGB, "GetSRGB( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetFlushGPU, "GetFlushGPU( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetForceGL2, "GetForceGL2( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetOrientations, "GetOrientations( self: Craft::Graphics )=>string" },
  { dao_Craft_Graphics_IsDeviceLost, "IsDeviceLost( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetNumPrimitives, "GetNumPrimitives( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetNumBatches, "GetNumBatches( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetDummyColorFormat, "GetDummyColorFormat( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetShadowMapFormat, "GetShadowMapFormat( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetHiresShadowMapFormat, "GetHiresShadowMapFormat( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetInstancingSupport, "GetInstancingSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetLightPrepassSupport, "GetLightPrepassSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetDeferredSupport, "GetDeferredSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetAnisotropySupport, "GetAnisotropySupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetHardwareShadowSupport, "GetHardwareShadowSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetReadableDepthSupport, "GetReadableDepthSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetSRGBSupport, "GetSRGBSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetSRGBWriteSupport, "GetSRGBWriteSupport( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetDesktopResolution, "GetDesktopResolution( self: Craft::Graphics, monitor: int )=>Craft::IntVector2" },
  { dao_Craft_Graphics_GetFormat, "GetFormat( self: Craft::Graphics, format: int )=>int" },
  { dao_Craft_Graphics_GetShader, "GetShader( self: Craft::Graphics, type: int, name: string, defines: string ='' )=>Craft::ShaderVariation" },
  { dao_Craft_Graphics_GetShader_dao_2, "GetShader( self: Craft::Graphics, type: int, name: string, defines: string )=>Craft::ShaderVariation" },
  { dao_Craft_Graphics_GetVertexShader, "GetVertexShader( self: Craft::Graphics )=>Craft::ShaderVariation" },
  { dao_Craft_Graphics_GetPixelShader, "GetPixelShader( self: Craft::Graphics )=>Craft::ShaderVariation" },
  { dao_Craft_Graphics_GetShaderProgram, "GetShaderProgram( self: Craft::Graphics )=>Craft::ShaderProgram" },
  { dao_Craft_Graphics_GetTextureUnit, "GetTextureUnit( self: Craft::Graphics, name: string )=>int" },
  { dao_Craft_Graphics_GetTextureUnitName, "GetTextureUnitName( self: Craft::Graphics, unit: int )=>string" },
  { dao_Craft_Graphics_GetTexture, "GetTexture( self: Craft::Graphics, index: int )=>Craft::Texture" },
  { dao_Craft_Graphics_GetDefaultTextureFilterMode, "GetDefaultTextureFilterMode( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetRenderTarget, "GetRenderTarget( self: Craft::Graphics, index: int )=>Craft::RenderSurface" },
  { dao_Craft_Graphics_GetDepthStencil, "GetDepthStencil( self: Craft::Graphics )=>Craft::RenderSurface" },
  { dao_Craft_Graphics_GetViewport, "GetViewport( self: Craft::Graphics )=>Craft::IntRect" },
  { dao_Craft_Graphics_GetBlendMode, "GetBlendMode( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetColorWrite, "GetColorWrite( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetCullMode, "GetCullMode( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetDepthConstantBias, "GetDepthConstantBias( self: Craft::Graphics )=>float" },
  { dao_Craft_Graphics_GetDepthSlopeScaledBias, "GetDepthSlopeScaledBias( self: Craft::Graphics )=>float" },
  { dao_Craft_Graphics_GetDepthTest, "GetDepthTest( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetDepthWrite, "GetDepthWrite( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetFillMode, "GetFillMode( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilTest, "GetStencilTest( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetScissorTest, "GetScissorTest( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetScissorRect, "GetScissorRect( self: Craft::Graphics )=>Craft::IntRect" },
  { dao_Craft_Graphics_GetStencilTestMode, "GetStencilTestMode( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilPass, "GetStencilPass( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilFail, "GetStencilFail( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilZFail, "GetStencilZFail( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilRef, "GetStencilRef( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilCompareMask, "GetStencilCompareMask( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetStencilWriteMask, "GetStencilWriteMask( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetUseClipPlane, "GetUseClipPlane( self: Craft::Graphics )=>bool" },
  { dao_Craft_Graphics_GetRenderTargetDimensions, "GetRenderTargetDimensions( self: Craft::Graphics )=>Craft::IntVector2" },
  { dao_Craft_Graphics_CleanupRenderSurface, "CleanupRenderSurface( self: Craft::Graphics, surface: Craft::RenderSurface )" },
  { dao_Craft_Graphics_CleanupShaderPrograms, "CleanupShaderPrograms( self: Craft::Graphics, variation: Craft::ShaderVariation )" },
  { dao_Craft_Graphics_Restore, "Restore( self: Craft::Graphics )" },
  { dao_Craft_Graphics_Maximize, "Maximize( self: Craft::Graphics )" },
  { dao_Craft_Graphics_Minimize, "Minimize( self: Craft::Graphics )" },
  { dao_Craft_Graphics_MarkFBODirty, "MarkFBODirty( self: Craft::Graphics )" },
  { dao_Craft_Graphics_SetVBO, "SetVBO( self: Craft::Graphics, object: int )" },
  { dao_Craft_Graphics_SetUBO, "SetUBO( self: Craft::Graphics, object: int )" },
  { dao_Craft_Graphics_GetAlphaFormat, "GetAlphaFormat(  )=>int" },
  { dao_Craft_Graphics_GetLuminanceFormat, "GetLuminanceFormat(  )=>int" },
  { dao_Craft_Graphics_GetLuminanceAlphaFormat, "GetLuminanceAlphaFormat(  )=>int" },
  { dao_Craft_Graphics_GetRGBFormat, "GetRGBFormat(  )=>int" },
  { dao_Craft_Graphics_GetRGBAFormat, "GetRGBAFormat(  )=>int" },
  { dao_Craft_Graphics_GetRGBA16Format, "GetRGBA16Format(  )=>int" },
  { dao_Craft_Graphics_GetRGBAFloat16Format, "GetRGBAFloat16Format(  )=>int" },
  { dao_Craft_Graphics_GetRGBAFloat32Format, "GetRGBAFloat32Format(  )=>int" },
  { dao_Craft_Graphics_GetRG16Format, "GetRG16Format(  )=>int" },
  { dao_Craft_Graphics_GetRGFloat16Format, "GetRGFloat16Format(  )=>int" },
  { dao_Craft_Graphics_GetRGFloat32Format, "GetRGFloat32Format(  )=>int" },
  { dao_Craft_Graphics_GetFloat16Format, "GetFloat16Format(  )=>int" },
  { dao_Craft_Graphics_GetFloat32Format, "GetFloat32Format(  )=>int" },
  { dao_Craft_Graphics_GetLinearDepthFormat, "GetLinearDepthFormat(  )=>int" },
  { dao_Craft_Graphics_GetDepthStencilFormat, "GetDepthStencilFormat(  )=>int" },
  { dao_Craft_Graphics_GetReadableDepthFormat, "GetReadableDepthFormat(  )=>int" },
  { dao_Craft_Graphics_GetFormat_dao_2, "GetFormat( formatName: string )=>int" },
  { dao_Craft_Graphics_GetPixelUVOffset, "GetPixelUVOffset(  )=>Craft::Vector2" },
  { dao_Craft_Graphics_GetMaxBones, "GetMaxBones(  )=>int" },
  { dao_Craft_Graphics_GetGL3Support, "GetGL3Support(  )=>bool" },
  { dao_Craft_Graphics_GetCurrentMonitor, "GetCurrentMonitor( self: Craft::Graphics )=>int" },
  { dao_Craft_Graphics_GetMaximized, "GetMaximized( self: Craft::Graphics )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Graphics_Delete( DaoValue *self )
{
	Craft::Graphics *obj = (Craft::Graphics*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Graphics_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Graphics *self = (DaoCxx_Craft_Graphics*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Graphics_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Graphics*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Graphics*)data);
}

static DaoTypeCore Craft_Graphics_Core = 
{
  "Craft::Graphics",
  sizeof(Craft::Graphics),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Graphics_Craft_Object,NULL },
  dao_Craft_Graphics_Nums,
  dao_Craft_Graphics_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Graphics_Delete,
  Dao_Craft_Graphics_HandleGC
};
DaoTypeCore *dao_Craft_Graphics_Core = & Craft_Graphics_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetExternalWindow( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  void* window = (void*) DaoValue_TryGetCdata( _p[1] );

  self->SetExternalWindow( window );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetWindowIcon( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::Image* windowIcon = (Craft::Image*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Image_Core );

  self->SetWindowIcon( windowIcon );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetWindowTitle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  DString *__str_windowTitle = DaoValue_TryGetString( _p[1] );
  Craft::String windowTitle( DString_GetData( __str_windowTitle ), DString_Size( __str_windowTitle ) );

  self->SetWindowTitle( windowTitle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetWindowPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::IntVector2* position = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );

  self->SetWindowPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetWindowPosition_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  self->SetWindowPosition( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_Raise( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->Raise(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );
  bool fullscreen = (bool) DaoValue_TryGetBoolean( _p[3] );
  bool borderless = (bool) DaoValue_TryGetBoolean( _p[4] );
  bool resizable = (bool) DaoValue_TryGetBoolean( _p[5] );
  bool highDPI = (bool) DaoValue_TryGetBoolean( _p[6] );
  bool vsync = (bool) DaoValue_TryGetBoolean( _p[7] );
  bool tripleBuffer = (bool) DaoValue_TryGetBoolean( _p[8] );
  int multiSample = (int) DaoValue_TryGetInteger( _p[9] );
  int monitor = (int) DaoValue_TryGetInteger( _p[10] );
  int refreshRate = (int) DaoValue_TryGetInteger( _p[11] );

  bool _SetMode = self->SetMode( width, height, fullscreen, borderless, resizable, highDPI, vsync, tripleBuffer, multiSample, monitor, refreshRate );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetMode_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );

  bool _SetMode = self->SetMode( width, height );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSRGB( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetFlushGPU( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetFlushGPU( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetForceGL2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetForceGL2( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetOrientations( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  DString *__str_orientations = DaoValue_TryGetString( _p[1] );
  Craft::String orientations( DString_GetData( __str_orientations ), DString_Size( __str_orientations ) );

  self->SetOrientations( orientations );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ToggleFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _ToggleFullscreen = self->ToggleFullscreen(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ToggleFullscreen );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_Close( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->Close(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_TakeScreenShot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::Image* destImage = (Craft::Image*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Image_Core );

  bool _TakeScreenShot = self->TakeScreenShot( *destImage );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _TakeScreenShot );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_BeginFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _BeginFrame = self->BeginFrame(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginFrame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_EndFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->EndFrame(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int flags = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Color_Core );
  float depth = (float) DaoValue_TryGetFloat( _p[3] );
  unsigned int stencil = (unsigned int) DaoValue_TryGetInteger( _p[4] );

  if(_n<=2) self->Clear( flags );
  else self->Clear( flags, *color, depth, stencil );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ResolveToTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::Texture2D* destination = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture2D_Core );
  Craft::IntRect* viewport = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntRect_Core );

  bool _ResolveToTexture = self->ResolveToTexture( destination, *viewport );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ResolveToTexture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::ShaderVariation* vs = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ShaderVariation_Core );
  Craft::ShaderVariation* ps = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_ShaderVariation_Core );

  self->SetShaders( vs, ps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  unsigned int count = (unsigned int) DaoValue_TryGetInteger( _p[3] );
  const float* data = (const float*) DaoArray_ToFloat32( (DaoArray*)_p[2] );

  self->SetShaderParameter( *param, data, count );
  DaoArray_FromFloat32( (DaoArray*)_p[2] );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  float value = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetShaderParameter( *param, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Color_Core );

  self->SetShaderParameter( *param, *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Vector2* vector = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector2_Core );

  self->SetShaderParameter( *param, *vector );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Matrix3* matrix = (Craft::Matrix3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Matrix3_Core );

  self->SetShaderParameter( *param, *matrix );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Vector3* vector = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );

  self->SetShaderParameter( *param, *vector );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Matrix4* matrix = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Matrix4_Core );

  self->SetShaderParameter( *param, *matrix );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_8( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Vector4* vector = (Craft::Vector4*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector4_Core );

  self->SetShaderParameter( *param, *vector );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_9( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Matrix3x4* matrix = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Matrix3x4_Core );

  self->SetShaderParameter( *param, *matrix );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetShaderParameter_dao_10( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  self->SetShaderParameter( *param, *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_NeedParameterUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::ShaderParameterGroup group = (Craft::ShaderParameterGroup) DaoValue_TryGetInteger( _p[1] );
  const void* source = (const void*) DaoValue_TryGetCdata( _p[2] );

  bool _NeedParameterUpdate = self->NeedParameterUpdate( group, source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _NeedParameterUpdate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_HasShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::StringHash* param = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  bool _HasShaderParameter = self->HasShaderParameter( *param );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasShaderParameter );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_HasTextureUnit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[1] );

  bool _HasTextureUnit = self->HasTextureUnit( unit );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasTextureUnit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ClearParameterSource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::ShaderParameterGroup group = (Craft::ShaderParameterGroup) DaoValue_TryGetInteger( _p[1] );

  self->ClearParameterSource( group );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ClearParameterSources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->ClearParameterSources(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ClearTransformSources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->ClearTransformSources(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Texture_Core );

  self->SetTexture( index, texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetTextureForUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture_Core );

  self->SetTextureForUpdate( texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetDefaultTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::TextureFilterMode mode = (Craft::TextureFilterMode) DaoValue_TryGetInteger( _p[1] );

  self->SetDefaultTextureFilterMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetTextureParametersDirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->SetTextureParametersDirty(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ResetRenderTargets( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->ResetRenderTargets(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ResetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->ResetRenderTarget( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_ResetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->ResetDepthStencil(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::RenderSurface* renderTarget = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_RenderSurface_Core );

  self->SetRenderTarget( index, renderTarget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetRenderTarget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Texture2D* texture = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Texture2D_Core );

  self->SetRenderTarget( index, texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::RenderSurface* depthStencil = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );

  self->SetDepthStencil( depthStencil );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetDepthStencil_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::Texture2D* texture = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture2D_Core );

  self->SetDepthStencil( texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::IntRect* rect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntRect_Core );

  self->SetViewport( *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::BlendMode mode = (Craft::BlendMode) DaoValue_TryGetInteger( _p[1] );

  self->SetBlendMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetColorWrite( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetColorWrite( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::CullMode mode = (Craft::CullMode) DaoValue_TryGetInteger( _p[1] );

  self->SetCullMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetDepthBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  float constantBias = (float) DaoValue_TryGetFloat( _p[1] );
  float slopeScaledBias = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetDepthBias( constantBias, slopeScaledBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetDepthTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::CompareMode mode = (Craft::CompareMode) DaoValue_TryGetInteger( _p[1] );

  self->SetDepthTest( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDepthWrite( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::FillMode mode = (Craft::FillMode) DaoValue_TryGetInteger( _p[1] );

  self->SetFillMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetScissorTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );
  Craft::Rect* rect = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Rect_Core );
  bool borderInclusive = (bool) DaoValue_TryGetBoolean( _p[3] );

  if(_n<=2) self->SetScissorTest( enable );
  else self->SetScissorTest( enable, *rect, borderInclusive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetScissorTest_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );
  Craft::IntRect* rect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntRect_Core );

  self->SetScissorTest( enable, *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetStencilTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );
  Craft::CompareMode mode = (Craft::CompareMode) DaoValue_TryGetInteger( _p[2] );
  Craft::StencilOp pass = (Craft::StencilOp) DaoValue_TryGetInteger( _p[3] );
  Craft::StencilOp fail = (Craft::StencilOp) DaoValue_TryGetInteger( _p[4] );
  Craft::StencilOp zFail = (Craft::StencilOp) DaoValue_TryGetInteger( _p[5] );
  unsigned int stencilRef = (unsigned int) DaoValue_TryGetInteger( _p[6] );
  unsigned int compareMask = (unsigned int) DaoValue_TryGetInteger( _p[7] );
  unsigned int writeMask = (unsigned int) DaoValue_TryGetInteger( _p[8] );

  self->SetStencilTest( enable, mode, pass, fail, zFail, stencilRef, compareMask, writeMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );
  Craft::Plane* clipPlane = (Craft::Plane*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Plane_Core );
  Craft::Matrix3x4* view = (Craft::Matrix3x4*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Matrix3x4_Core );
  Craft::Matrix4* projection = (Craft::Matrix4*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_Matrix4_Core );

  if(_n<=2) self->SetClipPlane( enable );
  else if(_n<=3) self->SetClipPlane( enable, *clipPlane );
  else if(_n<=4) self->SetClipPlane( enable, *clipPlane, *view );
  else self->SetClipPlane( enable, *clipPlane, *view, *projection );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_BeginDumpShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  self->BeginDumpShaders( fileName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_EndDumpShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->EndDumpShaders(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_PrecacheShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  self->PrecacheShaders( *source );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_IsInitialized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _IsInitialized = self->IsInitialized(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInitialized );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetExternalWindow( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  void* _GetExternalWindow = self->GetExternalWindow(  );
  DaoProcess_WrapCdata( _proc, (void*) _GetExternalWindow, NULL );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetWindowTitle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  const Craft::String& _GetWindowTitle = self->GetWindowTitle(  );
  DaoProcess_PutBytes( _proc, (char*) _GetWindowTitle.CString(), _GetWindowTitle.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetApiName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  const Craft::String& _GetApiName = self->GetApiName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetApiName.CString(), _GetApiName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetWindowPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::IntVector2 _GetWindowPosition = self->GetWindowPosition(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _GetWindowPosition ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  int _GetWidth = self->GetWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  int _GetHeight = self->GetHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetMultiSample( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  int _GetMultiSample = self->GetMultiSample(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMultiSample );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetFullscreen = self->GetFullscreen(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetFullscreen );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetBorderless( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetBorderless = self->GetBorderless(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetBorderless );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetResizable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetResizable = self->GetResizable(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetResizable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetVSync( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetVSync = self->GetVSync(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetVSync );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetTripleBuffer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetTripleBuffer = self->GetTripleBuffer(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetTripleBuffer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetSRGB( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetSRGB = self->GetSRGB(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSRGB );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFlushGPU( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetFlushGPU = self->GetFlushGPU(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetFlushGPU );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetForceGL2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetForceGL2 = self->GetForceGL2(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetForceGL2 );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetOrientations( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  const Craft::String& _GetOrientations = self->GetOrientations(  );
  DaoProcess_PutBytes( _proc, (char*) _GetOrientations.CString(), _GetOrientations.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_IsDeviceLost( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _IsDeviceLost = self->IsDeviceLost(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsDeviceLost );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetNumPrimitives( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetNumPrimitives = self->GetNumPrimitives(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumPrimitives );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetNumBatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetNumBatches = self->GetNumBatches(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumBatches );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDummyColorFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetDummyColorFormat = self->GetDummyColorFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDummyColorFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetShadowMapFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetShadowMapFormat = self->GetShadowMapFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadowMapFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetHiresShadowMapFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetHiresShadowMapFormat = self->GetHiresShadowMapFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHiresShadowMapFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetInstancingSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetInstancingSupport = self->GetInstancingSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetInstancingSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetLightPrepassSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetLightPrepassSupport = self->GetLightPrepassSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetLightPrepassSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDeferredSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetDeferredSupport = self->GetDeferredSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDeferredSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetAnisotropySupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetAnisotropySupport = self->GetAnisotropySupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAnisotropySupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetHardwareShadowSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetHardwareShadowSupport = self->GetHardwareShadowSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetHardwareShadowSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetReadableDepthSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetReadableDepthSupport = self->GetReadableDepthSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetReadableDepthSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetSRGBSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetSRGBSupport = self->GetSRGBSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSRGBSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetSRGBWriteSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetSRGBWriteSupport = self->GetSRGBWriteSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSRGBWriteSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDesktopResolution( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  int monitor = (int) DaoValue_TryGetInteger( _p[1] );

  Craft::IntVector2 _GetDesktopResolution = self->GetDesktopResolution( monitor );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _GetDesktopResolution ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::CompressedFormat format = (Craft::CompressedFormat) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetFormat = self->GetFormat( format );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::ShaderType type = (Craft::ShaderType) DaoValue_TryGetInteger( _p[1] );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  DString *__str_defines = DaoValue_TryGetString( _p[3] );
  Craft::String defines( DString_GetData( __str_defines ), DString_Size( __str_defines ) );

  Craft::ShaderVariation* _GetShader = self->GetShader( type, name, defines );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShader, dao_Craft_ShaderVariation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetShader_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::ShaderType type = (Craft::ShaderType) DaoValue_TryGetInteger( _p[1] );
  const char* name = (const char*) DaoValue_TryGetChars( _p[2] );
  const char* defines = (const char*) DaoValue_TryGetChars( _p[3] );

  Craft::ShaderVariation* _GetShader = self->GetShader( type, name, defines );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShader, dao_Craft_ShaderVariation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetVertexShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::ShaderVariation* _GetVertexShader = self->GetVertexShader(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetVertexShader, dao_Craft_ShaderVariation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetPixelShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::ShaderVariation* _GetPixelShader = self->GetPixelShader(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPixelShader, dao_Craft_ShaderVariation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetShaderProgram( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::ShaderProgram* _GetShaderProgram = self->GetShaderProgram(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShaderProgram, dao_Craft_ShaderProgram_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetTextureUnit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::TextureUnit _GetTextureUnit = self->GetTextureUnit( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTextureUnit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetTextureUnitName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[1] );

  const Craft::String& _GetTextureUnitName = self->GetTextureUnitName( unit );
  DaoProcess_PutBytes( _proc, (char*) _GetTextureUnitName.CString(), _GetTextureUnitName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Texture* _GetTexture = self->GetTexture( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDefaultTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::TextureFilterMode _GetDefaultTextureFilterMode = self->GetDefaultTextureFilterMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDefaultTextureFilterMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::RenderSurface* _GetRenderTarget = self->GetRenderTarget( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderTarget, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::RenderSurface* _GetDepthStencil = self->GetDepthStencil(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDepthStencil, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::IntRect _GetViewport = self->GetViewport(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntRect( _GetViewport ), dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::BlendMode _GetBlendMode = self->GetBlendMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetBlendMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetColorWrite( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetColorWrite = self->GetColorWrite(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetColorWrite );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::CullMode _GetCullMode = self->GetCullMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCullMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDepthConstantBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  float _GetDepthConstantBias = self->GetDepthConstantBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDepthConstantBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDepthSlopeScaledBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  float _GetDepthSlopeScaledBias = self->GetDepthSlopeScaledBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDepthSlopeScaledBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDepthTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::CompareMode _GetDepthTest = self->GetDepthTest(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDepthTest );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetDepthWrite = self->GetDepthWrite(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDepthWrite );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFillMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::FillMode _GetFillMode = self->GetFillMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFillMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetStencilTest = self->GetStencilTest(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetStencilTest );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetScissorTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetScissorTest = self->GetScissorTest(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetScissorTest );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetScissorRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  const Craft::IntRect& _GetScissorRect = self->GetScissorRect(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetScissorRect, dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilTestMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::CompareMode _GetStencilTestMode = self->GetStencilTestMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilTestMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilPass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::StencilOp _GetStencilPass = self->GetStencilPass(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilPass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilFail( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::StencilOp _GetStencilFail = self->GetStencilFail(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilFail );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilZFail( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::StencilOp _GetStencilZFail = self->GetStencilZFail(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilZFail );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilRef( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetStencilRef = self->GetStencilRef(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilRef );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilCompareMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetStencilCompareMask = self->GetStencilCompareMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilCompareMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetStencilWriteMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  unsigned int _GetStencilWriteMask = self->GetStencilWriteMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStencilWriteMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetUseClipPlane( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetUseClipPlane = self->GetUseClipPlane(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUseClipPlane );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRenderTargetDimensions( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  Craft::IntVector2 _GetRenderTargetDimensions = self->GetRenderTargetDimensions(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _GetRenderTargetDimensions ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_CleanupRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::RenderSurface* surface = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );

  self->CleanupRenderSurface( surface );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_CleanupShaderPrograms( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  Craft::ShaderVariation* variation = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ShaderVariation_Core );

  self->CleanupShaderPrograms( variation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_Restore( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->Restore(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_Maximize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->Maximize(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_Minimize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->Minimize(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_MarkFBODirty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  self->MarkFBODirty(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetVBO( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int object = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetVBO( object );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_SetUBO( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );
  unsigned int object = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetUBO( object );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetAlphaFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetAlphaFormat = Craft::Graphics::GetAlphaFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAlphaFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetLuminanceFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetLuminanceFormat = Craft::Graphics::GetLuminanceFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLuminanceFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetLuminanceAlphaFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetLuminanceAlphaFormat = Craft::Graphics::GetLuminanceAlphaFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLuminanceAlphaFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGBFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGBFormat = Craft::Graphics::GetRGBFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGBFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGBAFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGBAFormat = Craft::Graphics::GetRGBAFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGBAFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGBA16Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGBA16Format = Craft::Graphics::GetRGBA16Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGBA16Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGBAFloat16Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGBAFloat16Format = Craft::Graphics::GetRGBAFloat16Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGBAFloat16Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGBAFloat32Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGBAFloat32Format = Craft::Graphics::GetRGBAFloat32Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGBAFloat32Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRG16Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRG16Format = Craft::Graphics::GetRG16Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRG16Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGFloat16Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGFloat16Format = Craft::Graphics::GetRGFloat16Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGFloat16Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetRGFloat32Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetRGFloat32Format = Craft::Graphics::GetRGFloat32Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetRGFloat32Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFloat16Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetFloat16Format = Craft::Graphics::GetFloat16Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFloat16Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFloat32Format( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetFloat32Format = Craft::Graphics::GetFloat32Format(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFloat32Format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetLinearDepthFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetLinearDepthFormat = Craft::Graphics::GetLinearDepthFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLinearDepthFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetDepthStencilFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetDepthStencilFormat = Craft::Graphics::GetDepthStencilFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDepthStencilFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetReadableDepthFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetReadableDepthFormat = Craft::Graphics::GetReadableDepthFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetReadableDepthFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetFormat_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_formatName = DaoValue_TryGetString( _p[0] );
  Craft::String formatName( DString_GetData( __str_formatName ), DString_Size( __str_formatName ) );

  unsigned int _GetFormat = Craft::Graphics::GetFormat( formatName );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetPixelUVOffset( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  const Craft::Vector2& _GetPixelUVOffset = Craft::Graphics::GetPixelUVOffset(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetPixelUVOffset, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetMaxBones( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  unsigned int _GetMaxBones = Craft::Graphics::GetMaxBones(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxBones );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetGL3Support( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  bool _GetGL3Support = Craft::Graphics::GetGL3Support(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetGL3Support );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetCurrentMonitor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  int _GetCurrentMonitor = self->GetCurrentMonitor(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCurrentMonitor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Graphics_GetMaximized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Graphics* self = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Graphics_Core );

  bool _GetMaximized = self->GetMaximized(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetMaximized );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Light_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Light_Light_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetLightType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetPerVertex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetSpecularIntensity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetBrightness( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetRange( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetFov( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowCascade( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowFocus( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowIntensity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowResolution( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShadowNearFarRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetRampTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetShapeTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetLightType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetPerVertex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetSpecularIntensity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetBrightness( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetEffectiveColor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetEffectiveSpecularIntensity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetRange( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetFov( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowCascade( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowFocus( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowIntensity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowResolution( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShadowNearFarRatio( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetRampTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetShapeTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetFrustum( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetNumShadowSplits( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_IsNegative( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetIntensitySortValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_SetIntensitySortValue_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetVolumeTransform( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Light_GetIntensityDivisor( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Light_Meths[] = 
{
  { dao_Craft_Light_Light_dao_2, "Light(  )=>Craft::Light" },
  { dao_Craft_Light_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Light_SetLightType, "SetLightType( self: Craft::Light, type: int )" },
  { dao_Craft_Light_SetPerVertex, "SetPerVertex( self: Craft::Light, enable: bool )" },
  { dao_Craft_Light_SetColor, "SetColor( self: Craft::Light, color: Craft::Color )" },
  { dao_Craft_Light_SetSpecularIntensity, "SetSpecularIntensity( self: Craft::Light, intensity: float )" },
  { dao_Craft_Light_SetBrightness, "SetBrightness( self: Craft::Light, brightness: float )" },
  { dao_Craft_Light_SetRange, "SetRange( self: Craft::Light, range: float )" },
  { dao_Craft_Light_SetFov, "SetFov( self: Craft::Light, fov: float )" },
  { dao_Craft_Light_SetAspectRatio, "SetAspectRatio( self: Craft::Light, aspectRatio: float )" },
  { dao_Craft_Light_SetFadeDistance, "SetFadeDistance( self: Craft::Light, distance: float )" },
  { dao_Craft_Light_SetShadowFadeDistance, "SetShadowFadeDistance( self: Craft::Light, distance: float )" },
  { dao_Craft_Light_SetShadowBias, "SetShadowBias( self: Craft::Light, parameters: Craft::BiasParameters )" },
  { dao_Craft_Light_SetShadowCascade, "SetShadowCascade( self: Craft::Light, parameters: Craft::CascadeParameters )" },
  { dao_Craft_Light_SetShadowFocus, "SetShadowFocus( self: Craft::Light, parameters: Craft::FocusParameters )" },
  { dao_Craft_Light_SetShadowIntensity, "SetShadowIntensity( self: Craft::Light, intensity: float )" },
  { dao_Craft_Light_SetShadowResolution, "SetShadowResolution( self: Craft::Light, resolution: float )" },
  { dao_Craft_Light_SetShadowNearFarRatio, "SetShadowNearFarRatio( self: Craft::Light, nearFarRatio: float )" },
  { dao_Craft_Light_SetRampTexture, "SetRampTexture( self: Craft::Light, texture: Craft::Texture )" },
  { dao_Craft_Light_SetShapeTexture, "SetShapeTexture( self: Craft::Light, texture: Craft::Texture )" },
  { dao_Craft_Light_GetLightType, "GetLightType( self: Craft::Light )=>int" },
  { dao_Craft_Light_GetPerVertex, "GetPerVertex( self: Craft::Light )=>bool" },
  { dao_Craft_Light_GetColor, "GetColor( self: Craft::Light )=>Craft::Color" },
  { dao_Craft_Light_GetSpecularIntensity, "GetSpecularIntensity( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetBrightness, "GetBrightness( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetEffectiveColor, "GetEffectiveColor( self: Craft::Light )=>Craft::Color" },
  { dao_Craft_Light_GetEffectiveSpecularIntensity, "GetEffectiveSpecularIntensity( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetRange, "GetRange( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetFov, "GetFov( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetAspectRatio, "GetAspectRatio( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetFadeDistance, "GetFadeDistance( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetShadowFadeDistance, "GetShadowFadeDistance( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetShadowBias, "GetShadowBias( self: Craft::Light )=>Craft::BiasParameters" },
  { dao_Craft_Light_GetShadowCascade, "GetShadowCascade( self: Craft::Light )=>Craft::CascadeParameters" },
  { dao_Craft_Light_GetShadowFocus, "GetShadowFocus( self: Craft::Light )=>Craft::FocusParameters" },
  { dao_Craft_Light_GetShadowIntensity, "GetShadowIntensity( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetShadowResolution, "GetShadowResolution( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetShadowNearFarRatio, "GetShadowNearFarRatio( self: Craft::Light )=>float" },
  { dao_Craft_Light_GetRampTexture, "GetRampTexture( self: Craft::Light )=>Craft::Texture" },
  { dao_Craft_Light_GetShapeTexture, "GetShapeTexture( self: Craft::Light )=>Craft::Texture" },
  { dao_Craft_Light_GetFrustum, "GetFrustum( self: Craft::Light )=>Craft::Frustum" },
  { dao_Craft_Light_GetNumShadowSplits, "GetNumShadowSplits( self: Craft::Light )=>int" },
  { dao_Craft_Light_IsNegative, "IsNegative( self: Craft::Light )=>bool" },
  { dao_Craft_Light_SetIntensitySortValue, "SetIntensitySortValue( self: Craft::Light, distance: float )" },
  { dao_Craft_Light_SetIntensitySortValue_dao_2, "SetIntensitySortValue( self: Craft::Light, box: Craft::BoundingBox )" },
  { dao_Craft_Light_GetVolumeTransform, "GetVolumeTransform( self: Craft::Light, camera: Craft::Camera )=>Craft::Matrix3x4" },
  { dao_Craft_Light_GetIntensityDivisor, "GetIntensityDivisor( self: Craft::Light, attenuation: float =1.00 )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_Light_Delete( DaoValue *self )
{
	Craft::Light *obj = (Craft::Light*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Light_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Light *self = (DaoCxx_Craft_Light*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Light_Craft_Drawable( void *data, int down )
{
	if( down ) return static_cast<Craft::Light*>((Craft::Drawable*)data);
	return dynamic_cast<Craft::Drawable*>((Craft::Light*)data);
}

static DaoTypeCore Craft_Light_Core = 
{
  "Craft::Light",
  sizeof(Craft::Light),
  { dao_Craft_Drawable_Core, NULL },
  { dao_cast_Craft_Light_Craft_Drawable,NULL },
  dao_Craft_Light_Nums,
  dao_Craft_Light_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Light_Delete,
  Dao_Craft_Light_HandleGC
};
DaoTypeCore *dao_Craft_Light_Core = & Craft_Light_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_Light_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Light *_self = new DaoCxx_Craft_Light( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Light::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetLightType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::LightType type = (Craft::LightType) DaoValue_TryGetInteger( _p[1] );

  self->SetLightType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetPerVertex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetPerVertex( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );

  self->SetColor( *color );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetSpecularIntensity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float intensity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSpecularIntensity( intensity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetBrightness( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float brightness = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetBrightness( brightness );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetRange( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float range = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetRange( range );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetFov( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float fov = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFov( fov );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float aspectRatio = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAspectRatio( aspectRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFadeDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetShadowFadeDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::BiasParameters* parameters = (Craft::BiasParameters*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BiasParameters_Core );

  self->SetShadowBias( *parameters );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowCascade( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::CascadeParameters* parameters = (Craft::CascadeParameters*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_CascadeParameters_Core );

  self->SetShadowCascade( *parameters );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowFocus( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::FocusParameters* parameters = (Craft::FocusParameters*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FocusParameters_Core );

  self->SetShadowFocus( *parameters );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowIntensity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float intensity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetShadowIntensity( intensity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowResolution( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float resolution = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetShadowResolution( resolution );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShadowNearFarRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float nearFarRatio = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetShadowNearFarRatio( nearFarRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetRampTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture_Core );

  self->SetRampTexture( texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetShapeTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture_Core );

  self->SetShapeTexture( texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetLightType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  Craft::LightType _GetLightType = self->GetLightType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLightType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetPerVertex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  bool _GetPerVertex = self->GetPerVertex(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetPerVertex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  const Craft::Color& _GetColor = self->GetColor(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetColor, dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetSpecularIntensity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetSpecularIntensity = self->GetSpecularIntensity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSpecularIntensity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetBrightness( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetBrightness = self->GetBrightness(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetBrightness );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetEffectiveColor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  Craft::Color _GetEffectiveColor = self->GetEffectiveColor(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _GetEffectiveColor ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetEffectiveSpecularIntensity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetEffectiveSpecularIntensity = self->GetEffectiveSpecularIntensity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetEffectiveSpecularIntensity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetRange( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetRange = self->GetRange(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRange );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetFov( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetFov = self->GetFov(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFov );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetAspectRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetAspectRatio = self->GetAspectRatio(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAspectRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetFadeDistance = self->GetFadeDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFadeDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowFadeDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetShadowFadeDistance = self->GetShadowFadeDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowFadeDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  const Craft::BiasParameters& _GetShadowBias = self->GetShadowBias(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetShadowBias, dao_Craft_BiasParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowCascade( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  const Craft::CascadeParameters& _GetShadowCascade = self->GetShadowCascade(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetShadowCascade, dao_Craft_CascadeParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowFocus( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  const Craft::FocusParameters& _GetShadowFocus = self->GetShadowFocus(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetShadowFocus, dao_Craft_FocusParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowIntensity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetShadowIntensity = self->GetShadowIntensity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowIntensity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowResolution( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetShadowResolution = self->GetShadowResolution(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowResolution );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShadowNearFarRatio( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  float _GetShadowNearFarRatio = self->GetShadowNearFarRatio(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowNearFarRatio );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetRampTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  Craft::Texture* _GetRampTexture = self->GetRampTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRampTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetShapeTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  Craft::Texture* _GetShapeTexture = self->GetShapeTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShapeTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetFrustum( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  Craft::Frustum _GetFrustum = self->GetFrustum(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Frustum( _GetFrustum ), dao_Craft_Frustum_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetNumShadowSplits( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  int _GetNumShadowSplits = self->GetNumShadowSplits(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumShadowSplits );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_IsNegative( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );

  bool _IsNegative = self->IsNegative(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsNegative );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetIntensitySortValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetIntensitySortValue( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_SetIntensitySortValue_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->SetIntensitySortValue( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetVolumeTransform( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Camera_Core );

  const Craft::Matrix3x4& _GetVolumeTransform = self->GetVolumeTransform( camera );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetVolumeTransform, dao_Craft_Matrix3x4_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Light_GetIntensityDivisor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Light* self = (Craft::Light*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Light_Core );
  float attenuation = (float) DaoValue_TryGetFloat( _p[1] );

  float _GetIntensityDivisor = self->GetIntensityDivisor( attenuation );
  DaoProcess_PutFloat( _proc, (dao_float) _GetIntensityDivisor );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Viewport_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Viewport_Viewport_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_Viewport_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_Viewport_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_SetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_SetCamera( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_SetRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_SetRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_SetDrawDebug( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetCamera( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetDrawDebug( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_GetScreenRay( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_WorldToScreenPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_ScreenToWorldPoint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Viewport_AllocateView( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Viewport_Meths[] = 
{
  { dao_Craft_Viewport_Viewport_dao_4, "Viewport(  )=>Craft::Viewport" },
  { dao_Craft_Viewport_Viewport_dao_5, "Viewport( scene: Craft::Scene, camera: Craft::Camera, renderPath: Craft::RenderPath|none =none )=>Craft::Viewport" },
  { dao_Craft_Viewport_Viewport_dao_6, "Viewport( scene: Craft::Scene, camera: Craft::Camera, rect: Craft::IntRect, renderPath: Craft::RenderPath|none =none )=>Craft::Viewport" },
  { dao_Craft_Viewport_SetScene, "SetScene( self: Craft::Viewport, scene: Craft::Scene )" },
  { dao_Craft_Viewport_SetCamera, "SetCamera( self: Craft::Viewport, camera: Craft::Camera )" },
  { dao_Craft_Viewport_SetRect, "SetRect( self: Craft::Viewport, rect: Craft::IntRect )" },
  { dao_Craft_Viewport_SetRenderPath, "SetRenderPath( self: Craft::Viewport, path: Craft::RenderPath )" },
  { dao_Craft_Viewport_SetDrawDebug, "SetDrawDebug( self: Craft::Viewport, enable: bool )" },
  { dao_Craft_Viewport_GetScene, "GetScene( self: Craft::Viewport )=>Craft::Scene" },
  { dao_Craft_Viewport_GetCamera, "GetCamera( self: Craft::Viewport )=>Craft::Camera" },
  { dao_Craft_Viewport_GetView, "GetView( self: Craft::Viewport )=>Craft::View" },
  { dao_Craft_Viewport_GetRect, "GetRect( self: Craft::Viewport )=>Craft::IntRect" },
  { dao_Craft_Viewport_GetRenderPath, "GetRenderPath( self: Craft::Viewport )=>Craft::RenderPath" },
  { dao_Craft_Viewport_GetDrawDebug, "GetDrawDebug( self: Craft::Viewport )=>bool" },
  { dao_Craft_Viewport_GetScreenRay, "GetScreenRay( self: Craft::Viewport, x: int, y: int )=>Craft::Ray" },
  { dao_Craft_Viewport_WorldToScreenPoint, "WorldToScreenPoint( self: Craft::Viewport, worldPos: Craft::Vector3 )=>Craft::IntVector2" },
  { dao_Craft_Viewport_ScreenToWorldPoint, "ScreenToWorldPoint( self: Craft::Viewport, x: int, y: int, depth: float )=>Craft::Vector3" },
  { dao_Craft_Viewport_AllocateView, "AllocateView( self: Craft::Viewport )" },
  { NULL, NULL }
};
static void Dao_Craft_Viewport_Delete( DaoValue *self )
{
	Craft::Viewport *obj = (Craft::Viewport*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Viewport_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Viewport *self = (DaoCxx_Craft_Viewport*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Viewport_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Viewport*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Viewport*)data);
}

static DaoTypeCore Craft_Viewport_Core = 
{
  "Craft::Viewport",
  sizeof(Craft::Viewport),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Viewport_Craft_Object,NULL },
  dao_Craft_Viewport_Nums,
  dao_Craft_Viewport_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Viewport_Delete,
  Dao_Craft_Viewport_HandleGC
};
DaoTypeCore *dao_Craft_Viewport_Core = & Craft_Viewport_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_Viewport_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Viewport *_self = new DaoCxx_Craft_Viewport( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_Viewport_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  Craft::Scene* scene = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Camera_Core );
  Craft::RenderPath* renderPath = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_RenderPath_Core );

  DaoCxx_Craft_Viewport *_self = new DaoCxx_Craft_Viewport( context, scene, camera, renderPath );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_Viewport_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  Craft::Scene* scene = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Scene_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Camera_Core );
  Craft::IntRect* rect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntRect_Core );
  Craft::RenderPath* renderPath = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_RenderPath_Core );

  DaoCxx_Craft_Viewport *_self = new DaoCxx_Craft_Viewport( context, scene, camera, *rect, renderPath );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_SetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  Craft::Scene* scene = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Scene_Core );

  self->SetScene( scene );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_SetCamera( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Camera_Core );

  self->SetCamera( camera );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_SetRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  Craft::IntRect* rect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntRect_Core );

  self->SetRect( *rect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_SetRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  Craft::RenderPath* path = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderPath_Core );

  self->SetRenderPath( path );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_SetDrawDebug( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDrawDebug( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  Craft::Scene* _GetScene = self->GetScene(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetScene, dao_Craft_Scene_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetCamera( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  Craft::Camera* _GetCamera = self->GetCamera(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetCamera, dao_Craft_Camera_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  Craft::View* _GetView = self->GetView(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetView, dao_Craft_View_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  const Craft::IntRect& _GetRect = self->GetRect(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetRect, dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  Craft::RenderPath* _GetRenderPath = self->GetRenderPath(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderPath, dao_Craft_RenderPath_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetDrawDebug( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  bool _GetDrawDebug = self->GetDrawDebug(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDrawDebug );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_GetScreenRay( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  Craft::Ray _GetScreenRay = self->GetScreenRay( x, y );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Ray( _GetScreenRay ), dao_Craft_Ray_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_WorldToScreenPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  Craft::Vector3* worldPos = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::IntVector2 _WorldToScreenPoint = self->WorldToScreenPoint( *worldPos );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _WorldToScreenPoint ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_ScreenToWorldPoint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  float depth = (float) DaoValue_TryGetFloat( _p[3] );

  Craft::Vector3 _ScreenToWorldPoint = self->ScreenToWorldPoint( x, y, depth );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _ScreenToWorldPoint ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Viewport_AllocateView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Viewport* self = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Viewport_Core );

  self->AllocateView(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_RenderSurface_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_RenderSurface_RenderSurface_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_SetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_SetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_SetUpdateMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_SetLinkedRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_SetLinkedDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_QueueUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_Release( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetParentTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetUsage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetUpdateMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetLinkedRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderSurface_GetLinkedDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_RenderSurface_Meths[] = 
{
  { dao_Craft_RenderSurface_RenderSurface_dao_2, "RenderSurface( parentTexture: Craft::Texture )=>Craft::RenderSurface" },
  { dao_Craft_RenderSurface_SetNumViewports, "SetNumViewports( self: Craft::RenderSurface, num: int )" },
  { dao_Craft_RenderSurface_SetViewport, "SetViewport( self: Craft::RenderSurface, index: int, viewport: Craft::Viewport )" },
  { dao_Craft_RenderSurface_SetUpdateMode, "SetUpdateMode( self: Craft::RenderSurface, mode: int )" },
  { dao_Craft_RenderSurface_SetLinkedRenderTarget, "SetLinkedRenderTarget( self: Craft::RenderSurface, renderTarget: Craft::RenderSurface )" },
  { dao_Craft_RenderSurface_SetLinkedDepthStencil, "SetLinkedDepthStencil( self: Craft::RenderSurface, depthStencil: Craft::RenderSurface )" },
  { dao_Craft_RenderSurface_QueueUpdate, "QueueUpdate( self: Craft::RenderSurface )" },
  { dao_Craft_RenderSurface_Release, "Release( self: Craft::RenderSurface )" },
  { dao_Craft_RenderSurface_GetParentTexture, "GetParentTexture( self: Craft::RenderSurface )=>Craft::Texture" },
  { dao_Craft_RenderSurface_GetWidth, "GetWidth( self: Craft::RenderSurface )=>int" },
  { dao_Craft_RenderSurface_GetHeight, "GetHeight( self: Craft::RenderSurface )=>int" },
  { dao_Craft_RenderSurface_GetUsage, "GetUsage( self: Craft::RenderSurface )=>int" },
  { dao_Craft_RenderSurface_GetNumViewports, "GetNumViewports( self: Craft::RenderSurface )=>int" },
  { dao_Craft_RenderSurface_GetViewport, "GetViewport( self: Craft::RenderSurface, index: int )=>Craft::Viewport" },
  { dao_Craft_RenderSurface_GetUpdateMode, "GetUpdateMode( self: Craft::RenderSurface )=>int" },
  { dao_Craft_RenderSurface_GetLinkedRenderTarget, "GetLinkedRenderTarget( self: Craft::RenderSurface )=>Craft::RenderSurface" },
  { dao_Craft_RenderSurface_GetLinkedDepthStencil, "GetLinkedDepthStencil( self: Craft::RenderSurface )=>Craft::RenderSurface" },
  { NULL, NULL }
};
static void Dao_Craft_RenderSurface_Delete( DaoValue *self )
{
	delete (Craft::RenderSurface*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_RenderSurface_Core = 
{
  "Craft::RenderSurface",
  sizeof(Craft::RenderSurface),
  { NULL },
  { NULL },
  dao_Craft_RenderSurface_Nums,
  dao_Craft_RenderSurface_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_RenderSurface_Delete,
  NULL
};
DaoTypeCore *dao_Craft_RenderSurface_Core = & Craft_RenderSurface_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_RenderSurface_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture* parentTexture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture_Core );

  Craft::RenderSurface *_self = new Craft::RenderSurface( parentTexture );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_SetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumViewports( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_SetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Viewport* viewport = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Viewport_Core );

  self->SetViewport( index, viewport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_SetUpdateMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );
  Craft::RenderSurfaceUpdateMode mode = (Craft::RenderSurfaceUpdateMode) DaoValue_TryGetInteger( _p[1] );

  self->SetUpdateMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_SetLinkedRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );
  Craft::RenderSurface* renderTarget = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );

  self->SetLinkedRenderTarget( renderTarget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_SetLinkedDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );
  Craft::RenderSurface* depthStencil = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );

  self->SetLinkedDepthStencil( depthStencil );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_QueueUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  self->QueueUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_Release( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  self->Release(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetParentTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  Craft::Texture* _GetParentTexture = self->GetParentTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetParentTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  int _GetWidth = self->GetWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  int _GetHeight = self->GetHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetUsage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  Craft::TextureUsage _GetUsage = self->GetUsage(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUsage );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  unsigned int _GetNumViewports = self->GetNumViewports(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumViewports );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Viewport* _GetViewport = self->GetViewport( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetViewport, dao_Craft_Viewport_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetUpdateMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  Craft::RenderSurfaceUpdateMode _GetUpdateMode = self->GetUpdateMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUpdateMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetLinkedRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  Craft::RenderSurface* _GetLinkedRenderTarget = self->GetLinkedRenderTarget(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLinkedRenderTarget, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderSurface_GetLinkedDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderSurface* self = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderSurface_Core );

  Craft::RenderSurface* _GetLinkedDepthStencil = self->GetLinkedDepthStencil(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLinkedDepthStencil, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Renderer_Nums[] = 
{
  { NULL, 0, 0 }
};


extern void dao_Craft_Renderer_Renderer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetDefaultRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetHDRRendering( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetSpecularLighting( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetTextureAnisotropy( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetTextureQuality( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMaterialQuality( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetDrawShadows( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetShadowMapSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetShadowQuality( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetReuseShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMaxShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetDynamicInstancing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMinInstances( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMaxSortedInstances( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMaxOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetOcclusionBufferSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetOccluderSizeThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMobileShadowBiasMul( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetMobileShadowBiasAdd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_ReloadShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDefaultRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetHDRRendering( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetSpecularLighting( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDrawShadows( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetTextureAnisotropy( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetTextureQuality( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMaterialQuality( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetShadowMapSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetShadowQuality( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetReuseShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMaxShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDynamicInstancing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMinInstances( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMaxSortedInstances( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMaxOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetOcclusionBufferSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetOccluderSizeThreshold( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMobileShadowBiasMul( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetMobileShadowBiasAdd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumViews( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumPrimitives( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumBatches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetNumOccluders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDefaultMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDefaultLightRamp( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDefaultLightSpot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetFaceSelectCubeMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetIndirectionCubeMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_Render( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_DrawDebugGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_QueueRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_QueueViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetLightGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetQuadGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetShadowMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetShadowCamera( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_ResizeInstancingBuffer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_OptimizeLightByScissor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_OptimizeLightByStencil( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Renderer_GetLightScissor( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Renderer_Meths[] = 
{
  { dao_Craft_Renderer_Renderer_dao_2, "Renderer(  )=>Craft::Renderer" },
  { dao_Craft_Renderer_SetNumViewports, "SetNumViewports( self: Craft::Renderer, num: int )" },
  { dao_Craft_Renderer_SetViewport, "SetViewport( self: Craft::Renderer, index: int, viewport: Craft::Viewport )" },
  { dao_Craft_Renderer_SetDefaultRenderPath, "SetDefaultRenderPath( self: Craft::Renderer, renderPath: Craft::RenderPath )" },
  { dao_Craft_Renderer_SetHDRRendering, "SetHDRRendering( self: Craft::Renderer, enable: bool )" },
  { dao_Craft_Renderer_SetSpecularLighting, "SetSpecularLighting( self: Craft::Renderer, enable: bool )" },
  { dao_Craft_Renderer_SetTextureAnisotropy, "SetTextureAnisotropy( self: Craft::Renderer, level: int )" },
  { dao_Craft_Renderer_SetTextureFilterMode, "SetTextureFilterMode( self: Craft::Renderer, mode: int )" },
  { dao_Craft_Renderer_SetTextureQuality, "SetTextureQuality( self: Craft::Renderer, quality: int )" },
  { dao_Craft_Renderer_SetMaterialQuality, "SetMaterialQuality( self: Craft::Renderer, quality: int )" },
  { dao_Craft_Renderer_SetDrawShadows, "SetDrawShadows( self: Craft::Renderer, enable: bool )" },
  { dao_Craft_Renderer_SetShadowMapSize, "SetShadowMapSize( self: Craft::Renderer, size: int )" },
  { dao_Craft_Renderer_SetShadowQuality, "SetShadowQuality( self: Craft::Renderer, quality: int )" },
  { dao_Craft_Renderer_SetReuseShadowMaps, "SetReuseShadowMaps( self: Craft::Renderer, enable: bool )" },
  { dao_Craft_Renderer_SetMaxShadowMaps, "SetMaxShadowMaps( self: Craft::Renderer, shadowMaps: int )" },
  { dao_Craft_Renderer_SetDynamicInstancing, "SetDynamicInstancing( self: Craft::Renderer, enable: bool )" },
  { dao_Craft_Renderer_SetMinInstances, "SetMinInstances( self: Craft::Renderer, instances: int )" },
  { dao_Craft_Renderer_SetMaxSortedInstances, "SetMaxSortedInstances( self: Craft::Renderer, instances: int )" },
  { dao_Craft_Renderer_SetMaxOccluderTriangles, "SetMaxOccluderTriangles( self: Craft::Renderer, triangles: int )" },
  { dao_Craft_Renderer_SetOcclusionBufferSize, "SetOcclusionBufferSize( self: Craft::Renderer, size: int )" },
  { dao_Craft_Renderer_SetOccluderSizeThreshold, "SetOccluderSizeThreshold( self: Craft::Renderer, screenSize: float )" },
  { dao_Craft_Renderer_SetMobileShadowBiasMul, "SetMobileShadowBiasMul( self: Craft::Renderer, mul: float )" },
  { dao_Craft_Renderer_SetMobileShadowBiasAdd, "SetMobileShadowBiasAdd( self: Craft::Renderer, add: float )" },
  { dao_Craft_Renderer_ReloadShaders, "ReloadShaders( self: Craft::Renderer )" },
  { dao_Craft_Renderer_GetNumViewports, "GetNumViewports( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetViewport, "GetViewport( self: Craft::Renderer, index: int )=>Craft::Viewport" },
  { dao_Craft_Renderer_GetDefaultRenderPath, "GetDefaultRenderPath( self: Craft::Renderer )=>Craft::RenderPath" },
  { dao_Craft_Renderer_GetHDRRendering, "GetHDRRendering( self: Craft::Renderer )=>bool" },
  { dao_Craft_Renderer_GetSpecularLighting, "GetSpecularLighting( self: Craft::Renderer )=>bool" },
  { dao_Craft_Renderer_GetDrawShadows, "GetDrawShadows( self: Craft::Renderer )=>bool" },
  { dao_Craft_Renderer_GetTextureAnisotropy, "GetTextureAnisotropy( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetTextureFilterMode, "GetTextureFilterMode( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetTextureQuality, "GetTextureQuality( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetMaterialQuality, "GetMaterialQuality( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetShadowMapSize, "GetShadowMapSize( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetShadowQuality, "GetShadowQuality( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetReuseShadowMaps, "GetReuseShadowMaps( self: Craft::Renderer )=>bool" },
  { dao_Craft_Renderer_GetMaxShadowMaps, "GetMaxShadowMaps( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetDynamicInstancing, "GetDynamicInstancing( self: Craft::Renderer )=>bool" },
  { dao_Craft_Renderer_GetMinInstances, "GetMinInstances( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetMaxSortedInstances, "GetMaxSortedInstances( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetMaxOccluderTriangles, "GetMaxOccluderTriangles( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetOcclusionBufferSize, "GetOcclusionBufferSize( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetOccluderSizeThreshold, "GetOccluderSizeThreshold( self: Craft::Renderer )=>float" },
  { dao_Craft_Renderer_GetMobileShadowBiasMul, "GetMobileShadowBiasMul( self: Craft::Renderer )=>float" },
  { dao_Craft_Renderer_GetMobileShadowBiasAdd, "GetMobileShadowBiasAdd( self: Craft::Renderer )=>float" },
  { dao_Craft_Renderer_GetNumViews, "GetNumViews( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetNumPrimitives, "GetNumPrimitives( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetNumBatches, "GetNumBatches( self: Craft::Renderer )=>int" },
  { dao_Craft_Renderer_GetNumGeometries, "GetNumGeometries( self: Craft::Renderer, allViews: bool =false )=>int" },
  { dao_Craft_Renderer_GetNumLights, "GetNumLights( self: Craft::Renderer, allViews: bool =false )=>int" },
  { dao_Craft_Renderer_GetNumShadowMaps, "GetNumShadowMaps( self: Craft::Renderer, allViews: bool =false )=>int" },
  { dao_Craft_Renderer_GetNumOccluders, "GetNumOccluders( self: Craft::Renderer, allViews: bool =false )=>int" },
  { dao_Craft_Renderer_GetDefaultMaterial, "GetDefaultMaterial( self: Craft::Renderer )=>Craft::Material" },
  { dao_Craft_Renderer_GetDefaultLightRamp, "GetDefaultLightRamp( self: Craft::Renderer )=>Craft::Texture2D" },
  { dao_Craft_Renderer_GetDefaultLightSpot, "GetDefaultLightSpot( self: Craft::Renderer )=>Craft::Texture2D" },
  { dao_Craft_Renderer_GetFaceSelectCubeMap, "GetFaceSelectCubeMap( self: Craft::Renderer )=>Craft::TextureCube" },
  { dao_Craft_Renderer_GetIndirectionCubeMap, "GetIndirectionCubeMap( self: Craft::Renderer )=>Craft::TextureCube" },
  { dao_Craft_Renderer_Update, "Update( self: Craft::Renderer, timeStep: float )" },
  { dao_Craft_Renderer_Render, "Render( self: Craft::Renderer )" },
  { dao_Craft_Renderer_DrawDebugGeometry, "DrawDebugGeometry( self: Craft::Renderer, depthTest: bool )" },
  { dao_Craft_Renderer_QueueRenderSurface, "QueueRenderSurface( self: Craft::Renderer, renderTarget: Craft::RenderSurface )" },
  { dao_Craft_Renderer_QueueViewport, "QueueViewport( self: Craft::Renderer, renderTarget: Craft::RenderSurface, viewport: Craft::Viewport )" },
  { dao_Craft_Renderer_GetLightGeometry, "GetLightGeometry( self: Craft::Renderer, light: Craft::Light )=>Craft::Geometry" },
  { dao_Craft_Renderer_GetQuadGeometry, "GetQuadGeometry( self: Craft::Renderer )=>Craft::Geometry" },
  { dao_Craft_Renderer_GetShadowMap, "GetShadowMap( self: Craft::Renderer, light: Craft::Light, camera: Craft::Camera, viewWidth: int, viewHeight: int )=>Craft::Texture2D" },
  { dao_Craft_Renderer_GetDepthStencil, "GetDepthStencil( self: Craft::Renderer, width: int, height: int, multiSample: int, autoResolve: bool )=>Craft::RenderSurface" },
  { dao_Craft_Renderer_GetShadowCamera, "GetShadowCamera( self: Craft::Renderer )=>Craft::Camera" },
  { dao_Craft_Renderer_SetCullMode, "SetCullMode( self: Craft::Renderer, mode: int, camera: Craft::Camera )" },
  { dao_Craft_Renderer_ResizeInstancingBuffer, "ResizeInstancingBuffer( self: Craft::Renderer, numInstances: int )=>bool" },
  { dao_Craft_Renderer_OptimizeLightByScissor, "OptimizeLightByScissor( self: Craft::Renderer, light: Craft::Light, camera: Craft::Camera )" },
  { dao_Craft_Renderer_OptimizeLightByStencil, "OptimizeLightByStencil( self: Craft::Renderer, light: Craft::Light, camera: Craft::Camera )" },
  { dao_Craft_Renderer_GetLightScissor, "GetLightScissor( self: Craft::Renderer, light: Craft::Light, camera: Craft::Camera )=>Craft::Rect" },
  { NULL, NULL }
};
static void Dao_Craft_Renderer_Delete( DaoValue *self )
{
	Craft::Renderer *obj = (Craft::Renderer*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Renderer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Renderer *self = (DaoCxx_Craft_Renderer*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Renderer_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Renderer*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Renderer*)data);
}

static DaoTypeCore Craft_Renderer_Core = 
{
  "Craft::Renderer",
  sizeof(Craft::Renderer),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Renderer_Craft_Object,NULL },
  dao_Craft_Renderer_Nums,
  dao_Craft_Renderer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Renderer_Delete,
  Dao_Craft_Renderer_HandleGC
};
DaoTypeCore *dao_Craft_Renderer_Core = & Craft_Renderer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumViewports( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Viewport* viewport = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Viewport_Core );

  self->SetViewport( index, viewport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetDefaultRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::RenderPath* renderPath = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderPath_Core );

  self->SetDefaultRenderPath( renderPath );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetHDRRendering( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetHDRRendering( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetSpecularLighting( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSpecularLighting( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetTextureAnisotropy( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int level = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetTextureAnisotropy( level );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::TextureFilterMode mode = (Craft::TextureFilterMode) DaoValue_TryGetInteger( _p[1] );

  self->SetTextureFilterMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetTextureQuality( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::MaterialQuality quality = (Craft::MaterialQuality) DaoValue_TryGetInteger( _p[1] );

  self->SetTextureQuality( quality );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMaterialQuality( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::MaterialQuality quality = (Craft::MaterialQuality) DaoValue_TryGetInteger( _p[1] );

  self->SetMaterialQuality( quality );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetDrawShadows( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDrawShadows( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetShadowMapSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int size = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetShadowMapSize( size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetShadowQuality( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::ShadowQuality quality = (Craft::ShadowQuality) DaoValue_TryGetInteger( _p[1] );

  self->SetShadowQuality( quality );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetReuseShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetReuseShadowMaps( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMaxShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int shadowMaps = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxShadowMaps( shadowMaps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetDynamicInstancing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDynamicInstancing( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMinInstances( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int instances = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMinInstances( instances );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMaxSortedInstances( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int instances = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxSortedInstances( instances );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMaxOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int triangles = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxOccluderTriangles( triangles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetOcclusionBufferSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int size = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetOcclusionBufferSize( size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetOccluderSizeThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  float screenSize = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetOccluderSizeThreshold( screenSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMobileShadowBiasMul( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  float mul = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMobileShadowBiasMul( mul );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetMobileShadowBiasAdd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  float add = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMobileShadowBiasAdd( add );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_ReloadShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  self->ReloadShaders(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumViewports( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  unsigned int _GetNumViewports = self->GetNumViewports(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumViewports );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Viewport* _GetViewport = self->GetViewport( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetViewport, dao_Craft_Viewport_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDefaultRenderPath( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::RenderPath* _GetDefaultRenderPath = self->GetDefaultRenderPath(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDefaultRenderPath, dao_Craft_RenderPath_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetHDRRendering( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  bool _GetHDRRendering = self->GetHDRRendering(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetHDRRendering );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetSpecularLighting( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  bool _GetSpecularLighting = self->GetSpecularLighting(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSpecularLighting );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDrawShadows( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  bool _GetDrawShadows = self->GetDrawShadows(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDrawShadows );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetTextureAnisotropy( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetTextureAnisotropy = self->GetTextureAnisotropy(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTextureAnisotropy );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetTextureFilterMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::TextureFilterMode _GetTextureFilterMode = self->GetTextureFilterMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTextureFilterMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetTextureQuality( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::MaterialQuality _GetTextureQuality = self->GetTextureQuality(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTextureQuality );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMaterialQuality( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::MaterialQuality _GetMaterialQuality = self->GetMaterialQuality(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaterialQuality );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetShadowMapSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetShadowMapSize = self->GetShadowMapSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadowMapSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetShadowQuality( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::ShadowQuality _GetShadowQuality = self->GetShadowQuality(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadowQuality );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetReuseShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  bool _GetReuseShadowMaps = self->GetReuseShadowMaps(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetReuseShadowMaps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMaxShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetMaxShadowMaps = self->GetMaxShadowMaps(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxShadowMaps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDynamicInstancing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  bool _GetDynamicInstancing = self->GetDynamicInstancing(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDynamicInstancing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMinInstances( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetMinInstances = self->GetMinInstances(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMinInstances );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMaxSortedInstances( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetMaxSortedInstances = self->GetMaxSortedInstances(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxSortedInstances );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMaxOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetMaxOccluderTriangles = self->GetMaxOccluderTriangles(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxOccluderTriangles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetOcclusionBufferSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  int _GetOcclusionBufferSize = self->GetOcclusionBufferSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetOcclusionBufferSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetOccluderSizeThreshold( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  float _GetOccluderSizeThreshold = self->GetOccluderSizeThreshold(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetOccluderSizeThreshold );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMobileShadowBiasMul( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  float _GetMobileShadowBiasMul = self->GetMobileShadowBiasMul(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMobileShadowBiasMul );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetMobileShadowBiasAdd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  float _GetMobileShadowBiasAdd = self->GetMobileShadowBiasAdd(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMobileShadowBiasAdd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumViews( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  unsigned int _GetNumViews = self->GetNumViews(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumViews );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumPrimitives( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  unsigned int _GetNumPrimitives = self->GetNumPrimitives(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumPrimitives );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumBatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  unsigned int _GetNumBatches = self->GetNumBatches(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumBatches );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool allViews = (bool) DaoValue_TryGetBoolean( _p[1] );

  unsigned int _GetNumGeometries = self->GetNumGeometries( allViews );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumGeometries );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool allViews = (bool) DaoValue_TryGetBoolean( _p[1] );

  unsigned int _GetNumLights = self->GetNumLights( allViews );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumLights );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumShadowMaps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool allViews = (bool) DaoValue_TryGetBoolean( _p[1] );

  unsigned int _GetNumShadowMaps = self->GetNumShadowMaps( allViews );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumShadowMaps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetNumOccluders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool allViews = (bool) DaoValue_TryGetBoolean( _p[1] );

  unsigned int _GetNumOccluders = self->GetNumOccluders( allViews );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumOccluders );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDefaultMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::Material* _GetDefaultMaterial = self->GetDefaultMaterial(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDefaultMaterial, dao_Craft_Material_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDefaultLightRamp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::Texture2D* _GetDefaultLightRamp = self->GetDefaultLightRamp(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDefaultLightRamp, dao_Craft_Texture2D_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDefaultLightSpot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::Texture2D* _GetDefaultLightSpot = self->GetDefaultLightSpot(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDefaultLightSpot, dao_Craft_Texture2D_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetFaceSelectCubeMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::TextureCube* _GetFaceSelectCubeMap = self->GetFaceSelectCubeMap(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetFaceSelectCubeMap, dao_Craft_TextureCube_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetIndirectionCubeMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::TextureCube* _GetIndirectionCubeMap = self->GetIndirectionCubeMap(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetIndirectionCubeMap, dao_Craft_TextureCube_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_Render( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  self->Render(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_DrawDebugGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  bool depthTest = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->DrawDebugGeometry( depthTest );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_QueueRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::RenderSurface* renderTarget = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );

  self->QueueRenderSurface( renderTarget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_QueueViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::RenderSurface* renderTarget = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );
  Craft::Viewport* viewport = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Viewport_Core );

  self->QueueViewport( renderTarget, viewport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetLightGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );

  Craft::Geometry* _GetLightGeometry = self->GetLightGeometry( light );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLightGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetQuadGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::Geometry* _GetQuadGeometry = self->GetQuadGeometry(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetQuadGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetShadowMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );
  unsigned int viewWidth = (unsigned int) DaoValue_TryGetInteger( _p[3] );
  unsigned int viewHeight = (unsigned int) DaoValue_TryGetInteger( _p[4] );

  Craft::Texture2D* _GetShadowMap = self->GetShadowMap( light, camera, viewWidth, viewHeight );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShadowMap, dao_Craft_Texture2D_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetDepthStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );
  int multiSample = (int) DaoValue_TryGetInteger( _p[3] );
  bool autoResolve = (bool) DaoValue_TryGetBoolean( _p[4] );

  Craft::RenderSurface* _GetDepthStencil = self->GetDepthStencil( width, height, multiSample, autoResolve );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDepthStencil, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetShadowCamera( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );

  Craft::Camera* _GetShadowCamera = self->GetShadowCamera(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetShadowCamera, dao_Craft_Camera_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::CullMode mode = (Craft::CullMode) DaoValue_TryGetInteger( _p[1] );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );

  self->SetCullMode( mode, camera );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_ResizeInstancingBuffer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  unsigned int numInstances = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _ResizeInstancingBuffer = self->ResizeInstancingBuffer( numInstances );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ResizeInstancingBuffer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_OptimizeLightByScissor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );

  self->OptimizeLightByScissor( light, camera );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_OptimizeLightByStencil( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );

  self->OptimizeLightByStencil( light, camera );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Renderer_GetLightScissor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Renderer* self = (Craft::Renderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Renderer_Core );
  Craft::Light* light = (Craft::Light*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Light_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );

  const Craft::Rect& _GetLightScissor = self->GetLightScissor( light, camera );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetLightScissor, dao_Craft_Rect_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_BiasParameters_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_BiasParameters_GETF_constantBias_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BiasParameters_SETF_constantBias_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BiasParameters_GETF_slopeScaledBias_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BiasParameters_SETF_slopeScaledBias_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BiasParameters_BiasParameters_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BiasParameters_BiasParameters_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BiasParameters_Validate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_BiasParameters_Meths[] = 
{
  { dao_Craft_BiasParameters_GETF_constantBias_, ".constantBias_ ( self: Craft::BiasParameters )=>float" },
  { dao_Craft_BiasParameters_SETF_constantBias_, ".constantBias_=( self: Craft::BiasParameters, constantBias_: float )" },
  { dao_Craft_BiasParameters_GETF_slopeScaledBias_, ".slopeScaledBias_ ( self: Craft::BiasParameters )=>float" },
  { dao_Craft_BiasParameters_SETF_slopeScaledBias_, ".slopeScaledBias_=( self: Craft::BiasParameters, slopeScaledBias_: float )" },
  { dao_Craft_BiasParameters_BiasParameters_dao_4, "BiasParameters(  )=>Craft::BiasParameters" },
  { dao_Craft_BiasParameters_BiasParameters_dao_5, "BiasParameters( constantBias: float, slopeScaledBias: float )=>Craft::BiasParameters" },
  { dao_Craft_BiasParameters_Validate, "Validate( self: Craft::BiasParameters )" },
  { NULL, NULL }
};
static void Dao_Craft_BiasParameters_Delete( DaoValue *self )
{
	delete (Craft::BiasParameters*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_BiasParameters_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::BiasParameters* src = (Craft::BiasParameters*) DaoValue_TryCastCdataTC( self, dao_Craft_BiasParameters_Core );
	Craft::BiasParameters* dest;
	if( target ){
		dest = (Craft::BiasParameters*) DaoValue_TryCastCdataTC( target, dao_Craft_BiasParameters_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::BiasParameters( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_BiasParameters_Core, dest );
}

static DaoTypeCore Craft_BiasParameters_Core = 
{
  "Craft::BiasParameters",
  sizeof(Craft::BiasParameters),
  { NULL },
  { NULL },
  dao_Craft_BiasParameters_Nums,
  dao_Craft_BiasParameters_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_BiasParameters_Copy,
  Dao_Craft_BiasParameters_Delete,
  NULL
};
DaoTypeCore *dao_Craft_BiasParameters_Core = & Craft_BiasParameters_Core;
static void dao_Craft_BiasParameters_GETF_constantBias_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BiasParameters *self = (Craft::BiasParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_BiasParameters_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->constantBias_ );
}
static void dao_Craft_BiasParameters_SETF_constantBias_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BiasParameters *self = (Craft::BiasParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_BiasParameters_Core);
  self->constantBias_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_BiasParameters_GETF_slopeScaledBias_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BiasParameters *self = (Craft::BiasParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_BiasParameters_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->slopeScaledBias_ );
}
static void dao_Craft_BiasParameters_SETF_slopeScaledBias_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BiasParameters *self = (Craft::BiasParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_BiasParameters_Core);
  self->slopeScaledBias_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BiasParameters_BiasParameters_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::BiasParameters _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BiasParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BiasParameters_BiasParameters_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float constantBias = (float) DaoValue_TryGetFloat( _p[0] );
  float slopeScaledBias = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::BiasParameters _self(constantBias, slopeScaledBias);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_BiasParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BiasParameters_Validate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BiasParameters* self = (Craft::BiasParameters*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BiasParameters_Core );

  self->Validate(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_CascadeParameters_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_CascadeParameters_GETF_fadeStart_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_SETF_fadeStart_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_GETF_biasAutoAdjust_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_SETF_biasAutoAdjust_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_CascadeParameters_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_CascadeParameters_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_Validate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_CascadeParameters_GetShadowRange( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_CascadeParameters_Meths[] = 
{
  { dao_Craft_CascadeParameters_GETF_fadeStart_, ".fadeStart_ ( self: Craft::CascadeParameters )=>float" },
  { dao_Craft_CascadeParameters_SETF_fadeStart_, ".fadeStart_=( self: Craft::CascadeParameters, fadeStart_: float )" },
  { dao_Craft_CascadeParameters_GETF_biasAutoAdjust_, ".biasAutoAdjust_ ( self: Craft::CascadeParameters )=>float" },
  { dao_Craft_CascadeParameters_SETF_biasAutoAdjust_, ".biasAutoAdjust_=( self: Craft::CascadeParameters, biasAutoAdjust_: float )" },
  { dao_Craft_CascadeParameters_CascadeParameters_dao_4, "CascadeParameters(  )=>Craft::CascadeParameters" },
  { dao_Craft_CascadeParameters_CascadeParameters_dao_5, "CascadeParameters( split1: float, split2: float, split3: float, split4: float, fadeStart: float, biasAutoAdjust: float =1.00 )=>Craft::CascadeParameters" },
  { dao_Craft_CascadeParameters_Validate, "Validate( self: Craft::CascadeParameters )" },
  { dao_Craft_CascadeParameters_GetShadowRange, "GetShadowRange( self: Craft::CascadeParameters )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_CascadeParameters_Delete( DaoValue *self )
{
	delete (Craft::CascadeParameters*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_CascadeParameters_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::CascadeParameters* src = (Craft::CascadeParameters*) DaoValue_TryCastCdataTC( self, dao_Craft_CascadeParameters_Core );
	Craft::CascadeParameters* dest;
	if( target ){
		dest = (Craft::CascadeParameters*) DaoValue_TryCastCdataTC( target, dao_Craft_CascadeParameters_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::CascadeParameters( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_CascadeParameters_Core, dest );
}

static DaoTypeCore Craft_CascadeParameters_Core = 
{
  "Craft::CascadeParameters",
  sizeof(Craft::CascadeParameters),
  { NULL },
  { NULL },
  dao_Craft_CascadeParameters_Nums,
  dao_Craft_CascadeParameters_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_CascadeParameters_Copy,
  Dao_Craft_CascadeParameters_Delete,
  NULL
};
DaoTypeCore *dao_Craft_CascadeParameters_Core = & Craft_CascadeParameters_Core;
static void dao_Craft_CascadeParameters_GETF_fadeStart_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CascadeParameters *self = (Craft::CascadeParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CascadeParameters_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->fadeStart_ );
}
static void dao_Craft_CascadeParameters_SETF_fadeStart_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CascadeParameters *self = (Craft::CascadeParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CascadeParameters_Core);
  self->fadeStart_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_CascadeParameters_GETF_biasAutoAdjust_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CascadeParameters *self = (Craft::CascadeParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CascadeParameters_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->biasAutoAdjust_ );
}
static void dao_Craft_CascadeParameters_SETF_biasAutoAdjust_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CascadeParameters *self = (Craft::CascadeParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_CascadeParameters_Core);
  self->biasAutoAdjust_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CascadeParameters_CascadeParameters_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::CascadeParameters _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_CascadeParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CascadeParameters_CascadeParameters_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  float split1 = (float) DaoValue_TryGetFloat( _p[0] );
  float split2 = (float) DaoValue_TryGetFloat( _p[1] );
  float split3 = (float) DaoValue_TryGetFloat( _p[2] );
  float split4 = (float) DaoValue_TryGetFloat( _p[3] );
  float fadeStart = (float) DaoValue_TryGetFloat( _p[4] );
  float biasAutoAdjust = (float) DaoValue_TryGetFloat( _p[5] );

  Craft::CascadeParameters _self(split1, split2, split3, split4, fadeStart, biasAutoAdjust);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_CascadeParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CascadeParameters_Validate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CascadeParameters* self = (Craft::CascadeParameters*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CascadeParameters_Core );

  self->Validate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_CascadeParameters_GetShadowRange( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::CascadeParameters* self = (Craft::CascadeParameters*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_CascadeParameters_Core );

  float _GetShadowRange = self->GetShadowRange(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowRange );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_FocusParameters_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_FocusParameters_GETF_focus_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_SETF_focus_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_GETF_nonUniform_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_SETF_nonUniform_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_GETF_autoSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_SETF_autoSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_GETF_quantize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_SETF_quantize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_GETF_minView_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_SETF_minView_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_FocusParameters_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_FocusParameters_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FocusParameters_Validate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_FocusParameters_Meths[] = 
{
  { dao_Craft_FocusParameters_GETF_focus_, ".focus_ ( self: Craft::FocusParameters )=>bool" },
  { dao_Craft_FocusParameters_SETF_focus_, ".focus_=( self: Craft::FocusParameters, focus_: bool )" },
  { dao_Craft_FocusParameters_GETF_nonUniform_, ".nonUniform_ ( self: Craft::FocusParameters )=>bool" },
  { dao_Craft_FocusParameters_SETF_nonUniform_, ".nonUniform_=( self: Craft::FocusParameters, nonUniform_: bool )" },
  { dao_Craft_FocusParameters_GETF_autoSize_, ".autoSize_ ( self: Craft::FocusParameters )=>bool" },
  { dao_Craft_FocusParameters_SETF_autoSize_, ".autoSize_=( self: Craft::FocusParameters, autoSize_: bool )" },
  { dao_Craft_FocusParameters_GETF_quantize_, ".quantize_ ( self: Craft::FocusParameters )=>float" },
  { dao_Craft_FocusParameters_SETF_quantize_, ".quantize_=( self: Craft::FocusParameters, quantize_: float )" },
  { dao_Craft_FocusParameters_GETF_minView_, ".minView_ ( self: Craft::FocusParameters )=>float" },
  { dao_Craft_FocusParameters_SETF_minView_, ".minView_=( self: Craft::FocusParameters, minView_: float )" },
  { dao_Craft_FocusParameters_FocusParameters_dao_4, "FocusParameters(  )=>Craft::FocusParameters" },
  { dao_Craft_FocusParameters_FocusParameters_dao_5, "FocusParameters( focus: bool, nonUniform: bool, autoSize: bool, quantize: float, minView: float )=>Craft::FocusParameters" },
  { dao_Craft_FocusParameters_Validate, "Validate( self: Craft::FocusParameters )" },
  { NULL, NULL }
};
static void Dao_Craft_FocusParameters_Delete( DaoValue *self )
{
	delete (Craft::FocusParameters*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_FocusParameters_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::FocusParameters* src = (Craft::FocusParameters*) DaoValue_TryCastCdataTC( self, dao_Craft_FocusParameters_Core );
	Craft::FocusParameters* dest;
	if( target ){
		dest = (Craft::FocusParameters*) DaoValue_TryCastCdataTC( target, dao_Craft_FocusParameters_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::FocusParameters( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_FocusParameters_Core, dest );
}

static DaoTypeCore Craft_FocusParameters_Core = 
{
  "Craft::FocusParameters",
  sizeof(Craft::FocusParameters),
  { NULL },
  { NULL },
  dao_Craft_FocusParameters_Nums,
  dao_Craft_FocusParameters_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_FocusParameters_Copy,
  Dao_Craft_FocusParameters_Delete,
  NULL
};
DaoTypeCore *dao_Craft_FocusParameters_Core = & Craft_FocusParameters_Core;
static void dao_Craft_FocusParameters_GETF_focus_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  DaoProcess_PutBoolean( _proc, (dao_boolean) self->focus_ );
}
static void dao_Craft_FocusParameters_SETF_focus_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  self->focus_ = (bool) DaoValue_TryGetBoolean(_p[1]);
}
static void dao_Craft_FocusParameters_GETF_nonUniform_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  DaoProcess_PutBoolean( _proc, (dao_boolean) self->nonUniform_ );
}
static void dao_Craft_FocusParameters_SETF_nonUniform_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  self->nonUniform_ = (bool) DaoValue_TryGetBoolean(_p[1]);
}
static void dao_Craft_FocusParameters_GETF_autoSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  DaoProcess_PutBoolean( _proc, (dao_boolean) self->autoSize_ );
}
static void dao_Craft_FocusParameters_SETF_autoSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  self->autoSize_ = (bool) DaoValue_TryGetBoolean(_p[1]);
}
static void dao_Craft_FocusParameters_GETF_quantize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->quantize_ );
}
static void dao_Craft_FocusParameters_SETF_quantize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  self->quantize_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_FocusParameters_GETF_minView_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->minView_ );
}
static void dao_Craft_FocusParameters_SETF_minView_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters *self = (Craft::FocusParameters*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FocusParameters_Core);
  self->minView_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FocusParameters_FocusParameters_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::FocusParameters _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_FocusParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FocusParameters_FocusParameters_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  bool focus = (bool) DaoValue_TryGetBoolean( _p[0] );
  bool nonUniform = (bool) DaoValue_TryGetBoolean( _p[1] );
  bool autoSize = (bool) DaoValue_TryGetBoolean( _p[2] );
  float quantize = (float) DaoValue_TryGetFloat( _p[3] );
  float minView = (float) DaoValue_TryGetFloat( _p[4] );

  Craft::FocusParameters _self(focus, nonUniform, autoSize, quantize, minView);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_FocusParameters_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_FocusParameters_Validate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FocusParameters* self = (Craft::FocusParameters*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_FocusParameters_Core );

  self->Validate(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Pass_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Pass_Pass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetDepthTestMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetLightingMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetAlphaToCoverage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetIsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetVertexShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetPixelShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetVertexShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetPixelShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetVertexShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_SetPixelShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_ReleaseShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_MarkShadersLoaded( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetIndex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetDepthTestMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetLightingMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetShadersLoadedFrameNumber( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetAlphaToCoverage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_IsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetVertexShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetPixelShader( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetVertexShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetPixelShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetVertexShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetPixelShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetEffectiveVertexShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Pass_GetEffectivePixelShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Pass_Meths[] = 
{
  { dao_Craft_Pass_Pass_dao_2, "Pass( passName: string )=>Craft::Pass" },
  { dao_Craft_Pass_SetBlendMode, "SetBlendMode( self: Craft::Pass, mode: int )" },
  { dao_Craft_Pass_SetCullMode, "SetCullMode( self: Craft::Pass, mode: int )" },
  { dao_Craft_Pass_SetDepthTestMode, "SetDepthTestMode( self: Craft::Pass, mode: int )" },
  { dao_Craft_Pass_SetLightingMode, "SetLightingMode( self: Craft::Pass, mode: int )" },
  { dao_Craft_Pass_SetDepthWrite, "SetDepthWrite( self: Craft::Pass, enable: bool )" },
  { dao_Craft_Pass_SetAlphaToCoverage, "SetAlphaToCoverage( self: Craft::Pass, enable: bool )" },
  { dao_Craft_Pass_SetIsDesktop, "SetIsDesktop( self: Craft::Pass, enable: bool )" },
  { dao_Craft_Pass_SetVertexShader, "SetVertexShader( self: Craft::Pass, name: string )" },
  { dao_Craft_Pass_SetPixelShader, "SetPixelShader( self: Craft::Pass, name: string )" },
  { dao_Craft_Pass_SetVertexShaderDefines, "SetVertexShaderDefines( self: Craft::Pass, defines: string )" },
  { dao_Craft_Pass_SetPixelShaderDefines, "SetPixelShaderDefines( self: Craft::Pass, defines: string )" },
  { dao_Craft_Pass_SetVertexShaderDefineExcludes, "SetVertexShaderDefineExcludes( self: Craft::Pass, excludes: string )" },
  { dao_Craft_Pass_SetPixelShaderDefineExcludes, "SetPixelShaderDefineExcludes( self: Craft::Pass, excludes: string )" },
  { dao_Craft_Pass_ReleaseShaders, "ReleaseShaders( self: Craft::Pass )" },
  { dao_Craft_Pass_MarkShadersLoaded, "MarkShadersLoaded( self: Craft::Pass, frameNumber: int )" },
  { dao_Craft_Pass_GetName, "GetName( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetIndex, "GetIndex( self: Craft::Pass )=>int" },
  { dao_Craft_Pass_GetBlendMode, "GetBlendMode( self: Craft::Pass )=>int" },
  { dao_Craft_Pass_GetCullMode, "GetCullMode( self: Craft::Pass )=>int" },
  { dao_Craft_Pass_GetDepthTestMode, "GetDepthTestMode( self: Craft::Pass )=>int" },
  { dao_Craft_Pass_GetLightingMode, "GetLightingMode( self: Craft::Pass )=>int" },
  { dao_Craft_Pass_GetShadersLoadedFrameNumber, "GetShadersLoadedFrameNumber( self: Craft::Pass )=>int" },
  { dao_Craft_Pass_GetDepthWrite, "GetDepthWrite( self: Craft::Pass )=>bool" },
  { dao_Craft_Pass_GetAlphaToCoverage, "GetAlphaToCoverage( self: Craft::Pass )=>bool" },
  { dao_Craft_Pass_IsDesktop, "IsDesktop( self: Craft::Pass )=>bool" },
  { dao_Craft_Pass_GetVertexShader, "GetVertexShader( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetPixelShader, "GetPixelShader( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetVertexShaderDefines, "GetVertexShaderDefines( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetPixelShaderDefines, "GetPixelShaderDefines( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetVertexShaderDefineExcludes, "GetVertexShaderDefineExcludes( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetPixelShaderDefineExcludes, "GetPixelShaderDefineExcludes( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetEffectiveVertexShaderDefines, "GetEffectiveVertexShaderDefines( self: Craft::Pass )=>string" },
  { dao_Craft_Pass_GetEffectivePixelShaderDefines, "GetEffectivePixelShaderDefines( self: Craft::Pass )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_Pass_Delete( DaoValue *self )
{
	Craft::Pass *obj = (Craft::Pass*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Pass_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Pass *self = (DaoCxx_Craft_Pass*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Pass_Craft_RefCounted( void *data, int down )
{
	if( down ) return static_cast<Craft::Pass*>((Craft::RefCounted*)data);
	return dynamic_cast<Craft::RefCounted*>((Craft::Pass*)data);
}

static DaoTypeCore Craft_Pass_Core = 
{
  "Craft::Pass",
  sizeof(Craft::Pass),
  { dao_Craft_RefCounted_Core, NULL },
  { dao_cast_Craft_Pass_Craft_RefCounted,NULL },
  dao_Craft_Pass_Nums,
  dao_Craft_Pass_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Pass_Delete,
  Dao_Craft_Pass_HandleGC
};
DaoTypeCore *dao_Craft_Pass_Core = & Craft_Pass_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_Pass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_passName = DaoValue_TryGetString( _p[0] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  DaoCxx_Craft_Pass *_self = new DaoCxx_Craft_Pass( passName );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  Craft::BlendMode mode = (Craft::BlendMode) DaoValue_TryGetInteger( _p[1] );

  self->SetBlendMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  Craft::CullMode mode = (Craft::CullMode) DaoValue_TryGetInteger( _p[1] );

  self->SetCullMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetDepthTestMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  Craft::CompareMode mode = (Craft::CompareMode) DaoValue_TryGetInteger( _p[1] );

  self->SetDepthTestMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetLightingMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  Craft::PassLightingMode mode = (Craft::PassLightingMode) DaoValue_TryGetInteger( _p[1] );

  self->SetLightingMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDepthWrite( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetAlphaToCoverage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAlphaToCoverage( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetIsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetIsDesktop( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetVertexShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetVertexShader( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetPixelShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetPixelShader( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetVertexShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  DString *__str_defines = DaoValue_TryGetString( _p[1] );
  Craft::String defines( DString_GetData( __str_defines ), DString_Size( __str_defines ) );

  self->SetVertexShaderDefines( defines );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetPixelShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  DString *__str_defines = DaoValue_TryGetString( _p[1] );
  Craft::String defines( DString_GetData( __str_defines ), DString_Size( __str_defines ) );

  self->SetPixelShaderDefines( defines );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetVertexShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  DString *__str_excludes = DaoValue_TryGetString( _p[1] );
  Craft::String excludes( DString_GetData( __str_excludes ), DString_Size( __str_excludes ) );

  self->SetVertexShaderDefineExcludes( excludes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_SetPixelShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  DString *__str_excludes = DaoValue_TryGetString( _p[1] );
  Craft::String excludes( DString_GetData( __str_excludes ), DString_Size( __str_excludes ) );

  self->SetPixelShaderDefineExcludes( excludes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_ReleaseShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  self->ReleaseShaders(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_MarkShadersLoaded( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );
  unsigned int frameNumber = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->MarkShadersLoaded( frameNumber );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  unsigned int _GetIndex = self->GetIndex(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetBlendMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  Craft::BlendMode _GetBlendMode = self->GetBlendMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetBlendMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetCullMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  Craft::CullMode _GetCullMode = self->GetCullMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetCullMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetDepthTestMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  Craft::CompareMode _GetDepthTestMode = self->GetDepthTestMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDepthTestMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetLightingMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  Craft::PassLightingMode _GetLightingMode = self->GetLightingMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLightingMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetShadersLoadedFrameNumber( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  unsigned int _GetShadersLoadedFrameNumber = self->GetShadersLoadedFrameNumber(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadersLoadedFrameNumber );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetDepthWrite( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  bool _GetDepthWrite = self->GetDepthWrite(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDepthWrite );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetAlphaToCoverage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  bool _GetAlphaToCoverage = self->GetAlphaToCoverage(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAlphaToCoverage );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_IsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  bool _IsDesktop = self->IsDesktop(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsDesktop );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetVertexShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetVertexShader = self->GetVertexShader(  );
  DaoProcess_PutBytes( _proc, (char*) _GetVertexShader.CString(), _GetVertexShader.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetPixelShader( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetPixelShader = self->GetPixelShader(  );
  DaoProcess_PutBytes( _proc, (char*) _GetPixelShader.CString(), _GetPixelShader.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetVertexShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetVertexShaderDefines = self->GetVertexShaderDefines(  );
  DaoProcess_PutBytes( _proc, (char*) _GetVertexShaderDefines.CString(), _GetVertexShaderDefines.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetPixelShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetPixelShaderDefines = self->GetPixelShaderDefines(  );
  DaoProcess_PutBytes( _proc, (char*) _GetPixelShaderDefines.CString(), _GetPixelShaderDefines.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetVertexShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetVertexShaderDefineExcludes = self->GetVertexShaderDefineExcludes(  );
  DaoProcess_PutBytes( _proc, (char*) _GetVertexShaderDefineExcludes.CString(), _GetVertexShaderDefineExcludes.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetPixelShaderDefineExcludes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  const Craft::String& _GetPixelShaderDefineExcludes = self->GetPixelShaderDefineExcludes(  );
  DaoProcess_PutBytes( _proc, (char*) _GetPixelShaderDefineExcludes.CString(), _GetPixelShaderDefineExcludes.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetEffectiveVertexShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  Craft::String _GetEffectiveVertexShaderDefines = self->GetEffectiveVertexShaderDefines(  );
  DaoProcess_PutBytes( _proc, (char*) _GetEffectiveVertexShaderDefines.CString(), _GetEffectiveVertexShaderDefines.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Pass_GetEffectivePixelShaderDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Pass* self = (Craft::Pass*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Pass_Core );

  Craft::String _GetEffectivePixelShaderDefines = self->GetEffectivePixelShaderDefines(  );
  DaoProcess_PutBytes( _proc, (char*) _GetEffectivePixelShaderDefines.CString(), _GetEffectivePixelShaderDefines.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Technique_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Technique_Technique_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_SetIsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_CreatePass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_RemovePass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_ReleaseShaders( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_IsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_IsSupported( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_HasPass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_HasPass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_GetPass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_GetPass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_GetSupportedPass( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_GetSupportedPass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_GetNumPasses( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Technique_GetPassIndex( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Technique_Meths[] = 
{
  { dao_Craft_Technique_Technique_dao_2, "Technique( context: Craft::Context )=>Craft::Technique" },
  { dao_Craft_Technique_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Technique_BeginLoad, "BeginLoad( self: Craft::Technique, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Technique_SetIsDesktop, "SetIsDesktop( self: Craft::Technique, enable: bool )" },
  { dao_Craft_Technique_CreatePass, "CreatePass( self: Craft::Technique, passName: string )=>Craft::Pass" },
  { dao_Craft_Technique_RemovePass, "RemovePass( self: Craft::Technique, passName: string )" },
  { dao_Craft_Technique_ReleaseShaders, "ReleaseShaders( self: Craft::Technique )" },
  { dao_Craft_Technique_IsDesktop, "IsDesktop( self: Craft::Technique )=>bool" },
  { dao_Craft_Technique_IsSupported, "IsSupported( self: Craft::Technique )=>bool" },
  { dao_Craft_Technique_HasPass, "HasPass( self: Craft::Technique, passIndex: int )=>bool" },
  { dao_Craft_Technique_HasPass_dao_2, "HasPass( self: Craft::Technique, passName: string )=>bool" },
  { dao_Craft_Technique_GetPass, "GetPass( self: Craft::Technique, passIndex: int )=>Craft::Pass" },
  { dao_Craft_Technique_GetPass_dao_2, "GetPass( self: Craft::Technique, passName: string )=>Craft::Pass" },
  { dao_Craft_Technique_GetSupportedPass, "GetSupportedPass( self: Craft::Technique, passIndex: int )=>Craft::Pass" },
  { dao_Craft_Technique_GetSupportedPass_dao_2, "GetSupportedPass( self: Craft::Technique, passName: string )=>Craft::Pass" },
  { dao_Craft_Technique_GetNumPasses, "GetNumPasses( self: Craft::Technique )=>int" },
  { dao_Craft_Technique_GetPassIndex, "GetPassIndex( passName: string )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_Technique_Delete( DaoValue *self )
{
	Craft::Technique *obj = (Craft::Technique*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Technique_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Technique *self = (DaoCxx_Craft_Technique*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Technique_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Technique*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Technique*)data);
}

static DaoTypeCore Craft_Technique_Core = 
{
  "Craft::Technique",
  sizeof(Craft::Technique),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Technique_Craft_Resource,NULL },
  dao_Craft_Technique_Nums,
  dao_Craft_Technique_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Technique_Delete,
  Dao_Craft_Technique_HandleGC
};
DaoTypeCore *dao_Craft_Technique_Core = & Craft_Technique_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_Technique_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_Technique *_self = new DaoCxx_Craft_Technique( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Technique::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_SetIsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetIsDesktop( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_CreatePass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  DString *__str_passName = DaoValue_TryGetString( _p[1] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  Craft::Pass* _CreatePass = self->CreatePass( passName );
  DaoProcess_WrapCdataTC( _proc, (void*) _CreatePass, dao_Craft_Pass_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_RemovePass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  DString *__str_passName = DaoValue_TryGetString( _p[1] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  self->RemovePass( passName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_ReleaseShaders( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );

  self->ReleaseShaders(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_IsDesktop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );

  bool _IsDesktop = self->IsDesktop(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsDesktop );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_IsSupported( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );

  bool _IsSupported = self->IsSupported(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSupported );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_HasPass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  unsigned int passIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _HasPass = self->HasPass( passIndex );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasPass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_HasPass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  DString *__str_passName = DaoValue_TryGetString( _p[1] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  bool _HasPass = self->HasPass( passName );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasPass );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_GetPass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  unsigned int passIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Pass* _GetPass = self->GetPass( passIndex );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPass, dao_Craft_Pass_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_GetPass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  DString *__str_passName = DaoValue_TryGetString( _p[1] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  Craft::Pass* _GetPass = self->GetPass( passName );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPass, dao_Craft_Pass_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_GetSupportedPass( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  unsigned int passIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Pass* _GetSupportedPass = self->GetSupportedPass( passIndex );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSupportedPass, dao_Craft_Pass_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_GetSupportedPass_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );
  DString *__str_passName = DaoValue_TryGetString( _p[1] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  Craft::Pass* _GetSupportedPass = self->GetSupportedPass( passName );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSupportedPass, dao_Craft_Pass_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_GetNumPasses( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Technique* self = (Craft::Technique*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Technique_Core );

  unsigned int _GetNumPasses = self->GetNumPasses(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumPasses );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Technique_GetPassIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DString *__str_passName = DaoValue_TryGetString( _p[0] );
  Craft::String passName( DString_GetData( __str_passName ), DString_Size( __str_passName ) );

  unsigned int _GetPassIndex = Craft::Technique::GetPassIndex( passName );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPassIndex );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Geometry_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Geometry_Geometry_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_SetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_Draw( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_GetPrimitiveType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_GetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_GetHitDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Geometry_IsEmpty( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Geometry_Meths[] = 
{
  { dao_Craft_Geometry_Geometry_dao_2, "Geometry(  )=>Craft::Geometry" },
  { dao_Craft_Geometry_SetLodDistance, "SetLodDistance( self: Craft::Geometry, distance: float )" },
  { dao_Craft_Geometry_Draw, "Draw( self: Craft::Geometry, graphics: Craft::Graphics )" },
  { dao_Craft_Geometry_GetPrimitiveType, "GetPrimitiveType( self: Craft::Geometry )=>int" },
  { dao_Craft_Geometry_GetLodDistance, "GetLodDistance( self: Craft::Geometry )=>float" },
  { dao_Craft_Geometry_GetHitDistance, "GetHitDistance( self: Craft::Geometry, ray: Craft::Ray, outNormal: Craft::Vector3|none =none, outUV: Craft::Vector2|none =none )=>float" },
  { dao_Craft_Geometry_IsInside, "IsInside( self: Craft::Geometry, ray: Craft::Ray )=>bool" },
  { dao_Craft_Geometry_IsEmpty, "IsEmpty( self: Craft::Geometry )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Geometry_Delete( DaoValue *self )
{
	Craft::Geometry *obj = (Craft::Geometry*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Geometry_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Geometry *self = (DaoCxx_Craft_Geometry*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Geometry_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Geometry*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Geometry*)data);
}

static DaoTypeCore Craft_Geometry_Core = 
{
  "Craft::Geometry",
  sizeof(Craft::Geometry),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Geometry_Craft_Object,NULL },
  dao_Craft_Geometry_Nums,
  dao_Craft_Geometry_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Geometry_Delete,
  Dao_Craft_Geometry_HandleGC
};
DaoTypeCore *dao_Craft_Geometry_Core = & Craft_Geometry_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_Geometry_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Geometry *_self = new DaoCxx_Craft_Geometry( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_SetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLodDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_Draw( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );
  Craft::Graphics* graphics = (Craft::Graphics*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Graphics_Core );

  self->Draw( graphics );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_GetPrimitiveType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );

  Craft::PrimitiveType _GetPrimitiveType = self->GetPrimitiveType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPrimitiveType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_GetLodDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );

  float _GetLodDistance = self->GetLodDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLodDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_GetHitDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );
  Craft::Ray* ray = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Ray_Core );
  Craft::Vector3* outNormal = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Vector3_Core );
  Craft::Vector2* outUV = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Vector2_Core );

  float _GetHitDistance = self->GetHitDistance( *ray, outNormal, outUV );
  DaoProcess_PutFloat( _proc, (dao_float) _GetHitDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );
  Craft::Ray* ray = (Craft::Ray*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Ray_Core );

  bool _IsInside = self->IsInside( *ray );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Geometry_IsEmpty( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Geometry* self = (Craft::Geometry*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Geometry_Core );

  bool _IsEmpty = self->IsEmpty(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEmpty );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Texture2D_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Texture2D_Texture2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_Release( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_SetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_SetData_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
extern void dao_Craft_Texture2D_GetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Texture2D_GetRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Texture2D_Meths[] = 
{
  { dao_Craft_Texture2D_Texture2D_dao_2, "Texture2D(  )=>Craft::Texture2D" },
  { dao_Craft_Texture2D_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Texture2D_BeginLoad, "BeginLoad( self: Craft::Texture2D, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Texture2D_EndLoad, "EndLoad( self: Craft::Texture2D )=>bool" },
  { dao_Craft_Texture2D_Release, "Release( self: Craft::Texture2D )" },
  { dao_Craft_Texture2D_SetSize, "SetSize( self: Craft::Texture2D, width: int, height: int, format: int, usage: int =TEXTURE_STATIC )=>bool" },
  { dao_Craft_Texture2D_SetData, "SetData( self: Craft::Texture2D, level: int, x: int, y: int, width: int, height: int, data: cdata )=>bool" },
  { dao_Craft_Texture2D_SetData_dao_2, "SetData( self: Craft::Texture2D, image: Craft::Image, useAlpha: bool =false )=>bool" },
  { dao_Craft_Texture2D_GetData, "GetData( self: Craft::Texture2D, level: int, image :Craft::Image )=>bool" },
  { dao_Craft_Texture2D_GetRenderSurface, "GetRenderSurface( self: Craft::Texture2D )=>Craft::RenderSurface" },
  { NULL, NULL }
};
static void Dao_Craft_Texture2D_Delete( DaoValue *self )
{
	Craft::Texture2D *obj = (Craft::Texture2D*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Texture2D_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Texture2D *self = (DaoCxx_Craft_Texture2D*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Texture2D_Craft_Texture( void *data, int down )
{
	if( down ) return static_cast<Craft::Texture2D*>((Craft::Texture*)data);
	return dynamic_cast<Craft::Texture*>((Craft::Texture2D*)data);
}

static DaoTypeCore Craft_Texture2D_Core = 
{
  "Craft::Texture2D",
  sizeof(Craft::Texture2D),
  { dao_Craft_Texture_Core, NULL },
  { dao_cast_Craft_Texture2D_Craft_Texture,NULL },
  dao_Craft_Texture2D_Nums,
  dao_Craft_Texture2D_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Texture2D_Delete,
  Dao_Craft_Texture2D_HandleGC
};
DaoTypeCore *dao_Craft_Texture2D_Core = & Craft_Texture2D_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_Texture2D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Texture2D *_self = new DaoCxx_Craft_Texture2D( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Texture2D::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_Release( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );

  self->Release(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );
  unsigned int format = (unsigned int) DaoValue_TryGetInteger( _p[3] );
  Craft::TextureUsage usage = (Craft::TextureUsage) DaoValue_TryGetInteger( _p[4] );

  bool _SetSize = self->SetSize( width, height, format, usage );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_SetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  int x = (int) DaoValue_TryGetInteger( _p[2] );
  int y = (int) DaoValue_TryGetInteger( _p[3] );
  int width = (int) DaoValue_TryGetInteger( _p[4] );
  int height = (int) DaoValue_TryGetInteger( _p[5] );
  const void* data = (const void*) DaoValue_TryGetCdata( _p[6] );

  bool _SetData = self->SetData( level, x, y, width, height, data );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_SetData_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );
  Craft::Image* image = (Craft::Image*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Image_Core );
  bool useAlpha = (bool) DaoValue_TryGetBoolean( _p[2] );

  bool _SetData = self->SetData( image, useAlpha );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Texture2D_GetRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Texture2D* self = (Craft::Texture2D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Texture2D_Core );

  Craft::RenderSurface* _GetRenderSurface = self->GetRenderSurface(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderSurface, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_TextureCube_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_TextureCube_TextureCube_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_Release( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_SetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_SetData_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_GetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TextureCube_GetRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_TextureCube_Meths[] = 
{
  { dao_Craft_TextureCube_TextureCube_dao_2, "TextureCube(  )=>Craft::TextureCube" },
  { dao_Craft_TextureCube_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_TextureCube_BeginLoad, "BeginLoad( self: Craft::TextureCube, source: Craft::Deserializer )=>bool" },
  { dao_Craft_TextureCube_EndLoad, "EndLoad( self: Craft::TextureCube )=>bool" },
  { dao_Craft_TextureCube_Release, "Release( self: Craft::TextureCube )" },
  { dao_Craft_TextureCube_SetSize, "SetSize( self: Craft::TextureCube, size: int, format: int, usage: int =TEXTURE_STATIC )=>bool" },
  { dao_Craft_TextureCube_SetData, "SetData( self: Craft::TextureCube, face: int, level: int, x: int, y: int, width: int, height: int, data: cdata )=>bool" },
  { dao_Craft_TextureCube_SetData_dao_2, "SetData( self: Craft::TextureCube, face: int, source: Craft::Deserializer )=>bool" },
  { dao_Craft_TextureCube_GetData, "GetData( self: Craft::TextureCube, face: int, level: int, dest: cdata )=>bool" },
  { dao_Craft_TextureCube_GetRenderSurface, "GetRenderSurface( self: Craft::TextureCube, face: int )=>Craft::RenderSurface" },
  { NULL, NULL }
};
static void Dao_Craft_TextureCube_Delete( DaoValue *self )
{
	Craft::TextureCube *obj = (Craft::TextureCube*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_TextureCube_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_TextureCube *self = (DaoCxx_Craft_TextureCube*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_TextureCube_Craft_Texture( void *data, int down )
{
	if( down ) return static_cast<Craft::TextureCube*>((Craft::Texture*)data);
	return dynamic_cast<Craft::Texture*>((Craft::TextureCube*)data);
}

static DaoTypeCore Craft_TextureCube_Core = 
{
  "Craft::TextureCube",
  sizeof(Craft::TextureCube),
  { dao_Craft_Texture_Core, NULL },
  { dao_cast_Craft_TextureCube_Craft_Texture,NULL },
  dao_Craft_TextureCube_Nums,
  dao_Craft_TextureCube_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_TextureCube_Delete,
  Dao_Craft_TextureCube_HandleGC
};
DaoTypeCore *dao_Craft_TextureCube_Core = & Craft_TextureCube_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_TextureCube_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_TextureCube *_self = new DaoCxx_Craft_TextureCube( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::TextureCube::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_Release( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );

  self->Release(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );
  int size = (int) DaoValue_TryGetInteger( _p[1] );
  unsigned int format = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  Craft::TextureUsage usage = (Craft::TextureUsage) DaoValue_TryGetInteger( _p[3] );

  bool _SetSize = self->SetSize( size, format, usage );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_SetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );
  Craft::CubeMapFace face = (Craft::CubeMapFace) DaoValue_TryGetInteger( _p[1] );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  int x = (int) DaoValue_TryGetInteger( _p[3] );
  int y = (int) DaoValue_TryGetInteger( _p[4] );
  int width = (int) DaoValue_TryGetInteger( _p[5] );
  int height = (int) DaoValue_TryGetInteger( _p[6] );
  const void* data = (const void*) DaoValue_TryGetCdata( _p[7] );

  bool _SetData = self->SetData( face, level, x, y, width, height, data );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_SetData_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );
  Craft::CubeMapFace face = (Craft::CubeMapFace) DaoValue_TryGetInteger( _p[1] );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Deserializer_Core );

  bool _SetData = self->SetData( face, *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_GetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );
  Craft::CubeMapFace face = (Craft::CubeMapFace) DaoValue_TryGetInteger( _p[1] );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  void* dest = (void*) DaoValue_TryGetCdata( _p[3] );

  bool _GetData = self->GetData( face, level, dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureCube_GetRenderSurface( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TextureCube* self = (Craft::TextureCube*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TextureCube_Core );
  Craft::CubeMapFace face = (Craft::CubeMapFace) DaoValue_TryGetInteger( _p[1] );

  Craft::RenderSurface* _GetRenderSurface = self->GetRenderSurface( face );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderSurface, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_FrameInfo_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_FrameInfo_FrameInfo( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FrameInfo_GETF_frameNumber_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FrameInfo_SETF_frameNumber_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FrameInfo_GETF_timeStep_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FrameInfo_SETF_timeStep_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FrameInfo_GETF_viewSize_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_FrameInfo_GETF_camera_( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_FrameInfo_Meths[] = 
{
  { dao_Craft_FrameInfo_FrameInfo, "FrameInfo(  )=>FrameInfo" },
  { dao_Craft_FrameInfo_GETF_frameNumber_, ".frameNumber_ ( self: Craft::FrameInfo )=>int" },
  { dao_Craft_FrameInfo_SETF_frameNumber_, ".frameNumber_=( self: Craft::FrameInfo, frameNumber_: int )" },
  { dao_Craft_FrameInfo_GETF_timeStep_, ".timeStep_ ( self: Craft::FrameInfo )=>float" },
  { dao_Craft_FrameInfo_SETF_timeStep_, ".timeStep_=( self: Craft::FrameInfo, timeStep_: float )" },
  { dao_Craft_FrameInfo_GETF_viewSize_, ".viewSize_ ( self: Craft::FrameInfo )=>Craft::IntVector2" },
  { dao_Craft_FrameInfo_GETF_camera_, ".camera_ ( self: Craft::FrameInfo )=>Craft::Camera" },
  { NULL, NULL }
};
static void Dao_Craft_FrameInfo_Delete( DaoValue *self )
{
	delete (Craft::FrameInfo*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_FrameInfo_Core = 
{
  "Craft::FrameInfo",
  sizeof(Craft::FrameInfo),
  { NULL },
  { NULL },
  dao_Craft_FrameInfo_Nums,
  dao_Craft_FrameInfo_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_FrameInfo_Delete,
  NULL
};
DaoTypeCore *dao_Craft_FrameInfo_Core = & Craft_FrameInfo_Core;
static void dao_Craft_FrameInfo_FrameInfo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
	Craft::FrameInfo *self = Dao_Craft_FrameInfo_New();
	DaoProcess_PutCdataTC( _proc, self, dao_Craft_FrameInfo_Core );
}
static void dao_Craft_FrameInfo_GETF_frameNumber_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FrameInfo *self = (Craft::FrameInfo*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FrameInfo_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->frameNumber_ );
}
static void dao_Craft_FrameInfo_SETF_frameNumber_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FrameInfo *self = (Craft::FrameInfo*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FrameInfo_Core);
  self->frameNumber_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_FrameInfo_GETF_timeStep_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FrameInfo *self = (Craft::FrameInfo*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FrameInfo_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->timeStep_ );
}
static void dao_Craft_FrameInfo_SETF_timeStep_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FrameInfo *self = (Craft::FrameInfo*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FrameInfo_Core);
  self->timeStep_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_FrameInfo_GETF_viewSize_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FrameInfo *self = (Craft::FrameInfo*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FrameInfo_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->viewSize_, dao_Craft_IntVector2_Core );
}
static void dao_Craft_FrameInfo_GETF_camera_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::FrameInfo *self = (Craft::FrameInfo*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_FrameInfo_Core);
  DaoProcess_WrapCdataTC( _proc, (void*) self->camera_, dao_Craft_Camera_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Shader_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Shader_Shader_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_GetVariation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_GetVariation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_GetSourceCode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Shader_GetTimeStamp( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Shader_Meths[] = 
{
  { dao_Craft_Shader_Shader_dao_2, "Shader(  )=>Craft::Shader" },
  { dao_Craft_Shader_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Shader_BeginLoad, "BeginLoad( self: Craft::Shader, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Shader_EndLoad, "EndLoad( self: Craft::Shader )=>bool" },
  { dao_Craft_Shader_GetVariation, "GetVariation( self: Craft::Shader, type: int, defines: string )=>Craft::ShaderVariation" },
  { dao_Craft_Shader_GetVariation_dao_2, "GetVariation( self: Craft::Shader, type: int, defines: string )=>Craft::ShaderVariation" },
  { dao_Craft_Shader_GetSourceCode, "GetSourceCode( self: Craft::Shader, type: int )=>string" },
  { dao_Craft_Shader_GetTimeStamp, "GetTimeStamp( self: Craft::Shader )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_Shader_Delete( DaoValue *self )
{
	Craft::Shader *obj = (Craft::Shader*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Shader_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Shader *self = (DaoCxx_Craft_Shader*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Shader_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Shader*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Shader*)data);
}

static DaoTypeCore Craft_Shader_Core = 
{
  "Craft::Shader",
  sizeof(Craft::Shader),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Shader_Craft_Resource,NULL },
  dao_Craft_Shader_Nums,
  dao_Craft_Shader_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Shader_Delete,
  Dao_Craft_Shader_HandleGC
};
DaoTypeCore *dao_Craft_Shader_Core = & Craft_Shader_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_Shader_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Shader *_self = new DaoCxx_Craft_Shader( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Shader::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* self = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* self = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_GetVariation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* self = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );
  Craft::ShaderType type = (Craft::ShaderType) DaoValue_TryGetInteger( _p[1] );
  DString *__str_defines = DaoValue_TryGetString( _p[2] );
  Craft::String defines( DString_GetData( __str_defines ), DString_Size( __str_defines ) );

  Craft::ShaderVariation* _GetVariation = self->GetVariation( type, defines );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetVariation, dao_Craft_ShaderVariation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_GetVariation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* self = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );
  Craft::ShaderType type = (Craft::ShaderType) DaoValue_TryGetInteger( _p[1] );
  const char* defines = (const char*) DaoValue_TryGetChars( _p[2] );

  Craft::ShaderVariation* _GetVariation = self->GetVariation( type, defines );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetVariation, dao_Craft_ShaderVariation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_GetSourceCode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* self = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );
  Craft::ShaderType type = (Craft::ShaderType) DaoValue_TryGetInteger( _p[1] );

  const Craft::String& _GetSourceCode = self->GetSourceCode( type );
  DaoProcess_PutBytes( _proc, (char*) _GetSourceCode.CString(), _GetSourceCode.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Shader_GetTimeStamp( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* self = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );

  unsigned int _GetTimeStamp = self->GetTimeStamp(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTimeStamp );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ShaderVariation_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ShaderVariation_ShaderVariation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_OnDeviceLost( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_Release( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_Create( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_SetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_SetDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_GetShaderType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_GetName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_GetDefines( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_GetFullName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ShaderVariation_GetCompilerOutput( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ShaderVariation_Meths[] = 
{
  { dao_Craft_ShaderVariation_ShaderVariation_dao_2, "ShaderVariation( owner: Craft::Shader, type: int )=>Craft::ShaderVariation" },
  { dao_Craft_ShaderVariation_OnDeviceLost, "OnDeviceLost( self: Craft::ShaderVariation )" },
  { dao_Craft_ShaderVariation_Release, "Release( self: Craft::ShaderVariation )" },
  { dao_Craft_ShaderVariation_Create, "Create( self: Craft::ShaderVariation )=>bool" },
  { dao_Craft_ShaderVariation_SetName, "SetName( self: Craft::ShaderVariation, name: string )" },
  { dao_Craft_ShaderVariation_SetDefines, "SetDefines( self: Craft::ShaderVariation, defines: string )" },
  { dao_Craft_ShaderVariation_GetOwner, "GetOwner( self: Craft::ShaderVariation )=>Craft::Shader" },
  { dao_Craft_ShaderVariation_GetShaderType, "GetShaderType( self: Craft::ShaderVariation )=>int" },
  { dao_Craft_ShaderVariation_GetName, "GetName( self: Craft::ShaderVariation )=>string" },
  { dao_Craft_ShaderVariation_GetDefines, "GetDefines( self: Craft::ShaderVariation )=>string" },
  { dao_Craft_ShaderVariation_GetFullName, "GetFullName( self: Craft::ShaderVariation )=>string" },
  { dao_Craft_ShaderVariation_GetCompilerOutput, "GetCompilerOutput( self: Craft::ShaderVariation )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_ShaderVariation_Delete( DaoValue *self )
{
	delete (Craft::ShaderVariation*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ShaderVariation_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ShaderVariation *self = (DaoCxx_Craft_ShaderVariation*) DaoValue_TryGetCdata( P );
	if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
	if( RM ){
		self->dao_cdata = NULL;
	}
	Dao_Craft_UnlockHandleGC();
}

static DaoTypeCore Craft_ShaderVariation_Core = 
{
  "Craft::ShaderVariation",
  sizeof(Craft::ShaderVariation),
  { NULL },
  { NULL },
  dao_Craft_ShaderVariation_Nums,
  dao_Craft_ShaderVariation_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ShaderVariation_Delete,
  Dao_Craft_ShaderVariation_HandleGC
};
DaoTypeCore *dao_Craft_ShaderVariation_Core = & Craft_ShaderVariation_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_ShaderVariation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Shader* owner = (Craft::Shader*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Shader_Core );
  Craft::ShaderType type = (Craft::ShaderType) DaoValue_TryGetInteger( _p[1] );

  DaoCxx_Craft_ShaderVariation *_self = new DaoCxx_Craft_ShaderVariation( owner, type );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_OnDeviceLost( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  self->OnDeviceLost(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_Release( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  self->Release(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_Create( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  bool _Create = self->Create(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Create );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_SetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetName( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_SetDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );
  DString *__str_defines = DaoValue_TryGetString( _p[1] );
  Craft::String defines( DString_GetData( __str_defines ), DString_Size( __str_defines ) );

  self->SetDefines( defines );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  Craft::Shader* _GetOwner = self->GetOwner(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOwner, dao_Craft_Shader_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_GetShaderType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  Craft::ShaderType _GetShaderType = self->GetShaderType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShaderType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_GetName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  const Craft::String& _GetName = self->GetName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetName.CString(), _GetName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_GetDefines( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  const Craft::String& _GetDefines = self->GetDefines(  );
  DaoProcess_PutBytes( _proc, (char*) _GetDefines.CString(), _GetDefines.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_GetFullName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  Craft::String _GetFullName = self->GetFullName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetFullName.CString(), _GetFullName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ShaderVariation_GetCompilerOutput( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ShaderVariation* self = (Craft::ShaderVariation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ShaderVariation_Core );

  const Craft::String& _GetCompilerOutput = self->GetCompilerOutput(  );
  DaoProcess_PutBytes( _proc, (char*) _GetCompilerOutput.CString(), _GetCompilerOutput.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ShaderProgram_Nums[] = 
{
  { NULL, 0, 0 }
};



static DaoFunctionEntry dao_Craft_ShaderProgram_Meths[] = 
{
  { NULL, NULL }
};
static void Dao_Craft_ShaderProgram_Delete( DaoValue *self )
{
	delete (Craft::ShaderProgram*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_ShaderProgram_Core = 
{
  "Craft::ShaderProgram",
  sizeof(Craft::ShaderProgram),
  { NULL },
  { NULL },
  dao_Craft_ShaderProgram_Nums,
  dao_Craft_ShaderProgram_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ShaderProgram_Delete,
  NULL
};
DaoTypeCore *dao_Craft_ShaderProgram_Core = & Craft_ShaderProgram_Core;
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_RenderTargetInfo_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_RenderTargetInfo_RenderTargetInfo_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_RenderTargetInfo_Meths[] = 
{
  { dao_Craft_RenderTargetInfo_RenderTargetInfo_dao_3, "RenderTargetInfo(  )=>Craft::RenderTargetInfo" },
  { NULL, NULL }
};
static void Dao_Craft_RenderTargetInfo_Delete( DaoValue *self )
{
	delete (Craft::RenderTargetInfo*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_RenderTargetInfo_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::RenderTargetInfo* src = (Craft::RenderTargetInfo*) DaoValue_TryCastCdataTC( self, dao_Craft_RenderTargetInfo_Core );
	Craft::RenderTargetInfo* dest;
	if( target ){
		dest = (Craft::RenderTargetInfo*) DaoValue_TryCastCdataTC( target, dao_Craft_RenderTargetInfo_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::RenderTargetInfo( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_RenderTargetInfo_Core, dest );
}

static DaoTypeCore Craft_RenderTargetInfo_Core = 
{
  "Craft::RenderTargetInfo",
  sizeof(Craft::RenderTargetInfo),
  { NULL },
  { NULL },
  dao_Craft_RenderTargetInfo_Nums,
  dao_Craft_RenderTargetInfo_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_RenderTargetInfo_Copy,
  Dao_Craft_RenderTargetInfo_Delete,
  NULL
};
DaoTypeCore *dao_Craft_RenderTargetInfo_Core = & Craft_RenderTargetInfo_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderTargetInfo_RenderTargetInfo_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::RenderTargetInfo _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_RenderTargetInfo_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_RenderPathCommand_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_RenderPathCommand_RenderPathCommand_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetTextureName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_RemoveShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetNumOutputs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetOutput( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetOutputName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetOutputFace( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_SetDepthStencilName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_GetTextureName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_GetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_GetNumOutputs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_GetOutputName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_GetOutputFace( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPathCommand_GetDepthStencilName( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_RenderPathCommand_Meths[] = 
{
  { dao_Craft_RenderPathCommand_RenderPathCommand_dao_2, "RenderPathCommand(  )=>Craft::RenderPathCommand" },
  { dao_Craft_RenderPathCommand_SetTextureName, "SetTextureName( self: Craft::RenderPathCommand, unit: int, name: string )" },
  { dao_Craft_RenderPathCommand_SetShaderParameter, "SetShaderParameter( self: Craft::RenderPathCommand, name: string, value: Craft::Variant )" },
  { dao_Craft_RenderPathCommand_RemoveShaderParameter, "RemoveShaderParameter( self: Craft::RenderPathCommand, name: string )" },
  { dao_Craft_RenderPathCommand_SetNumOutputs, "SetNumOutputs( self: Craft::RenderPathCommand, num: int )" },
  { dao_Craft_RenderPathCommand_SetOutput, "SetOutput( self: Craft::RenderPathCommand, index: int, name: string, face: int =FACE_POSITIVE_X )" },
  { dao_Craft_RenderPathCommand_SetOutputName, "SetOutputName( self: Craft::RenderPathCommand, index: int, name: string )" },
  { dao_Craft_RenderPathCommand_SetOutputFace, "SetOutputFace( self: Craft::RenderPathCommand, index: int, face: int )" },
  { dao_Craft_RenderPathCommand_SetDepthStencilName, "SetDepthStencilName( self: Craft::RenderPathCommand, name: string )" },
  { dao_Craft_RenderPathCommand_GetTextureName, "GetTextureName( self: Craft::RenderPathCommand, unit: int )=>string" },
  { dao_Craft_RenderPathCommand_GetShaderParameter, "GetShaderParameter( self: Craft::RenderPathCommand, name: string )=>Craft::Variant" },
  { dao_Craft_RenderPathCommand_GetNumOutputs, "GetNumOutputs( self: Craft::RenderPathCommand )=>int" },
  { dao_Craft_RenderPathCommand_GetOutputName, "GetOutputName( self: Craft::RenderPathCommand, index: int )=>string" },
  { dao_Craft_RenderPathCommand_GetOutputFace, "GetOutputFace( self: Craft::RenderPathCommand, index: int )=>int" },
  { dao_Craft_RenderPathCommand_GetDepthStencilName, "GetDepthStencilName( self: Craft::RenderPathCommand )=>string" },
  { NULL, NULL }
};
static void Dao_Craft_RenderPathCommand_Delete( DaoValue *self )
{
	delete (Craft::RenderPathCommand*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_RenderPathCommand_Core = 
{
  "Craft::RenderPathCommand",
  sizeof(Craft::RenderPathCommand),
  { NULL },
  { NULL },
  dao_Craft_RenderPathCommand_Nums,
  dao_Craft_RenderPathCommand_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_RenderPathCommand_Delete,
  NULL
};
DaoTypeCore *dao_Craft_RenderPathCommand_Core = & Craft_RenderPathCommand_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_RenderPathCommand_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::RenderPathCommand *_self = new Craft::RenderPathCommand(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_RenderPathCommand_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetTextureName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[1] );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetTextureName( unit, name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  self->SetShaderParameter( name, *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_RemoveShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->RemoveShaderParameter( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetNumOutputs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumOutputs( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetOutput( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::CubeMapFace face = (Craft::CubeMapFace) DaoValue_TryGetInteger( _p[3] );

  self->SetOutput( index, name, face );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetOutputName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetOutputName( index, name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetOutputFace( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::CubeMapFace face = (Craft::CubeMapFace) DaoValue_TryGetInteger( _p[2] );

  self->SetOutputFace( index, face );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_SetDepthStencilName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetDepthStencilName( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_GetTextureName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  Craft::TextureUnit unit = (Craft::TextureUnit) DaoValue_TryGetInteger( _p[1] );

  const Craft::String& _GetTextureName = self->GetTextureName( unit );
  DaoProcess_PutBytes( _proc, (char*) _GetTextureName.CString(), _GetTextureName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_GetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  const Craft::Variant& _GetShaderParameter = self->GetShaderParameter( name );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetShaderParameter, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_GetNumOutputs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );

  unsigned int _GetNumOutputs = self->GetNumOutputs(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumOutputs );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_GetOutputName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  const Craft::String& _GetOutputName = self->GetOutputName( index );
  DaoProcess_PutBytes( _proc, (char*) _GetOutputName.CString(), _GetOutputName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_GetOutputFace( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::CubeMapFace _GetOutputFace = self->GetOutputFace( index );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetOutputFace );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPathCommand_GetDepthStencilName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPathCommand* self = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPathCommand_Core );

  const Craft::String& _GetDepthStencilName = self->GetDepthStencilName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetDepthStencilName.CString(), _GetDepthStencilName.Length() );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_RenderPath_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_RenderPath_RenderPath_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_SetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_ToggleEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_SetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_AddRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_RemoveRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_RemoveRenderTarget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_RemoveRenderTargets( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_SetCommand( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_AddCommand( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_InsertCommand( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_RemoveCommand( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_RemoveCommands( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_GetNumRenderTargets( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_GetNumCommands( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_GetCommand( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_RenderPath_GetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_RenderPath_Meths[] = 
{
  { dao_Craft_RenderPath_RenderPath_dao_2, "RenderPath(  )=>Craft::RenderPath" },
  { dao_Craft_RenderPath_SetEnabled, "SetEnabled( self: Craft::RenderPath, tag: string, active: bool )" },
  { dao_Craft_RenderPath_ToggleEnabled, "ToggleEnabled( self: Craft::RenderPath, tag: string )" },
  { dao_Craft_RenderPath_SetRenderTarget, "SetRenderTarget( self: Craft::RenderPath, index: int, info: Craft::RenderTargetInfo )" },
  { dao_Craft_RenderPath_AddRenderTarget, "AddRenderTarget( self: Craft::RenderPath, info: Craft::RenderTargetInfo )" },
  { dao_Craft_RenderPath_RemoveRenderTarget, "RemoveRenderTarget( self: Craft::RenderPath, index: int )" },
  { dao_Craft_RenderPath_RemoveRenderTarget_dao_2, "RemoveRenderTarget( self: Craft::RenderPath, name: string )" },
  { dao_Craft_RenderPath_RemoveRenderTargets, "RemoveRenderTargets( self: Craft::RenderPath, tag: string )" },
  { dao_Craft_RenderPath_SetCommand, "SetCommand( self: Craft::RenderPath, index: int, command: Craft::RenderPathCommand )" },
  { dao_Craft_RenderPath_AddCommand, "AddCommand( self: Craft::RenderPath, command: Craft::RenderPathCommand )" },
  { dao_Craft_RenderPath_InsertCommand, "InsertCommand( self: Craft::RenderPath, index: int, command: Craft::RenderPathCommand )" },
  { dao_Craft_RenderPath_RemoveCommand, "RemoveCommand( self: Craft::RenderPath, index: int )" },
  { dao_Craft_RenderPath_RemoveCommands, "RemoveCommands( self: Craft::RenderPath, tag: string )" },
  { dao_Craft_RenderPath_SetShaderParameter, "SetShaderParameter( self: Craft::RenderPath, name: string, value: Craft::Variant )" },
  { dao_Craft_RenderPath_GetNumRenderTargets, "GetNumRenderTargets( self: Craft::RenderPath )=>int" },
  { dao_Craft_RenderPath_GetNumCommands, "GetNumCommands( self: Craft::RenderPath )=>int" },
  { dao_Craft_RenderPath_GetCommand, "GetCommand( self: Craft::RenderPath, index: int )=>Craft::RenderPathCommand" },
  { dao_Craft_RenderPath_GetShaderParameter, "GetShaderParameter( self: Craft::RenderPath, name: string )=>Craft::Variant" },
  { NULL, NULL }
};
static void Dao_Craft_RenderPath_Delete( DaoValue *self )
{
	delete (Craft::RenderPath*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_RenderPath_Core = 
{
  "Craft::RenderPath",
  sizeof(Craft::RenderPath),
  { NULL },
  { NULL },
  dao_Craft_RenderPath_Nums,
  dao_Craft_RenderPath_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_RenderPath_Delete,
  NULL
};
DaoTypeCore *dao_Craft_RenderPath_Core = & Craft_RenderPath_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_RenderPath_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::RenderPath *_self = new Craft::RenderPath(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_RenderPath_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_SetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_tag = DaoValue_TryGetString( _p[1] );
  Craft::String tag( DString_GetData( __str_tag ), DString_Size( __str_tag ) );
  bool active = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetEnabled( tag, active );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_ToggleEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_tag = DaoValue_TryGetString( _p[1] );
  Craft::String tag( DString_GetData( __str_tag ), DString_Size( __str_tag ) );

  self->ToggleEnabled( tag );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_SetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::RenderTargetInfo* info = (Craft::RenderTargetInfo*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_RenderTargetInfo_Core );

  self->SetRenderTarget( index, *info );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_AddRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  Craft::RenderTargetInfo* info = (Craft::RenderTargetInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderTargetInfo_Core );

  self->AddRenderTarget( *info );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_RemoveRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveRenderTarget( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_RemoveRenderTarget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->RemoveRenderTarget( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_RemoveRenderTargets( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_tag = DaoValue_TryGetString( _p[1] );
  Craft::String tag( DString_GetData( __str_tag ), DString_Size( __str_tag ) );

  self->RemoveRenderTargets( tag );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_SetCommand( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::RenderPathCommand* command = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_RenderPathCommand_Core );

  self->SetCommand( index, *command );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_AddCommand( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  Craft::RenderPathCommand* command = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderPathCommand_Core );

  self->AddCommand( *command );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_InsertCommand( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::RenderPathCommand* command = (Craft::RenderPathCommand*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_RenderPathCommand_Core );

  self->InsertCommand( index, *command );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_RemoveCommand( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveCommand( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_RemoveCommands( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_tag = DaoValue_TryGetString( _p[1] );
  Craft::String tag( DString_GetData( __str_tag ), DString_Size( __str_tag ) );

  self->RemoveCommands( tag );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_SetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  Craft::Variant* value = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  self->SetShaderParameter( name, *value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_GetNumRenderTargets( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );

  unsigned int _GetNumRenderTargets = self->GetNumRenderTargets(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumRenderTargets );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_GetNumCommands( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );

  unsigned int _GetNumCommands = self->GetNumCommands(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumCommands );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_GetCommand( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::RenderPathCommand* _GetCommand = self->GetCommand( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetCommand, dao_Craft_RenderPathCommand_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_RenderPath_GetShaderParameter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::RenderPath* self = (Craft::RenderPath*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_RenderPath_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  const Craft::Variant& _GetShaderParameter = self->GetShaderParameter( name );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetShaderParameter, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static DaoTypeCore Craft_RayOctreeQuery_Core = 
{
  "Craft::RayOctreeQuery",
  0,
  { NULL },
  { NULL },
  NULL,
  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL
};

DaoTypeCore *dao_Craft_RayOctreeQuery_Core = & Craft_RayOctreeQuery_Core;
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_View_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_View_View_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_Render( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_GetGraphics( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_GetRenderer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_GetOctree( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_GetCamera( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_GetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_SetGlobalShaderParameters( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_SetCameraShaderParameters( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_View_SetGBufferShaderParameters( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_View_Meths[] = 
{
  { dao_Craft_View_View_dao_2, "View(  )=>Craft::View" },
  { dao_Craft_View_Define, "Define( self: Craft::View, renderTarget: Craft::RenderSurface, viewport: Craft::Viewport )=>bool" },
  { dao_Craft_View_Update, "Update( self: Craft::View, frame: Craft::FrameInfo )" },
  { dao_Craft_View_Render, "Render( self: Craft::View )" },
  { dao_Craft_View_GetGraphics, "GetGraphics( self: Craft::View )=>Craft::Graphics" },
  { dao_Craft_View_GetRenderer, "GetRenderer( self: Craft::View )=>Craft::Renderer" },
  { dao_Craft_View_GetScene, "GetScene( self: Craft::View )=>Craft::Scene" },
  { dao_Craft_View_GetOctree, "GetOctree( self: Craft::View )=>Craft::Octree" },
  { dao_Craft_View_GetCamera, "GetCamera( self: Craft::View )=>Craft::Camera" },
  { dao_Craft_View_GetRenderTarget, "GetRenderTarget( self: Craft::View )=>Craft::RenderSurface" },
  { dao_Craft_View_SetGlobalShaderParameters, "SetGlobalShaderParameters( self: Craft::View )" },
  { dao_Craft_View_SetCameraShaderParameters, "SetCameraShaderParameters( self: Craft::View, camera: Craft::Camera )" },
  { dao_Craft_View_SetGBufferShaderParameters, "SetGBufferShaderParameters( self: Craft::View, texSize: Craft::IntVector2, viewRect: Craft::IntRect )" },
  { NULL, NULL }
};
static void Dao_Craft_View_Delete( DaoValue *self )
{
	Craft::View *obj = (Craft::View*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_View_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_View *self = (DaoCxx_Craft_View*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_View_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::View*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::View*)data);
}

static DaoTypeCore Craft_View_Core = 
{
  "Craft::View",
  sizeof(Craft::View),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_View_Craft_Object,NULL },
  dao_Craft_View_Nums,
  dao_Craft_View_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_View_Delete,
  Dao_Craft_View_HandleGC
};
DaoTypeCore *dao_Craft_View_Core = & Craft_View_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_View_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_View *_self = new DaoCxx_Craft_View( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );
  Craft::RenderSurface* renderTarget = (Craft::RenderSurface*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RenderSurface_Core );
  Craft::Viewport* viewport = (Craft::Viewport*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Viewport_Core );

  bool _Define = self->Define( renderTarget, viewport );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Define );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->Update( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_Render( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  self->Render(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_GetGraphics( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  Craft::Graphics* _GetGraphics = self->GetGraphics(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetGraphics, dao_Craft_Graphics_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_GetRenderer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  Craft::Renderer* _GetRenderer = self->GetRenderer(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderer, dao_Craft_Renderer_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  Craft::Scene* _GetScene = self->GetScene(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetScene, dao_Craft_Scene_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_GetOctree( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  Craft::Octree* _GetOctree = self->GetOctree(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOctree, dao_Craft_Octree_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_GetCamera( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  Craft::Camera* _GetCamera = self->GetCamera(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetCamera, dao_Craft_Camera_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_GetRenderTarget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  Craft::RenderSurface* _GetRenderTarget = self->GetRenderTarget(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderTarget, dao_Craft_RenderSurface_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_SetGlobalShaderParameters( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );

  self->SetGlobalShaderParameters(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_SetCameraShaderParameters( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Camera_Core );

  self->SetCameraShaderParameters( camera );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_View_SetGBufferShaderParameters( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::View* self = (Craft::View*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_View_Core );
  Craft::IntVector2* texSize = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );
  Craft::IntRect* viewRect = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_IntRect_Core );

  self->SetGBufferShaderParameters( *texSize, *viewRect );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_StaticModel_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_StaticModel_StaticModel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_SetModel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_SetMaterial_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_SetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_ApplyMaterialList( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_GetModel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_GetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModel_IsInsideLocal( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_StaticModel_Meths[] = 
{
  { dao_Craft_StaticModel_StaticModel_dao_2, "StaticModel(  )=>Craft::StaticModel" },
  { dao_Craft_StaticModel_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_StaticModel_GetLodGeometry, "GetLodGeometry( self: Craft::StaticModel, batchIndex: int, level: int )=>Craft::Geometry" },
  { dao_Craft_StaticModel_SetModel, "SetModel( self: Craft::StaticModel, model: Craft::Model )" },
  { dao_Craft_StaticModel_SetMaterial, "SetMaterial( self: Craft::StaticModel, material: Craft::Material )" },
  { dao_Craft_StaticModel_SetMaterial_dao_2, "SetMaterial( self: Craft::StaticModel, index: int, material: Craft::Material )=>bool" },
  { dao_Craft_StaticModel_SetOcclusionLodLevel, "SetOcclusionLodLevel( self: Craft::StaticModel, level: int )" },
  { dao_Craft_StaticModel_ApplyMaterialList, "ApplyMaterialList( self: Craft::StaticModel, fileName: string ='' )" },
  { dao_Craft_StaticModel_GetModel, "GetModel( self: Craft::StaticModel )=>Craft::Model" },
  { dao_Craft_StaticModel_GetNumGeometries, "GetNumGeometries( self: Craft::StaticModel )=>int" },
  { dao_Craft_StaticModel_GetMaterial, "GetMaterial( self: Craft::StaticModel, index: int =0 )=>Craft::Material" },
  { dao_Craft_StaticModel_GetOcclusionLodLevel, "GetOcclusionLodLevel( self: Craft::StaticModel )=>int" },
  { dao_Craft_StaticModel_IsInside, "IsInside( self: Craft::StaticModel, point: Craft::Vector3 )=>bool" },
  { dao_Craft_StaticModel_IsInsideLocal, "IsInsideLocal( self: Craft::StaticModel, point: Craft::Vector3 )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_StaticModel_Delete( DaoValue *self )
{
	Craft::StaticModel *obj = (Craft::StaticModel*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_StaticModel_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_StaticModel *self = (DaoCxx_Craft_StaticModel*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_StaticModel_Craft_Drawable( void *data, int down )
{
	if( down ) return static_cast<Craft::StaticModel*>((Craft::Drawable*)data);
	return dynamic_cast<Craft::Drawable*>((Craft::StaticModel*)data);
}

static DaoTypeCore Craft_StaticModel_Core = 
{
  "Craft::StaticModel",
  sizeof(Craft::StaticModel),
  { dao_Craft_Drawable_Core, NULL },
  { dao_cast_Craft_StaticModel_Craft_Drawable,NULL },
  dao_Craft_StaticModel_Nums,
  dao_Craft_StaticModel_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_StaticModel_Delete,
  Dao_Craft_StaticModel_HandleGC
};
DaoTypeCore *dao_Craft_StaticModel_Core = & Craft_StaticModel_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_StaticModel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_StaticModel *_self = new DaoCxx_Craft_StaticModel( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::StaticModel::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  unsigned int batchIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  Craft::Geometry* _GetLodGeometry = self->GetLodGeometry( batchIndex, level );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLodGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_SetModel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  Craft::Model* model = (Craft::Model*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Model_Core );

  self->SetModel( model );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Material_Core );

  self->SetMaterial( material );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_SetMaterial_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Material_Core );

  bool _SetMaterial = self->SetMaterial( index, material );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMaterial );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_SetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetOcclusionLodLevel( level );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_ApplyMaterialList( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  DString *__str_fileName = DaoValue_TryGetString( _p[1] );
  Craft::String fileName( DString_GetData( __str_fileName ), DString_Size( __str_fileName ) );

  self->ApplyMaterialList( fileName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_GetModel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );

  Craft::Model* _GetModel = self->GetModel(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetModel, dao_Craft_Model_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );

  unsigned int _GetNumGeometries = self->GetNumGeometries(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumGeometries );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Material* _GetMaterial = self->GetMaterial( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetMaterial, dao_Craft_Material_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_GetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );

  unsigned int _GetOcclusionLodLevel = self->GetOcclusionLodLevel(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetOcclusionLodLevel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_IsInside( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  bool _IsInside = self->IsInside( *point );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInside );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModel_IsInsideLocal( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModel* self = (Craft::StaticModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModel_Core );
  Craft::Vector3* point = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  bool _IsInsideLocal = self->IsInsideLocal( *point );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInsideLocal );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimatedModel_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimatedModel_AnimatedModel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_UpdateGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetUpdateGeometryType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_SetModel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_AddAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RemoveAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_RemoveAllAnimationStates( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_SetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_SetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_SetMorphWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_SetMorphWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_SetMorphWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_ResetMorphWeights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetSkeleton( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetNumAnimationStates( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetAnimationState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetAnimationState_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetAnimationState_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetNumMorphs( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetMorphWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetMorphWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_GetMorphWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimatedModel_IsMaster( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimatedModel_Meths[] = 
{
  { dao_Craft_AnimatedModel_AnimatedModel_dao_2, "AnimatedModel(  )=>Craft::AnimatedModel" },
  { dao_Craft_AnimatedModel_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_AnimatedModel_Load, "Load( self: Craft::AnimatedModel, source: Craft::Deserializer )=>bool" },
  { dao_Craft_AnimatedModel_ApplyAttributes, "ApplyAttributes( self: Craft::AnimatedModel )" },
  { dao_Craft_AnimatedModel_Update, "Update( self: Craft::AnimatedModel, frame: Craft::FrameInfo )" },
  { dao_Craft_AnimatedModel_UpdateBatches, "UpdateBatches( self: Craft::AnimatedModel, frame: Craft::FrameInfo )" },
  { dao_Craft_AnimatedModel_UpdateGeometry, "UpdateGeometry( self: Craft::AnimatedModel, frame: Craft::FrameInfo )" },
  { dao_Craft_AnimatedModel_GetUpdateGeometryType, "GetUpdateGeometryType( self: Craft::AnimatedModel )=>int" },
  { dao_Craft_AnimatedModel_SetModel, "SetModel( self: Craft::AnimatedModel, model: Craft::Model, createBones: bool =true )" },
  { dao_Craft_AnimatedModel_AddAnimationState, "AddAnimationState( self: Craft::AnimatedModel, animation: Craft::Animation )=>Craft::AnimationState" },
  { dao_Craft_AnimatedModel_RemoveAnimationState, "RemoveAnimationState( self: Craft::AnimatedModel, animation: Craft::Animation )" },
  { dao_Craft_AnimatedModel_RemoveAnimationState_dao_2, "RemoveAnimationState( self: Craft::AnimatedModel, animationName: string )" },
  { dao_Craft_AnimatedModel_RemoveAnimationState_dao_3, "RemoveAnimationState( self: Craft::AnimatedModel, animationNameHash: Craft::StringHash )" },
  { dao_Craft_AnimatedModel_RemoveAnimationState_dao_4, "RemoveAnimationState( self: Craft::AnimatedModel, state: Craft::AnimationState )" },
  { dao_Craft_AnimatedModel_RemoveAnimationState_dao_5, "RemoveAnimationState( self: Craft::AnimatedModel, index: int )" },
  { dao_Craft_AnimatedModel_RemoveAllAnimationStates, "RemoveAllAnimationStates( self: Craft::AnimatedModel )" },
  { dao_Craft_AnimatedModel_SetAnimationLodBias, "SetAnimationLodBias( self: Craft::AnimatedModel, bias: float )" },
  { dao_Craft_AnimatedModel_SetUpdateInvisible, "SetUpdateInvisible( self: Craft::AnimatedModel, enable: bool )" },
  { dao_Craft_AnimatedModel_SetMorphWeight, "SetMorphWeight( self: Craft::AnimatedModel, index: int, weight: float )" },
  { dao_Craft_AnimatedModel_SetMorphWeight_dao_2, "SetMorphWeight( self: Craft::AnimatedModel, name: string, weight: float )" },
  { dao_Craft_AnimatedModel_SetMorphWeight_dao_3, "SetMorphWeight( self: Craft::AnimatedModel, nameHash: Craft::StringHash, weight: float )" },
  { dao_Craft_AnimatedModel_ResetMorphWeights, "ResetMorphWeights( self: Craft::AnimatedModel )" },
  { dao_Craft_AnimatedModel_GetSkeleton, "GetSkeleton( self: Craft::AnimatedModel )=>Craft::Skeleton" },
  { dao_Craft_AnimatedModel_GetNumAnimationStates, "GetNumAnimationStates( self: Craft::AnimatedModel )=>int" },
  { dao_Craft_AnimatedModel_GetAnimationState, "GetAnimationState( self: Craft::AnimatedModel, animation: Craft::Animation )=>Craft::AnimationState" },
  { dao_Craft_AnimatedModel_GetAnimationState_dao_2, "GetAnimationState( self: Craft::AnimatedModel, animationName: string )=>Craft::AnimationState" },
  { dao_Craft_AnimatedModel_GetAnimationState_dao_3, "GetAnimationState( self: Craft::AnimatedModel, animationNameHash: Craft::StringHash )=>Craft::AnimationState" },
  { dao_Craft_AnimatedModel_GetAnimationState_dao_4, "GetAnimationState( self: Craft::AnimatedModel, index: int )=>Craft::AnimationState" },
  { dao_Craft_AnimatedModel_GetAnimationLodBias, "GetAnimationLodBias( self: Craft::AnimatedModel )=>float" },
  { dao_Craft_AnimatedModel_GetUpdateInvisible, "GetUpdateInvisible( self: Craft::AnimatedModel )=>bool" },
  { dao_Craft_AnimatedModel_GetNumMorphs, "GetNumMorphs( self: Craft::AnimatedModel )=>int" },
  { dao_Craft_AnimatedModel_GetMorphWeight, "GetMorphWeight( self: Craft::AnimatedModel, index: int )=>float" },
  { dao_Craft_AnimatedModel_GetMorphWeight_dao_2, "GetMorphWeight( self: Craft::AnimatedModel, name: string )=>float" },
  { dao_Craft_AnimatedModel_GetMorphWeight_dao_3, "GetMorphWeight( self: Craft::AnimatedModel, nameHash: Craft::StringHash )=>float" },
  { dao_Craft_AnimatedModel_IsMaster, "IsMaster( self: Craft::AnimatedModel )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_AnimatedModel_Delete( DaoValue *self )
{
	Craft::AnimatedModel *obj = (Craft::AnimatedModel*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_AnimatedModel_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_AnimatedModel *self = (DaoCxx_Craft_AnimatedModel*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_AnimatedModel_Craft_StaticModel( void *data, int down )
{
	if( down ) return static_cast<Craft::AnimatedModel*>((Craft::StaticModel*)data);
	return dynamic_cast<Craft::StaticModel*>((Craft::AnimatedModel*)data);
}

static DaoTypeCore Craft_AnimatedModel_Core = 
{
  "Craft::AnimatedModel",
  sizeof(Craft::AnimatedModel),
  { dao_Craft_StaticModel_Core, NULL },
  { dao_cast_Craft_AnimatedModel_Craft_StaticModel,NULL },
  dao_Craft_AnimatedModel_Nums,
  dao_Craft_AnimatedModel_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_AnimatedModel_Delete,
  Dao_Craft_AnimatedModel_HandleGC
};
DaoTypeCore *dao_Craft_AnimatedModel_Core = & Craft_AnimatedModel_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_AnimatedModel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_AnimatedModel *_self = new DaoCxx_Craft_AnimatedModel( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::AnimatedModel::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->Update( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->UpdateBatches( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_UpdateGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->UpdateGeometry( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetUpdateGeometryType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  Craft::UpdateGeometryType _GetUpdateGeometryType = self->GetUpdateGeometryType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUpdateGeometryType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_SetModel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::Model* model = (Craft::Model*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Model_Core );
  bool createBones = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetModel( model, createBones );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_AddAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::Animation* animation = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Animation_Core );

  Craft::AnimationState* _AddAnimationState = self->AddAnimationState( animation );
  DaoProcess_WrapCdataTC( _proc, (void*) _AddAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RemoveAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::Animation* animation = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Animation_Core );

  self->RemoveAnimationState( animation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  DString *__str_animationName = DaoValue_TryGetString( _p[1] );
  Craft::String animationName( DString_GetData( __str_animationName ), DString_Size( __str_animationName ) );

  self->RemoveAnimationState( animationName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::StringHash* animationNameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  self->RemoveAnimationState( *animationNameHash );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::AnimationState* state = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_AnimationState_Core );

  self->RemoveAnimationState( state );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RemoveAnimationState_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveAnimationState( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_RemoveAllAnimationStates( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  self->RemoveAllAnimationStates(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_SetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  float bias = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAnimationLodBias( bias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_SetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUpdateInvisible( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_SetMorphWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetMorphWeight( index, weight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_SetMorphWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetMorphWeight( name, weight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_SetMorphWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetMorphWeight( *nameHash, weight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_ResetMorphWeights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  self->ResetMorphWeights(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetSkeleton( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  Craft::Skeleton& _GetSkeleton = self->GetSkeleton(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetSkeleton, dao_Craft_Skeleton_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetNumAnimationStates( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  unsigned int _GetNumAnimationStates = self->GetNumAnimationStates(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumAnimationStates );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetAnimationState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::Animation* animation = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Animation_Core );

  Craft::AnimationState* _GetAnimationState = self->GetAnimationState( animation );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetAnimationState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  DString *__str_animationName = DaoValue_TryGetString( _p[1] );
  Craft::String animationName( DString_GetData( __str_animationName ), DString_Size( __str_animationName ) );

  Craft::AnimationState* _GetAnimationState = self->GetAnimationState( animationName );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetAnimationState_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::StringHash* animationNameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  Craft::AnimationState* _GetAnimationState = self->GetAnimationState( *animationNameHash );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetAnimationState_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::AnimationState* _GetAnimationState = self->GetAnimationState( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimationState, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  float _GetAnimationLodBias = self->GetAnimationLodBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAnimationLodBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  bool _GetUpdateInvisible = self->GetUpdateInvisible(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUpdateInvisible );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetNumMorphs( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  unsigned int _GetNumMorphs = self->GetNumMorphs(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumMorphs );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetMorphWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  float _GetMorphWeight = self->GetMorphWeight( index );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMorphWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetMorphWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetMorphWeight = self->GetMorphWeight( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMorphWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_GetMorphWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  float _GetMorphWeight = self->GetMorphWeight( *nameHash );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMorphWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimatedModel_IsMaster( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* self = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );

  bool _IsMaster = self->IsMaster(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsMaster );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Terrain_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Terrain_Terrain_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetPatchSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetSpacing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetMaxLodLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetOccluder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetOccludee( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_ApplyHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetPatchSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetSpacing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetNumVertices( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetNumPatches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetMaxLodLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetPatch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetPatch_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetNormal( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_WorldToHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_IsVisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_GetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_IsOccluder( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_IsOccludee( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_CreatePatchGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_UpdatePatchLod( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetPatchSizeAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetMaxLodLevelsAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Terrain_SetOcclusionLodLevelAttr( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Terrain_Meths[] = 
{
  { dao_Craft_Terrain_Terrain_dao_2, "Terrain(  )=>Craft::Terrain" },
  { dao_Craft_Terrain_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Terrain_GetTypeStatic, "GetTypeStatic(  )=>Craft::StringHash" },
  { dao_Craft_Terrain_ApplyAttributes, "ApplyAttributes( self: Craft::Terrain )" },
  { dao_Craft_Terrain_OnSetEnabled, "OnSetEnabled( self: Craft::Terrain )" },
  { dao_Craft_Terrain_SetPatchSize, "SetPatchSize( self: Craft::Terrain, size: int )" },
  { dao_Craft_Terrain_SetSpacing, "SetSpacing( self: Craft::Terrain, spacing: Craft::Vector3 )" },
  { dao_Craft_Terrain_SetMaxLodLevels, "SetMaxLodLevels( self: Craft::Terrain, levels: int )" },
  { dao_Craft_Terrain_SetOcclusionLodLevel, "SetOcclusionLodLevel( self: Craft::Terrain, level: int )" },
  { dao_Craft_Terrain_SetSmoothing, "SetSmoothing( self: Craft::Terrain, enable: bool )" },
  { dao_Craft_Terrain_SetHeightMap, "SetHeightMap( self: Craft::Terrain, image: Craft::Image )=>bool" },
  { dao_Craft_Terrain_SetMaterial, "SetMaterial( self: Craft::Terrain, material: Craft::Material )" },
  { dao_Craft_Terrain_SetDrawDistance, "SetDrawDistance( self: Craft::Terrain, distance: float )" },
  { dao_Craft_Terrain_SetShadowDistance, "SetShadowDistance( self: Craft::Terrain, distance: float )" },
  { dao_Craft_Terrain_SetLodBias, "SetLodBias( self: Craft::Terrain, bias: float )" },
  { dao_Craft_Terrain_SetViewMask, "SetViewMask( self: Craft::Terrain, mask: int )" },
  { dao_Craft_Terrain_SetLightMask, "SetLightMask( self: Craft::Terrain, mask: int )" },
  { dao_Craft_Terrain_SetShadowMask, "SetShadowMask( self: Craft::Terrain, mask: int )" },
  { dao_Craft_Terrain_SetZoneMask, "SetZoneMask( self: Craft::Terrain, mask: int )" },
  { dao_Craft_Terrain_SetMaxLights, "SetMaxLights( self: Craft::Terrain, num: int )" },
  { dao_Craft_Terrain_SetCastShadows, "SetCastShadows( self: Craft::Terrain, enable: bool )" },
  { dao_Craft_Terrain_SetOccluder, "SetOccluder( self: Craft::Terrain, enable: bool )" },
  { dao_Craft_Terrain_SetOccludee, "SetOccludee( self: Craft::Terrain, enable: bool )" },
  { dao_Craft_Terrain_ApplyHeightMap, "ApplyHeightMap( self: Craft::Terrain )" },
  { dao_Craft_Terrain_GetPatchSize, "GetPatchSize( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetSpacing, "GetSpacing( self: Craft::Terrain )=>Craft::Vector3" },
  { dao_Craft_Terrain_GetNumVertices, "GetNumVertices( self: Craft::Terrain )=>Craft::IntVector2" },
  { dao_Craft_Terrain_GetNumPatches, "GetNumPatches( self: Craft::Terrain )=>Craft::IntVector2" },
  { dao_Craft_Terrain_GetMaxLodLevels, "GetMaxLodLevels( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetOcclusionLodLevel, "GetOcclusionLodLevel( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetSmoothing, "GetSmoothing( self: Craft::Terrain )=>bool" },
  { dao_Craft_Terrain_GetHeightMap, "GetHeightMap( self: Craft::Terrain )=>Craft::Image" },
  { dao_Craft_Terrain_GetMaterial, "GetMaterial( self: Craft::Terrain )=>Craft::Material" },
  { dao_Craft_Terrain_GetPatch, "GetPatch( self: Craft::Terrain, index: int )=>Craft::TerrainPatch" },
  { dao_Craft_Terrain_GetPatch_dao_2, "GetPatch( self: Craft::Terrain, x: int, z: int )=>Craft::TerrainPatch" },
  { dao_Craft_Terrain_GetHeight, "GetHeight( self: Craft::Terrain, worldPosition: Craft::Vector3 )=>float" },
  { dao_Craft_Terrain_GetNormal, "GetNormal( self: Craft::Terrain, worldPosition: Craft::Vector3 )=>Craft::Vector3" },
  { dao_Craft_Terrain_WorldToHeightMap, "WorldToHeightMap( self: Craft::Terrain, worldPosition: Craft::Vector3 )=>Craft::IntVector2" },
  { dao_Craft_Terrain_GetDrawDistance, "GetDrawDistance( self: Craft::Terrain )=>float" },
  { dao_Craft_Terrain_GetShadowDistance, "GetShadowDistance( self: Craft::Terrain )=>float" },
  { dao_Craft_Terrain_GetLodBias, "GetLodBias( self: Craft::Terrain )=>float" },
  { dao_Craft_Terrain_GetViewMask, "GetViewMask( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetLightMask, "GetLightMask( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetShadowMask, "GetShadowMask( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetZoneMask, "GetZoneMask( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_GetMaxLights, "GetMaxLights( self: Craft::Terrain )=>int" },
  { dao_Craft_Terrain_IsVisible, "IsVisible( self: Craft::Terrain )=>bool" },
  { dao_Craft_Terrain_GetCastShadows, "GetCastShadows( self: Craft::Terrain )=>bool" },
  { dao_Craft_Terrain_IsOccluder, "IsOccluder( self: Craft::Terrain )=>bool" },
  { dao_Craft_Terrain_IsOccludee, "IsOccludee( self: Craft::Terrain )=>bool" },
  { dao_Craft_Terrain_CreatePatchGeometry, "CreatePatchGeometry( self: Craft::Terrain, patch: Craft::TerrainPatch )" },
  { dao_Craft_Terrain_UpdatePatchLod, "UpdatePatchLod( self: Craft::Terrain, patch: Craft::TerrainPatch )" },
  { dao_Craft_Terrain_SetPatchSizeAttr, "SetPatchSizeAttr( self: Craft::Terrain, value: int )" },
  { dao_Craft_Terrain_SetMaxLodLevelsAttr, "SetMaxLodLevelsAttr( self: Craft::Terrain, value: int )" },
  { dao_Craft_Terrain_SetOcclusionLodLevelAttr, "SetOcclusionLodLevelAttr( self: Craft::Terrain, value: int )" },
  { NULL, NULL }
};
static void Dao_Craft_Terrain_Delete( DaoValue *self )
{
	Craft::Terrain *obj = (Craft::Terrain*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Terrain_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Terrain *self = (DaoCxx_Craft_Terrain*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Terrain_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::Terrain*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::Terrain*)data);
}

static DaoTypeCore Craft_Terrain_Core = 
{
  "Craft::Terrain",
  sizeof(Craft::Terrain),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_Terrain_Craft_Component,NULL },
  dao_Craft_Terrain_Nums,
  dao_Craft_Terrain_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Terrain_Delete,
  Dao_Craft_Terrain_HandleGC
};
DaoTypeCore *dao_Craft_Terrain_Core = & Craft_Terrain_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_Terrain_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Terrain *_self = new DaoCxx_Craft_Terrain( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Terrain::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetTypeStatic( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::StringHash _GetTypeStatic = Craft::Terrain::GetTypeStatic(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetTypeStatic ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetPatchSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  int size = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetPatchSize( size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetSpacing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::Vector3* spacing = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetSpacing( *spacing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetMaxLodLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int levels = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxLodLevels( levels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetOcclusionLodLevel( level );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSmoothing( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::Image* image = (Craft::Image*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Image_Core );

  bool _SetHeightMap = self->SetHeightMap( image );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetHeightMap );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Material_Core );

  self->SetMaterial( material );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetDrawDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetShadowDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  float bias = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLodBias( bias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetViewMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetLightMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetShadowMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int mask = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetZoneMask( mask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxLights( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetCastShadows( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetOccluder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetOccluder( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetOccludee( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetOccludee( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_ApplyHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  self->ApplyHeightMap(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetPatchSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  int _GetPatchSize = self->GetPatchSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPatchSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetSpacing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  const Craft::Vector3& _GetSpacing = self->GetSpacing(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetSpacing, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetNumVertices( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  const Craft::IntVector2& _GetNumVertices = self->GetNumVertices(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetNumVertices, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetNumPatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  const Craft::IntVector2& _GetNumPatches = self->GetNumPatches(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetNumPatches, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetMaxLodLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetMaxLodLevels = self->GetMaxLodLevels(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxLodLevels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetOcclusionLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetOcclusionLodLevel = self->GetOcclusionLodLevel(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetOcclusionLodLevel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  bool _GetSmoothing = self->GetSmoothing(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSmoothing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  Craft::Image* _GetHeightMap = self->GetHeightMap(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetHeightMap, dao_Craft_Image_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  Craft::Material* _GetMaterial = self->GetMaterial(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetMaterial, dao_Craft_Material_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetPatch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::TerrainPatch* _GetPatch = self->GetPatch( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPatch, dao_Craft_TerrainPatch_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetPatch_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int z = (int) DaoValue_TryGetInteger( _p[2] );

  Craft::TerrainPatch* _GetPatch = self->GetPatch( x, z );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPatch, dao_Craft_TerrainPatch_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::Vector3* worldPosition = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  float _GetHeight = self->GetHeight( *worldPosition );
  DaoProcess_PutFloat( _proc, (dao_float) _GetHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetNormal( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::Vector3* worldPosition = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::Vector3 _GetNormal = self->GetNormal( *worldPosition );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetNormal ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_WorldToHeightMap( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::Vector3* worldPosition = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  Craft::IntVector2 _WorldToHeightMap = self->WorldToHeightMap( *worldPosition );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _WorldToHeightMap ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetDrawDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  float _GetDrawDistance = self->GetDrawDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDrawDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetShadowDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  float _GetShadowDistance = self->GetShadowDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetShadowDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  float _GetLodBias = self->GetLodBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLodBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetViewMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetViewMask = self->GetViewMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetViewMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetLightMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetLightMask = self->GetLightMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLightMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetShadowMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetShadowMask = self->GetShadowMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetShadowMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetZoneMask( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetZoneMask = self->GetZoneMask(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetZoneMask );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetMaxLights( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  unsigned int _GetMaxLights = self->GetMaxLights(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxLights );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_IsVisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  bool _IsVisible = self->IsVisible(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsVisible );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_GetCastShadows( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  bool _GetCastShadows = self->GetCastShadows(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetCastShadows );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_IsOccluder( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  bool _IsOccluder = self->IsOccluder(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsOccluder );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_IsOccludee( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );

  bool _IsOccludee = self->IsOccludee(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsOccludee );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_CreatePatchGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::TerrainPatch* patch = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_TerrainPatch_Core );

  self->CreatePatchGeometry( patch );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_UpdatePatchLod( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  Craft::TerrainPatch* patch = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_TerrainPatch_Core );

  self->UpdatePatchLod( patch );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetPatchSizeAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  int value = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetPatchSizeAttr( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetMaxLodLevelsAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxLodLevelsAttr( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Terrain_SetOcclusionLodLevelAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Terrain* self = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Terrain_Core );
  unsigned int value = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetOcclusionLodLevelAttr( value );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Bone_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Bone_GETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_SETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_nameHash_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_parentIndex_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_SETF_parentIndex_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_initialPosition_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_initialRotation_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_initialScale_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_offsetMatrix_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_animated_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_SETF_animated_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_collisionMask_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_SETF_collisionMask_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_SETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_GETF_boundingBox_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Bone_Bone_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Bone_Meths[] = 
{
  { dao_Craft_Bone_GETF_name_, ".name_ ( self: Craft::Bone )=>string" },
  { dao_Craft_Bone_SETF_name_, ".name_=( self: Craft::Bone, name_: string )" },
  { dao_Craft_Bone_GETF_nameHash_, ".nameHash_ ( self: Craft::Bone )=>Craft::StringHash" },
  { dao_Craft_Bone_GETF_parentIndex_, ".parentIndex_ ( self: Craft::Bone )=>int" },
  { dao_Craft_Bone_SETF_parentIndex_, ".parentIndex_=( self: Craft::Bone, parentIndex_: int )" },
  { dao_Craft_Bone_GETF_initialPosition_, ".initialPosition_ ( self: Craft::Bone )=>Craft::Vector3" },
  { dao_Craft_Bone_GETF_initialRotation_, ".initialRotation_ ( self: Craft::Bone )=>Craft::Quaternion" },
  { dao_Craft_Bone_GETF_initialScale_, ".initialScale_ ( self: Craft::Bone )=>Craft::Vector3" },
  { dao_Craft_Bone_GETF_offsetMatrix_, ".offsetMatrix_ ( self: Craft::Bone )=>Craft::Matrix3x4" },
  { dao_Craft_Bone_GETF_animated_, ".animated_ ( self: Craft::Bone )=>bool" },
  { dao_Craft_Bone_SETF_animated_, ".animated_=( self: Craft::Bone, animated_: bool )" },
  { dao_Craft_Bone_GETF_collisionMask_, ".collisionMask_ ( self: Craft::Bone )=>int" },
  { dao_Craft_Bone_SETF_collisionMask_, ".collisionMask_=( self: Craft::Bone, collisionMask_: int )" },
  { dao_Craft_Bone_GETF_radius_, ".radius_ ( self: Craft::Bone )=>float" },
  { dao_Craft_Bone_SETF_radius_, ".radius_=( self: Craft::Bone, radius_: float )" },
  { dao_Craft_Bone_GETF_boundingBox_, ".boundingBox_ ( self: Craft::Bone )=>Craft::BoundingBox" },
  { dao_Craft_Bone_Bone_dao_3, "Bone(  )=>Craft::Bone" },
  { NULL, NULL }
};
static void Dao_Craft_Bone_Delete( DaoValue *self )
{
	delete (Craft::Bone*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Bone_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Bone* src = (Craft::Bone*) DaoValue_TryCastCdataTC( self, dao_Craft_Bone_Core );
	Craft::Bone* dest;
	if( target ){
		dest = (Craft::Bone*) DaoValue_TryCastCdataTC( target, dao_Craft_Bone_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Bone( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Bone_Core, dest );
}

static DaoTypeCore Craft_Bone_Core = 
{
  "Craft::Bone",
  sizeof(Craft::Bone),
  { NULL },
  { NULL },
  dao_Craft_Bone_Nums,
  dao_Craft_Bone_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Bone_Copy,
  Dao_Craft_Bone_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Bone_Core = & Craft_Bone_Core;
static void dao_Craft_Bone_GETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_PutBytes( _proc, (char*) self->name_.CString(), self->name_.Length() );
}
static void dao_Craft_Bone_SETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  if(DaoValue_CastString( _p[1] )){
    DString *__str = DaoValue_TryGetString( _p[1] );
    self->name_ = Craft::String( DString_GetData(__str), DString_Size(__str) );
  }
}
static void dao_Craft_Bone_GETF_nameHash_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->nameHash_, dao_Craft_StringHash_Core );
}
static void dao_Craft_Bone_GETF_parentIndex_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->parentIndex_ );
}
static void dao_Craft_Bone_SETF_parentIndex_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  self->parentIndex_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_Bone_GETF_initialPosition_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->initialPosition_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Bone_GETF_initialRotation_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->initialRotation_, dao_Craft_Quaternion_Core );
}
static void dao_Craft_Bone_GETF_initialScale_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->initialScale_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Bone_GETF_offsetMatrix_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->offsetMatrix_, dao_Craft_Matrix3x4_Core );
}
static void dao_Craft_Bone_GETF_animated_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_PutBoolean( _proc, (dao_boolean) self->animated_ );
}
static void dao_Craft_Bone_SETF_animated_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  self->animated_ = (bool) DaoValue_TryGetBoolean(_p[1]);
}
static void dao_Craft_Bone_GETF_collisionMask_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->collisionMask_ );
}
static void dao_Craft_Bone_SETF_collisionMask_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  self->collisionMask_ = (unsigned char) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_Bone_GETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->radius_ );
}
static void dao_Craft_Bone_SETF_radius_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  self->radius_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Bone_GETF_boundingBox_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Bone *self = (Craft::Bone*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Bone_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->boundingBox_, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Bone_Bone_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Bone _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_Bone_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Skeleton_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Skeleton_Skeleton_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_Define( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_SetRootBoneIndex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_ClearBones( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_GetNumBones( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_GetRootBone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_GetBone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_GetBone_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_GetBone_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_GetBone_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skeleton_ResetSilent( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Skeleton_Meths[] = 
{
  { dao_Craft_Skeleton_Skeleton_dao_2, "Skeleton(  )=>Craft::Skeleton" },
  { dao_Craft_Skeleton_Load, "Load( self: Craft::Skeleton, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Skeleton_Save, "Save( self: Craft::Skeleton, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Skeleton_Define, "Define( self: Craft::Skeleton, src: Craft::Skeleton )" },
  { dao_Craft_Skeleton_SetRootBoneIndex, "SetRootBoneIndex( self: Craft::Skeleton, index: int )" },
  { dao_Craft_Skeleton_ClearBones, "ClearBones( self: Craft::Skeleton )" },
  { dao_Craft_Skeleton_Reset, "Reset( self: Craft::Skeleton )" },
  { dao_Craft_Skeleton_GetNumBones, "GetNumBones( self: Craft::Skeleton )=>int" },
  { dao_Craft_Skeleton_GetRootBone, "GetRootBone( self: Craft::Skeleton )=>Craft::Bone|none" },
  { dao_Craft_Skeleton_GetBone, "GetBone( self: Craft::Skeleton, index: int )=>Craft::Bone|none" },
  { dao_Craft_Skeleton_GetBone_dao_2, "GetBone( self: Craft::Skeleton, name: string )=>Craft::Bone|none" },
  { dao_Craft_Skeleton_GetBone_dao_3, "GetBone( self: Craft::Skeleton, name: string )=>Craft::Bone|none" },
  { dao_Craft_Skeleton_GetBone_dao_4, "GetBone( self: Craft::Skeleton, nameHash: Craft::StringHash )=>Craft::Bone|none" },
  { dao_Craft_Skeleton_ResetSilent, "ResetSilent( self: Craft::Skeleton )" },
  { NULL, NULL }
};
static void Dao_Craft_Skeleton_Delete( DaoValue *self )
{
	delete (Craft::Skeleton*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_Skeleton_Core = 
{
  "Craft::Skeleton",
  sizeof(Craft::Skeleton),
  { NULL },
  { NULL },
  dao_Craft_Skeleton_Nums,
  dao_Craft_Skeleton_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Skeleton_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Skeleton_Core = & Craft_Skeleton_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_Skeleton_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::Skeleton *_self = new Craft::Skeleton(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_Skeleton_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _Load = self->Load( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_Define( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  Craft::Skeleton* src = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Skeleton_Core );

  self->Define( *src );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_SetRootBoneIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetRootBoneIndex( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_ClearBones( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );

  self->ClearBones(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_GetNumBones( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );

  unsigned int _GetNumBones = self->GetNumBones(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumBones );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_GetRootBone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );

  Craft::Bone* dao_Craft_Skeleton_GetRootBone = self->GetRootBone(  );
  if( dao_Craft_Skeleton_GetRootBone ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Skeleton_GetRootBone, dao_Craft_Bone_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_GetBone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Bone* dao_Craft_Skeleton_GetBone = self->GetBone( index );
  if( dao_Craft_Skeleton_GetBone ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Skeleton_GetBone, dao_Craft_Bone_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_GetBone_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Bone* dao_Craft_Skeleton_GetBone2 = self->GetBone( name );
  if( dao_Craft_Skeleton_GetBone2 ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Skeleton_GetBone2, dao_Craft_Bone_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_GetBone_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  const char* name = (const char*) DaoValue_TryGetChars( _p[1] );

  Craft::Bone* dao_Craft_Skeleton_GetBone3 = self->GetBone( name );
  if( dao_Craft_Skeleton_GetBone3 ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Skeleton_GetBone3, dao_Craft_Bone_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_GetBone_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  Craft::Bone* dao_Craft_Skeleton_GetBone4 = self->GetBone( *nameHash );
  if( dao_Craft_Skeleton_GetBone4 ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_Skeleton_GetBone4, dao_Craft_Bone_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skeleton_ResetSilent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skeleton* self = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skeleton_Core );

  self->ResetSilent(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Model_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Model_Model_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_SetSkeleton( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_GetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_GetSkeleton( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_GetNumGeometryLodLevels( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_GetGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Model_GetGeometryCenter( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Model_Meths[] = 
{
  { dao_Craft_Model_Model_dao_2, "Model(  )=>Craft::Model" },
  { dao_Craft_Model_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Model_BeginLoad, "BeginLoad( self: Craft::Model, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Model_EndLoad, "EndLoad( self: Craft::Model )=>bool" },
  { dao_Craft_Model_Save, "Save( self: Craft::Model, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Model_SetSkeleton, "SetSkeleton( self: Craft::Model, skeleton: Craft::Skeleton )" },
  { dao_Craft_Model_GetBoundingBox, "GetBoundingBox( self: Craft::Model )=>Craft::BoundingBox" },
  { dao_Craft_Model_GetSkeleton, "GetSkeleton( self: Craft::Model )=>Craft::Skeleton" },
  { dao_Craft_Model_GetNumGeometries, "GetNumGeometries( self: Craft::Model )=>int" },
  { dao_Craft_Model_GetNumGeometryLodLevels, "GetNumGeometryLodLevels( self: Craft::Model, index: int )=>int" },
  { dao_Craft_Model_GetGeometry, "GetGeometry( self: Craft::Model, index: int, lodLevel: int )=>Craft::Geometry" },
  { dao_Craft_Model_GetGeometryCenter, "GetGeometryCenter( self: Craft::Model, index: int )=>Craft::Vector3" },
  { NULL, NULL }
};
static void Dao_Craft_Model_Delete( DaoValue *self )
{
	Craft::Model *obj = (Craft::Model*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Model_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Model *self = (DaoCxx_Craft_Model*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Model_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Model*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Model*)data);
}

static DaoTypeCore Craft_Model_Core = 
{
  "Craft::Model",
  sizeof(Craft::Model),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Model_Craft_Resource,NULL },
  dao_Craft_Model_Nums,
  dao_Craft_Model_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Model_Delete,
  Dao_Craft_Model_HandleGC
};
DaoTypeCore *dao_Craft_Model_Core = & Craft_Model_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_Model_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Model *_self = new DaoCxx_Craft_Model( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Model::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_SetSkeleton( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );
  Craft::Skeleton* skeleton = (Craft::Skeleton*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Skeleton_Core );

  self->SetSkeleton( *skeleton );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_GetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );

  const Craft::BoundingBox& _GetBoundingBox = self->GetBoundingBox(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetBoundingBox, dao_Craft_BoundingBox_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_GetSkeleton( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );

  Craft::Skeleton& _GetSkeleton = self->GetSkeleton(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetSkeleton, dao_Craft_Skeleton_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_GetNumGeometries( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );

  unsigned int _GetNumGeometries = self->GetNumGeometries(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumGeometries );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_GetNumGeometryLodLevels( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  unsigned int _GetNumGeometryLodLevels = self->GetNumGeometryLodLevels( index );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumGeometryLodLevels );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_GetGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int lodLevel = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  Craft::Geometry* _GetGeometry = self->GetGeometry( index, lodLevel );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Model_GetGeometryCenter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Model* self = (Craft::Model*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Model_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  const Craft::Vector3& _GetGeometryCenter = self->GetGeometryCenter( index );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetGeometryCenter, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationKeyFrame_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationKeyFrame_GETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationKeyFrame_SETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationKeyFrame_GETF_position_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationKeyFrame_GETF_rotation_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationKeyFrame_GETF_scale_( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationKeyFrame_Meths[] = 
{
  { dao_Craft_AnimationKeyFrame_GETF_time_, ".time_ ( self: Craft::AnimationKeyFrame )=>float" },
  { dao_Craft_AnimationKeyFrame_SETF_time_, ".time_=( self: Craft::AnimationKeyFrame, time_: float )" },
  { dao_Craft_AnimationKeyFrame_GETF_position_, ".position_ ( self: Craft::AnimationKeyFrame )=>Craft::Vector3" },
  { dao_Craft_AnimationKeyFrame_GETF_rotation_, ".rotation_ ( self: Craft::AnimationKeyFrame )=>Craft::Quaternion" },
  { dao_Craft_AnimationKeyFrame_GETF_scale_, ".scale_ ( self: Craft::AnimationKeyFrame )=>Craft::Vector3" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationKeyFrame_Delete( DaoValue *self )
{
	delete (Craft::AnimationKeyFrame*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_AnimationKeyFrame_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::AnimationKeyFrame* src = (Craft::AnimationKeyFrame*) DaoValue_TryCastCdataTC( self, dao_Craft_AnimationKeyFrame_Core );
	Craft::AnimationKeyFrame* dest;
	if( target ){
		dest = (Craft::AnimationKeyFrame*) DaoValue_TryCastCdataTC( target, dao_Craft_AnimationKeyFrame_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::AnimationKeyFrame( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_AnimationKeyFrame_Core, dest );
}

static DaoTypeCore Craft_AnimationKeyFrame_Core = 
{
  "Craft::AnimationKeyFrame",
  sizeof(Craft::AnimationKeyFrame),
  { NULL },
  { NULL },
  dao_Craft_AnimationKeyFrame_Nums,
  dao_Craft_AnimationKeyFrame_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_AnimationKeyFrame_Copy,
  Dao_Craft_AnimationKeyFrame_Delete,
  NULL
};
DaoTypeCore *dao_Craft_AnimationKeyFrame_Core = & Craft_AnimationKeyFrame_Core;
static void dao_Craft_AnimationKeyFrame_GETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationKeyFrame *self = (Craft::AnimationKeyFrame*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationKeyFrame_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->time_ );
}
static void dao_Craft_AnimationKeyFrame_SETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationKeyFrame *self = (Craft::AnimationKeyFrame*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationKeyFrame_Core);
  self->time_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationKeyFrame_GETF_position_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationKeyFrame *self = (Craft::AnimationKeyFrame*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationKeyFrame_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->position_, dao_Craft_Vector3_Core );
}
static void dao_Craft_AnimationKeyFrame_GETF_rotation_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationKeyFrame *self = (Craft::AnimationKeyFrame*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationKeyFrame_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->rotation_, dao_Craft_Quaternion_Core );
}
static void dao_Craft_AnimationKeyFrame_GETF_scale_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationKeyFrame *self = (Craft::AnimationKeyFrame*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationKeyFrame_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->scale_, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationTrack_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationTrack_AnimationTrack( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTrack_GETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTrack_SETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTrack_GETF_nameHash_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTrack_GETF_channelMask_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTrack_SETF_channelMask_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTrack_GetKeyFrameIndex( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationTrack_Meths[] = 
{
  { dao_Craft_AnimationTrack_AnimationTrack, "AnimationTrack(  )=>AnimationTrack" },
  { dao_Craft_AnimationTrack_GETF_name_, ".name_ ( self: Craft::AnimationTrack )=>string" },
  { dao_Craft_AnimationTrack_SETF_name_, ".name_=( self: Craft::AnimationTrack, name_: string )" },
  { dao_Craft_AnimationTrack_GETF_nameHash_, ".nameHash_ ( self: Craft::AnimationTrack )=>Craft::StringHash" },
  { dao_Craft_AnimationTrack_GETF_channelMask_, ".channelMask_ ( self: Craft::AnimationTrack )=>int" },
  { dao_Craft_AnimationTrack_SETF_channelMask_, ".channelMask_=( self: Craft::AnimationTrack, channelMask_: int )" },
  { dao_Craft_AnimationTrack_GetKeyFrameIndex, "GetKeyFrameIndex( self: Craft::AnimationTrack, time: float, index: int )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationTrack_Delete( DaoValue *self )
{
	delete (Craft::AnimationTrack*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_AnimationTrack_Core = 
{
  "Craft::AnimationTrack",
  sizeof(Craft::AnimationTrack),
  { NULL },
  { NULL },
  dao_Craft_AnimationTrack_Nums,
  dao_Craft_AnimationTrack_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_AnimationTrack_Delete,
  NULL
};
DaoTypeCore *dao_Craft_AnimationTrack_Core = & Craft_AnimationTrack_Core;
static void dao_Craft_AnimationTrack_AnimationTrack( DaoProcess *_proc, DaoValue *_p[], int _n )
{
	Craft::AnimationTrack *self = Dao_Craft_AnimationTrack_New();
	DaoProcess_PutCdataTC( _proc, self, dao_Craft_AnimationTrack_Core );
}
static void dao_Craft_AnimationTrack_GETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTrack *self = (Craft::AnimationTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTrack_Core);
  DaoProcess_PutBytes( _proc, (char*) self->name_.CString(), self->name_.Length() );
}
static void dao_Craft_AnimationTrack_SETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTrack *self = (Craft::AnimationTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTrack_Core);
  if(DaoValue_CastString( _p[1] )){
    DString *__str = DaoValue_TryGetString( _p[1] );
    self->name_ = Craft::String( DString_GetData(__str), DString_Size(__str) );
  }
}
static void dao_Craft_AnimationTrack_GETF_nameHash_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTrack *self = (Craft::AnimationTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTrack_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->nameHash_, dao_Craft_StringHash_Core );
}
static void dao_Craft_AnimationTrack_GETF_channelMask_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTrack *self = (Craft::AnimationTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTrack_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->channelMask_ );
}
static void dao_Craft_AnimationTrack_SETF_channelMask_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTrack *self = (Craft::AnimationTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTrack_Core);
  self->channelMask_ = (unsigned char) DaoValue_TryGetInteger(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationTrack_GetKeyFrameIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTrack* self = (Craft::AnimationTrack*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationTrack_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->GetKeyFrameIndex( time, index );
  DaoProcess_PutInteger( _proc, (dao_integer) index );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationTriggerPoint_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationTriggerPoint_GETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTriggerPoint_SETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTriggerPoint_GETF_data_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationTriggerPoint_AnimationTriggerPoint_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationTriggerPoint_Meths[] = 
{
  { dao_Craft_AnimationTriggerPoint_GETF_time_, ".time_ ( self: Craft::AnimationTriggerPoint )=>float" },
  { dao_Craft_AnimationTriggerPoint_SETF_time_, ".time_=( self: Craft::AnimationTriggerPoint, time_: float )" },
  { dao_Craft_AnimationTriggerPoint_GETF_data_, ".data_ ( self: Craft::AnimationTriggerPoint )=>Craft::Variant" },
  { dao_Craft_AnimationTriggerPoint_AnimationTriggerPoint_dao_2, "AnimationTriggerPoint(  )=>Craft::AnimationTriggerPoint" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationTriggerPoint_Delete( DaoValue *self )
{
	delete (Craft::AnimationTriggerPoint*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_AnimationTriggerPoint_Core = 
{
  "Craft::AnimationTriggerPoint",
  sizeof(Craft::AnimationTriggerPoint),
  { NULL },
  { NULL },
  dao_Craft_AnimationTriggerPoint_Nums,
  dao_Craft_AnimationTriggerPoint_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_AnimationTriggerPoint_Delete,
  NULL
};
DaoTypeCore *dao_Craft_AnimationTriggerPoint_Core = & Craft_AnimationTriggerPoint_Core;
static void dao_Craft_AnimationTriggerPoint_GETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTriggerPoint *self = (Craft::AnimationTriggerPoint*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTriggerPoint_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->time_ );
}
static void dao_Craft_AnimationTriggerPoint_SETF_time_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTriggerPoint *self = (Craft::AnimationTriggerPoint*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTriggerPoint_Core);
  self->time_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationTriggerPoint_GETF_data_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationTriggerPoint *self = (Craft::AnimationTriggerPoint*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationTriggerPoint_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->data_, dao_Craft_Variant_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationTriggerPoint_AnimationTriggerPoint_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::AnimationTriggerPoint *_self = new Craft::AnimationTriggerPoint(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_AnimationTriggerPoint_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Animation_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Animation_Animation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_SetAnimationName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_SetLength( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_AddTrigger( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_RemoveTrigger( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_RemoveAllTriggers( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_SetNumTriggers( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetAnimationName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetAnimationNameHash( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetNumTracks( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetTrack( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetTrack_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Animation_GetNumTriggers( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Animation_Meths[] = 
{
  { dao_Craft_Animation_Animation_dao_2, "Animation(  )=>Craft::Animation" },
  { dao_Craft_Animation_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Animation_BeginLoad, "BeginLoad( self: Craft::Animation, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Animation_Save, "Save( self: Craft::Animation, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Animation_SetAnimationName, "SetAnimationName( self: Craft::Animation, name: string )" },
  { dao_Craft_Animation_SetLength, "SetLength( self: Craft::Animation, length: float )" },
  { dao_Craft_Animation_AddTrigger, "AddTrigger( self: Craft::Animation, time: float, timeIsNormalized: bool, data: Craft::Variant )" },
  { dao_Craft_Animation_RemoveTrigger, "RemoveTrigger( self: Craft::Animation, index: int )" },
  { dao_Craft_Animation_RemoveAllTriggers, "RemoveAllTriggers( self: Craft::Animation )" },
  { dao_Craft_Animation_SetNumTriggers, "SetNumTriggers( self: Craft::Animation, num: int )" },
  { dao_Craft_Animation_GetAnimationName, "GetAnimationName( self: Craft::Animation )=>string" },
  { dao_Craft_Animation_GetAnimationNameHash, "GetAnimationNameHash( self: Craft::Animation )=>Craft::StringHash" },
  { dao_Craft_Animation_GetLength, "GetLength( self: Craft::Animation )=>float" },
  { dao_Craft_Animation_GetNumTracks, "GetNumTracks( self: Craft::Animation )=>int" },
  { dao_Craft_Animation_GetTrack, "GetTrack( self: Craft::Animation, name: string )=>Craft::AnimationTrack" },
  { dao_Craft_Animation_GetTrack_dao_2, "GetTrack( self: Craft::Animation, nameHash: Craft::StringHash )=>Craft::AnimationTrack" },
  { dao_Craft_Animation_GetNumTriggers, "GetNumTriggers( self: Craft::Animation )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_Animation_Delete( DaoValue *self )
{
	Craft::Animation *obj = (Craft::Animation*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Animation_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Animation *self = (DaoCxx_Craft_Animation*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Animation_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Animation*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Animation*)data);
}

static DaoTypeCore Craft_Animation_Core = 
{
  "Craft::Animation",
  sizeof(Craft::Animation),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Animation_Craft_Resource,NULL },
  dao_Craft_Animation_Nums,
  dao_Craft_Animation_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Animation_Delete,
  Dao_Craft_Animation_HandleGC
};
DaoTypeCore *dao_Craft_Animation_Core = & Craft_Animation_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_Animation_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Animation *_self = new DaoCxx_Craft_Animation( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Animation::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_SetAnimationName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->SetAnimationName( name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_SetLength( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  float length = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetLength( length );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_AddTrigger( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );
  bool timeIsNormalized = (bool) DaoValue_TryGetBoolean( _p[2] );
  Craft::Variant* data = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_Variant_Core );

  self->AddTrigger( time, timeIsNormalized, *data );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_RemoveTrigger( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveTrigger( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_RemoveAllTriggers( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );

  self->RemoveAllTriggers(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_SetNumTriggers( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumTriggers( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetAnimationName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );

  const Craft::String& _GetAnimationName = self->GetAnimationName(  );
  DaoProcess_PutBytes( _proc, (char*) _GetAnimationName.CString(), _GetAnimationName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetAnimationNameHash( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );

  Craft::StringHash _GetAnimationNameHash = self->GetAnimationNameHash(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::StringHash( _GetAnimationNameHash ), dao_Craft_StringHash_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );

  float _GetLength = self->GetLength(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLength );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetNumTracks( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );

  unsigned int _GetNumTracks = self->GetNumTracks(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumTracks );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetTrack( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  const Craft::AnimationTrack* _GetTrack = self->GetTrack( name );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTrack, dao_Craft_AnimationTrack_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetTrack_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  const Craft::AnimationTrack* _GetTrack = self->GetTrack( *nameHash );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTrack, dao_Craft_AnimationTrack_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Animation_GetNumTriggers( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Animation* self = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Animation_Core );

  unsigned int _GetNumTriggers = self->GetNumTriggers(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumTriggers );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationStateTrack_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationStateTrack_GETF_track_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationStateTrack_GETF_bone_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationStateTrack_GETF_weight_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationStateTrack_SETF_weight_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationStateTrack_GETF_keyFrame_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationStateTrack_SETF_keyFrame_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationStateTrack_AnimationStateTrack_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationStateTrack_Meths[] = 
{
  { dao_Craft_AnimationStateTrack_GETF_track_, ".track_ ( self: Craft::AnimationStateTrack )=>Craft::AnimationTrack" },
  { dao_Craft_AnimationStateTrack_GETF_bone_, ".bone_ ( self: Craft::AnimationStateTrack )=>Craft::Bone" },
  { dao_Craft_AnimationStateTrack_GETF_weight_, ".weight_ ( self: Craft::AnimationStateTrack )=>float" },
  { dao_Craft_AnimationStateTrack_SETF_weight_, ".weight_=( self: Craft::AnimationStateTrack, weight_: float )" },
  { dao_Craft_AnimationStateTrack_GETF_keyFrame_, ".keyFrame_ ( self: Craft::AnimationStateTrack )=>int" },
  { dao_Craft_AnimationStateTrack_SETF_keyFrame_, ".keyFrame_=( self: Craft::AnimationStateTrack, keyFrame_: int )" },
  { dao_Craft_AnimationStateTrack_AnimationStateTrack_dao_2, "AnimationStateTrack(  )=>Craft::AnimationStateTrack" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationStateTrack_Delete( DaoValue *self )
{
	delete (Craft::AnimationStateTrack*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_AnimationStateTrack_Core = 
{
  "Craft::AnimationStateTrack",
  sizeof(Craft::AnimationStateTrack),
  { NULL },
  { NULL },
  dao_Craft_AnimationStateTrack_Nums,
  dao_Craft_AnimationStateTrack_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_AnimationStateTrack_Delete,
  NULL
};
DaoTypeCore *dao_Craft_AnimationStateTrack_Core = & Craft_AnimationStateTrack_Core;
static void dao_Craft_AnimationStateTrack_GETF_track_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationStateTrack *self = (Craft::AnimationStateTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationStateTrack_Core);
  DaoProcess_WrapCdataTC( _proc, (void*) self->track_, dao_Craft_AnimationTrack_Core );
}
static void dao_Craft_AnimationStateTrack_GETF_bone_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationStateTrack *self = (Craft::AnimationStateTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationStateTrack_Core);
  DaoProcess_WrapCdataTC( _proc, (void*) self->bone_, dao_Craft_Bone_Core );
}
static void dao_Craft_AnimationStateTrack_GETF_weight_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationStateTrack *self = (Craft::AnimationStateTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationStateTrack_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->weight_ );
}
static void dao_Craft_AnimationStateTrack_SETF_weight_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationStateTrack *self = (Craft::AnimationStateTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationStateTrack_Core);
  self->weight_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationStateTrack_GETF_keyFrame_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationStateTrack *self = (Craft::AnimationStateTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationStateTrack_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->keyFrame_ );
}
static void dao_Craft_AnimationStateTrack_SETF_keyFrame_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationStateTrack *self = (Craft::AnimationStateTrack*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationStateTrack_Core);
  self->keyFrame_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationStateTrack_AnimationStateTrack_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::AnimationStateTrack *_self = new Craft::AnimationStateTrack(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_AnimationStateTrack_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationState_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationState_AnimationState_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_AnimationState_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetLooped( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetBoneWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetBoneWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetBoneWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_AddWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_AddTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_SetLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetAnimation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetModel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetBoneWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetBoneWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetBoneWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetTrackIndex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetTrackIndex_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetTrackIndex_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_IsEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_IsLooped( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetWeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_GetLayer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationState_Apply( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationState_Meths[] = 
{
  { dao_Craft_AnimationState_AnimationState_dao_3, "AnimationState( model: Craft::AnimatedModel, animation: Craft::Animation )=>Craft::AnimationState" },
  { dao_Craft_AnimationState_AnimationState_dao_4, "AnimationState( node: Craft::Node, animation: Craft::Animation )=>Craft::AnimationState" },
  { dao_Craft_AnimationState_SetStartBone, "SetStartBone( self: Craft::AnimationState, bone: Craft::Bone )" },
  { dao_Craft_AnimationState_SetLooped, "SetLooped( self: Craft::AnimationState, looped: bool )" },
  { dao_Craft_AnimationState_SetWeight, "SetWeight( self: Craft::AnimationState, weight: float )" },
  { dao_Craft_AnimationState_SetTime, "SetTime( self: Craft::AnimationState, time: float )" },
  { dao_Craft_AnimationState_SetBoneWeight, "SetBoneWeight( self: Craft::AnimationState, index: int, weight: float, recursive: bool =false )" },
  { dao_Craft_AnimationState_SetBoneWeight_dao_2, "SetBoneWeight( self: Craft::AnimationState, name: string, weight: float, recursive: bool =false )" },
  { dao_Craft_AnimationState_SetBoneWeight_dao_3, "SetBoneWeight( self: Craft::AnimationState, nameHash: Craft::StringHash, weight: float, recursive: bool =false )" },
  { dao_Craft_AnimationState_AddWeight, "AddWeight( self: Craft::AnimationState, delta: float )" },
  { dao_Craft_AnimationState_AddTime, "AddTime( self: Craft::AnimationState, delta: float )" },
  { dao_Craft_AnimationState_SetLayer, "SetLayer( self: Craft::AnimationState, layer: int )" },
  { dao_Craft_AnimationState_GetAnimation, "GetAnimation( self: Craft::AnimationState )=>Craft::Animation" },
  { dao_Craft_AnimationState_GetModel, "GetModel( self: Craft::AnimationState )=>Craft::AnimatedModel" },
  { dao_Craft_AnimationState_GetNode, "GetNode( self: Craft::AnimationState )=>Craft::Node" },
  { dao_Craft_AnimationState_GetStartBone, "GetStartBone( self: Craft::AnimationState )=>Craft::Bone" },
  { dao_Craft_AnimationState_GetBoneWeight, "GetBoneWeight( self: Craft::AnimationState, index: int )=>float" },
  { dao_Craft_AnimationState_GetBoneWeight_dao_2, "GetBoneWeight( self: Craft::AnimationState, name: string )=>float" },
  { dao_Craft_AnimationState_GetBoneWeight_dao_3, "GetBoneWeight( self: Craft::AnimationState, nameHash: Craft::StringHash )=>float" },
  { dao_Craft_AnimationState_GetTrackIndex, "GetTrackIndex( self: Craft::AnimationState, node: Craft::Node )=>int" },
  { dao_Craft_AnimationState_GetTrackIndex_dao_2, "GetTrackIndex( self: Craft::AnimationState, name: string )=>int" },
  { dao_Craft_AnimationState_GetTrackIndex_dao_3, "GetTrackIndex( self: Craft::AnimationState, nameHash: Craft::StringHash )=>int" },
  { dao_Craft_AnimationState_IsEnabled, "IsEnabled( self: Craft::AnimationState )=>bool" },
  { dao_Craft_AnimationState_IsLooped, "IsLooped( self: Craft::AnimationState )=>bool" },
  { dao_Craft_AnimationState_GetWeight, "GetWeight( self: Craft::AnimationState )=>float" },
  { dao_Craft_AnimationState_GetTime, "GetTime( self: Craft::AnimationState )=>float" },
  { dao_Craft_AnimationState_GetLength, "GetLength( self: Craft::AnimationState )=>float" },
  { dao_Craft_AnimationState_GetLayer, "GetLayer( self: Craft::AnimationState )=>int" },
  { dao_Craft_AnimationState_Apply, "Apply( self: Craft::AnimationState )" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationState_Delete( DaoValue *self )
{
	delete (Craft::AnimationState*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_AnimationState_Core = 
{
  "Craft::AnimationState",
  sizeof(Craft::AnimationState),
  { NULL },
  { NULL },
  dao_Craft_AnimationState_Nums,
  dao_Craft_AnimationState_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_AnimationState_Delete,
  NULL
};
DaoTypeCore *dao_Craft_AnimationState_Core = & Craft_AnimationState_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_AnimationState_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimatedModel* model = (Craft::AnimatedModel*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimatedModel_Core );
  Craft::Animation* animation = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Animation_Core );

  Craft::AnimationState *_self = new Craft::AnimationState( model, animation );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_AnimationState_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Node_Core );
  Craft::Animation* animation = (Craft::Animation*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Animation_Core );

  Craft::AnimationState *_self = new Craft::AnimationState( node, animation );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_AnimationState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  Craft::Bone* bone = (Craft::Bone*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Bone_Core );

  self->SetStartBone( bone );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetLooped( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  bool looped = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetLooped( looped );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  float weight = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetWeight( weight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetTime( time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetBoneWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->SetBoneWeight( index, weight, recursive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetBoneWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->SetBoneWeight( name, weight, recursive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetBoneWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  float weight = (float) DaoValue_TryGetFloat( _p[2] );
  bool recursive = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->SetBoneWeight( *nameHash, weight, recursive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_AddWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  float delta = (float) DaoValue_TryGetFloat( _p[1] );

  self->AddWeight( delta );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_AddTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  float delta = (float) DaoValue_TryGetFloat( _p[1] );

  self->AddTime( delta );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_SetLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  unsigned char layer = (unsigned char) DaoValue_TryGetInteger( _p[1] );

  self->SetLayer( layer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetAnimation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  Craft::Animation* _GetAnimation = self->GetAnimation(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetAnimation, dao_Craft_Animation_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetModel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  Craft::AnimatedModel* _GetModel = self->GetModel(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetModel, dao_Craft_AnimatedModel_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  Craft::Node* _GetNode = self->GetNode(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetNode, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetStartBone( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  Craft::Bone* _GetStartBone = self->GetStartBone(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetStartBone, dao_Craft_Bone_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetBoneWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  float _GetBoneWeight = self->GetBoneWeight( index );
  DaoProcess_PutFloat( _proc, (dao_float) _GetBoneWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetBoneWeight_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  float _GetBoneWeight = self->GetBoneWeight( name );
  DaoProcess_PutFloat( _proc, (dao_float) _GetBoneWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetBoneWeight_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  float _GetBoneWeight = self->GetBoneWeight( *nameHash );
  DaoProcess_PutFloat( _proc, (dao_float) _GetBoneWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetTrackIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  unsigned int _GetTrackIndex = self->GetTrackIndex( node );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTrackIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetTrackIndex_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  unsigned int _GetTrackIndex = self->GetTrackIndex( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTrackIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetTrackIndex_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );
  Craft::StringHash* nameHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  unsigned int _GetTrackIndex = self->GetTrackIndex( *nameHash );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTrackIndex );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_IsEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  bool _IsEnabled = self->IsEnabled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEnabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_IsLooped( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  bool _IsLooped = self->IsLooped(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsLooped );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetWeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  float _GetWeight = self->GetWeight(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetWeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  float _GetTime = self->GetTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  float _GetLength = self->GetLength(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLength );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_GetLayer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  unsigned char _GetLayer = self->GetLayer(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayer );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationState_Apply( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationState* self = (Craft::AnimationState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_AnimationState_Core );

  self->Apply(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_AnimationControl_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_AnimationControl_GETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_hash_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_speed_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_speed_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_targetWeight_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_targetWeight_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_fadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_fadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_autoFadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_autoFadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_setTimeTtl_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_setTimeTtl_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_setWeightTtl_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_setWeightTtl_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_setTime_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_setTime_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_setWeight_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_setWeight_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_setTimeRev_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_setTimeRev_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_setWeightRev_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_setWeightRev_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_GETF_removeOnCompletion_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_SETF_removeOnCompletion_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_AnimationControl_AnimationControl_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_AnimationControl_Meths[] = 
{
  { dao_Craft_AnimationControl_GETF_name_, ".name_ ( self: Craft::AnimationControl )=>string" },
  { dao_Craft_AnimationControl_SETF_name_, ".name_=( self: Craft::AnimationControl, name_: string )" },
  { dao_Craft_AnimationControl_GETF_hash_, ".hash_ ( self: Craft::AnimationControl )=>Craft::StringHash" },
  { dao_Craft_AnimationControl_GETF_speed_, ".speed_ ( self: Craft::AnimationControl )=>float" },
  { dao_Craft_AnimationControl_SETF_speed_, ".speed_=( self: Craft::AnimationControl, speed_: float )" },
  { dao_Craft_AnimationControl_GETF_targetWeight_, ".targetWeight_ ( self: Craft::AnimationControl )=>float" },
  { dao_Craft_AnimationControl_SETF_targetWeight_, ".targetWeight_=( self: Craft::AnimationControl, targetWeight_: float )" },
  { dao_Craft_AnimationControl_GETF_fadeTime_, ".fadeTime_ ( self: Craft::AnimationControl )=>float" },
  { dao_Craft_AnimationControl_SETF_fadeTime_, ".fadeTime_=( self: Craft::AnimationControl, fadeTime_: float )" },
  { dao_Craft_AnimationControl_GETF_autoFadeTime_, ".autoFadeTime_ ( self: Craft::AnimationControl )=>float" },
  { dao_Craft_AnimationControl_SETF_autoFadeTime_, ".autoFadeTime_=( self: Craft::AnimationControl, autoFadeTime_: float )" },
  { dao_Craft_AnimationControl_GETF_setTimeTtl_, ".setTimeTtl_ ( self: Craft::AnimationControl )=>float" },
  { dao_Craft_AnimationControl_SETF_setTimeTtl_, ".setTimeTtl_=( self: Craft::AnimationControl, setTimeTtl_: float )" },
  { dao_Craft_AnimationControl_GETF_setWeightTtl_, ".setWeightTtl_ ( self: Craft::AnimationControl )=>float" },
  { dao_Craft_AnimationControl_SETF_setWeightTtl_, ".setWeightTtl_=( self: Craft::AnimationControl, setWeightTtl_: float )" },
  { dao_Craft_AnimationControl_GETF_setTime_, ".setTime_ ( self: Craft::AnimationControl )=>int" },
  { dao_Craft_AnimationControl_SETF_setTime_, ".setTime_=( self: Craft::AnimationControl, setTime_: int )" },
  { dao_Craft_AnimationControl_GETF_setWeight_, ".setWeight_ ( self: Craft::AnimationControl )=>int" },
  { dao_Craft_AnimationControl_SETF_setWeight_, ".setWeight_=( self: Craft::AnimationControl, setWeight_: int )" },
  { dao_Craft_AnimationControl_GETF_setTimeRev_, ".setTimeRev_ ( self: Craft::AnimationControl )=>int" },
  { dao_Craft_AnimationControl_SETF_setTimeRev_, ".setTimeRev_=( self: Craft::AnimationControl, setTimeRev_: int )" },
  { dao_Craft_AnimationControl_GETF_setWeightRev_, ".setWeightRev_ ( self: Craft::AnimationControl )=>int" },
  { dao_Craft_AnimationControl_SETF_setWeightRev_, ".setWeightRev_=( self: Craft::AnimationControl, setWeightRev_: int )" },
  { dao_Craft_AnimationControl_GETF_removeOnCompletion_, ".removeOnCompletion_ ( self: Craft::AnimationControl )=>bool" },
  { dao_Craft_AnimationControl_SETF_removeOnCompletion_, ".removeOnCompletion_=( self: Craft::AnimationControl, removeOnCompletion_: bool )" },
  { dao_Craft_AnimationControl_AnimationControl_dao_3, "AnimationControl(  )=>Craft::AnimationControl" },
  { NULL, NULL }
};
static void Dao_Craft_AnimationControl_Delete( DaoValue *self )
{
	delete (Craft::AnimationControl*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_AnimationControl_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::AnimationControl* src = (Craft::AnimationControl*) DaoValue_TryCastCdataTC( self, dao_Craft_AnimationControl_Core );
	Craft::AnimationControl* dest;
	if( target ){
		dest = (Craft::AnimationControl*) DaoValue_TryCastCdataTC( target, dao_Craft_AnimationControl_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::AnimationControl( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_AnimationControl_Core, dest );
}

static DaoTypeCore Craft_AnimationControl_Core = 
{
  "Craft::AnimationControl",
  sizeof(Craft::AnimationControl),
  { NULL },
  { NULL },
  dao_Craft_AnimationControl_Nums,
  dao_Craft_AnimationControl_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_AnimationControl_Copy,
  Dao_Craft_AnimationControl_Delete,
  NULL
};
DaoTypeCore *dao_Craft_AnimationControl_Core = & Craft_AnimationControl_Core;
static void dao_Craft_AnimationControl_GETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutBytes( _proc, (char*) self->name_.CString(), self->name_.Length() );
}
static void dao_Craft_AnimationControl_SETF_name_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  if(DaoValue_CastString( _p[1] )){
    DString *__str = DaoValue_TryGetString( _p[1] );
    self->name_ = Craft::String( DString_GetData(__str), DString_Size(__str) );
  }
}
static void dao_Craft_AnimationControl_GETF_hash_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->hash_, dao_Craft_StringHash_Core );
}
static void dao_Craft_AnimationControl_GETF_speed_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->speed_ );
}
static void dao_Craft_AnimationControl_SETF_speed_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->speed_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_targetWeight_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->targetWeight_ );
}
static void dao_Craft_AnimationControl_SETF_targetWeight_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->targetWeight_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_fadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->fadeTime_ );
}
static void dao_Craft_AnimationControl_SETF_fadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->fadeTime_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_autoFadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->autoFadeTime_ );
}
static void dao_Craft_AnimationControl_SETF_autoFadeTime_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->autoFadeTime_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_setTimeTtl_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->setTimeTtl_ );
}
static void dao_Craft_AnimationControl_SETF_setTimeTtl_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->setTimeTtl_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_setWeightTtl_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->setWeightTtl_ );
}
static void dao_Craft_AnimationControl_SETF_setWeightTtl_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->setWeightTtl_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_setTime_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->setTime_ );
}
static void dao_Craft_AnimationControl_SETF_setTime_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->setTime_ = (unsigned short) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_setWeight_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->setWeight_ );
}
static void dao_Craft_AnimationControl_SETF_setWeight_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->setWeight_ = (unsigned char) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_setTimeRev_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->setTimeRev_ );
}
static void dao_Craft_AnimationControl_SETF_setTimeRev_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->setTimeRev_ = (unsigned char) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_setWeightRev_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->setWeightRev_ );
}
static void dao_Craft_AnimationControl_SETF_setWeightRev_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->setWeightRev_ = (unsigned char) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_AnimationControl_GETF_removeOnCompletion_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  DaoProcess_PutBoolean( _proc, (dao_boolean) self->removeOnCompletion_ );
}
static void dao_Craft_AnimationControl_SETF_removeOnCompletion_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::AnimationControl *self = (Craft::AnimationControl*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_AnimationControl_Core);
  self->removeOnCompletion_ = (bool) DaoValue_TryGetBoolean(_p[1]);
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_AnimationControl_AnimationControl_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::AnimationControl _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_AnimationControl_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Skybox_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Skybox_Skybox_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skybox_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Skybox_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Skybox_Meths[] = 
{
  { dao_Craft_Skybox_Skybox_dao_2, "Skybox(  )=>Craft::Skybox" },
  { dao_Craft_Skybox_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Skybox_UpdateBatches, "UpdateBatches( self: Craft::Skybox, frame: Craft::FrameInfo )" },
  { NULL, NULL }
};
static void Dao_Craft_Skybox_Delete( DaoValue *self )
{
	Craft::Skybox *obj = (Craft::Skybox*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Skybox_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Skybox *self = (DaoCxx_Craft_Skybox*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Skybox_Craft_StaticModel( void *data, int down )
{
	if( down ) return static_cast<Craft::Skybox*>((Craft::StaticModel*)data);
	return dynamic_cast<Craft::StaticModel*>((Craft::Skybox*)data);
}

static DaoTypeCore Craft_Skybox_Core = 
{
  "Craft::Skybox",
  sizeof(Craft::Skybox),
  { dao_Craft_StaticModel_Core, NULL },
  { dao_cast_Craft_Skybox_Craft_StaticModel,NULL },
  dao_Craft_Skybox_Nums,
  dao_Craft_Skybox_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Skybox_Delete,
  Dao_Craft_Skybox_HandleGC
};
DaoTypeCore *dao_Craft_Skybox_Core = & Craft_Skybox_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skybox_Skybox_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Skybox *_self = new DaoCxx_Craft_Skybox( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skybox_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Skybox::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Skybox_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Skybox* self = (Craft::Skybox*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Skybox_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->UpdateBatches( *frame );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_StaticModelGroup_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_StaticModelGroup_StaticModelGroup_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_GetNumOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_AddInstanceNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_RemoveInstanceNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_RemoveAllInstanceNodes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_GetNumInstanceNodes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_StaticModelGroup_GetInstanceNode( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_StaticModelGroup_Meths[] = 
{
  { dao_Craft_StaticModelGroup_StaticModelGroup_dao_2, "StaticModelGroup(  )=>Craft::StaticModelGroup" },
  { dao_Craft_StaticModelGroup_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_StaticModelGroup_ApplyAttributes, "ApplyAttributes( self: Craft::StaticModelGroup )" },
  { dao_Craft_StaticModelGroup_UpdateBatches, "UpdateBatches( self: Craft::StaticModelGroup, frame: Craft::FrameInfo )" },
  { dao_Craft_StaticModelGroup_GetNumOccluderTriangles, "GetNumOccluderTriangles( self: Craft::StaticModelGroup )=>int" },
  { dao_Craft_StaticModelGroup_AddInstanceNode, "AddInstanceNode( self: Craft::StaticModelGroup, node: Craft::Node )" },
  { dao_Craft_StaticModelGroup_RemoveInstanceNode, "RemoveInstanceNode( self: Craft::StaticModelGroup, node: Craft::Node )" },
  { dao_Craft_StaticModelGroup_RemoveAllInstanceNodes, "RemoveAllInstanceNodes( self: Craft::StaticModelGroup )" },
  { dao_Craft_StaticModelGroup_GetNumInstanceNodes, "GetNumInstanceNodes( self: Craft::StaticModelGroup )=>int" },
  { dao_Craft_StaticModelGroup_GetInstanceNode, "GetInstanceNode( self: Craft::StaticModelGroup, index: int )=>Craft::Node" },
  { NULL, NULL }
};
static void Dao_Craft_StaticModelGroup_Delete( DaoValue *self )
{
	Craft::StaticModelGroup *obj = (Craft::StaticModelGroup*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_StaticModelGroup_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_StaticModelGroup *self = (DaoCxx_Craft_StaticModelGroup*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_StaticModelGroup_Craft_StaticModel( void *data, int down )
{
	if( down ) return static_cast<Craft::StaticModelGroup*>((Craft::StaticModel*)data);
	return dynamic_cast<Craft::StaticModel*>((Craft::StaticModelGroup*)data);
}

static DaoTypeCore Craft_StaticModelGroup_Core = 
{
  "Craft::StaticModelGroup",
  sizeof(Craft::StaticModelGroup),
  { dao_Craft_StaticModel_Core, NULL },
  { dao_cast_Craft_StaticModelGroup_Craft_StaticModel,NULL },
  dao_Craft_StaticModelGroup_Nums,
  dao_Craft_StaticModelGroup_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_StaticModelGroup_Delete,
  Dao_Craft_StaticModelGroup_HandleGC
};
DaoTypeCore *dao_Craft_StaticModelGroup_Core = & Craft_StaticModelGroup_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_StaticModelGroup_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_StaticModelGroup *_self = new DaoCxx_Craft_StaticModelGroup( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::StaticModelGroup::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->UpdateBatches( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_GetNumOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );

  unsigned int _GetNumOccluderTriangles = self->GetNumOccluderTriangles(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumOccluderTriangles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_AddInstanceNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->AddInstanceNode( node );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_RemoveInstanceNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );
  Craft::Node* node = (Craft::Node*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Node_Core );

  self->RemoveInstanceNode( node );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_RemoveAllInstanceNodes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );

  self->RemoveAllInstanceNodes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_GetNumInstanceNodes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );

  unsigned int _GetNumInstanceNodes = self->GetNumInstanceNodes(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumInstanceNodes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_StaticModelGroup_GetInstanceNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::StaticModelGroup* self = (Craft::StaticModelGroup*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_StaticModelGroup_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Node* _GetInstanceNode = self->GetInstanceNode( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetInstanceNode, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Billboard_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Billboard_Billboard( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Billboard_Meths[] = 
{
  { dao_Craft_Billboard_Billboard, "Billboard(  )=>Billboard" },
  { NULL, NULL }
};
static void Dao_Craft_Billboard_Delete( DaoValue *self )
{
	delete (Craft::Billboard*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_Billboard_Core = 
{
  "Craft::Billboard",
  sizeof(Craft::Billboard),
  { NULL },
  { NULL },
  dao_Craft_Billboard_Nums,
  dao_Craft_Billboard_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Billboard_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Billboard_Core = & Craft_Billboard_Core;
static void dao_Craft_Billboard_Billboard( DaoProcess *_proc, DaoValue *_p[], int _n )
{
	Craft::Billboard *self = Dao_Craft_Billboard_New();
	DaoProcess_PutCdataTC( _proc, self, dao_Craft_Billboard_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_BillboardSet_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_BillboardSet_BillboardSet_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetNumBillboards( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetRelative( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetScaled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetSorted( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetFaceCameraMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_SetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_Commit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_GetNumBillboards( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_GetBillboard( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_IsRelative( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_IsScaled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_IsSorted( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_GetFaceCameraMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_BillboardSet_GetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_BillboardSet_Meths[] = 
{
  { dao_Craft_BillboardSet_BillboardSet_dao_2, "BillboardSet(  )=>Craft::BillboardSet" },
  { dao_Craft_BillboardSet_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_BillboardSet_SetMaterial, "SetMaterial( self: Craft::BillboardSet, material: Craft::Material )" },
  { dao_Craft_BillboardSet_SetNumBillboards, "SetNumBillboards( self: Craft::BillboardSet, num: int )" },
  { dao_Craft_BillboardSet_SetRelative, "SetRelative( self: Craft::BillboardSet, enable: bool )" },
  { dao_Craft_BillboardSet_SetScaled, "SetScaled( self: Craft::BillboardSet, enable: bool )" },
  { dao_Craft_BillboardSet_SetSorted, "SetSorted( self: Craft::BillboardSet, enable: bool )" },
  { dao_Craft_BillboardSet_SetFaceCameraMode, "SetFaceCameraMode( self: Craft::BillboardSet, mode: int )" },
  { dao_Craft_BillboardSet_SetAnimationLodBias, "SetAnimationLodBias( self: Craft::BillboardSet, bias: float )" },
  { dao_Craft_BillboardSet_Commit, "Commit( self: Craft::BillboardSet )" },
  { dao_Craft_BillboardSet_GetMaterial, "GetMaterial( self: Craft::BillboardSet )=>Craft::Material" },
  { dao_Craft_BillboardSet_GetNumBillboards, "GetNumBillboards( self: Craft::BillboardSet )=>int" },
  { dao_Craft_BillboardSet_GetBillboard, "GetBillboard( self: Craft::BillboardSet, index: int )=>Craft::Billboard" },
  { dao_Craft_BillboardSet_IsRelative, "IsRelative( self: Craft::BillboardSet )=>bool" },
  { dao_Craft_BillboardSet_IsScaled, "IsScaled( self: Craft::BillboardSet )=>bool" },
  { dao_Craft_BillboardSet_IsSorted, "IsSorted( self: Craft::BillboardSet )=>bool" },
  { dao_Craft_BillboardSet_GetFaceCameraMode, "GetFaceCameraMode( self: Craft::BillboardSet )=>int" },
  { dao_Craft_BillboardSet_GetAnimationLodBias, "GetAnimationLodBias( self: Craft::BillboardSet )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_BillboardSet_Delete( DaoValue *self )
{
	Craft::BillboardSet *obj = (Craft::BillboardSet*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_BillboardSet_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_BillboardSet *self = (DaoCxx_Craft_BillboardSet*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_BillboardSet_Craft_Drawable( void *data, int down )
{
	if( down ) return static_cast<Craft::BillboardSet*>((Craft::Drawable*)data);
	return dynamic_cast<Craft::Drawable*>((Craft::BillboardSet*)data);
}

static DaoTypeCore Craft_BillboardSet_Core = 
{
  "Craft::BillboardSet",
  sizeof(Craft::BillboardSet),
  { dao_Craft_Drawable_Core, NULL },
  { dao_cast_Craft_BillboardSet_Craft_Drawable,NULL },
  dao_Craft_BillboardSet_Nums,
  dao_Craft_BillboardSet_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_BillboardSet_Delete,
  Dao_Craft_BillboardSet_HandleGC
};
DaoTypeCore *dao_Craft_BillboardSet_Core = & Craft_BillboardSet_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_BillboardSet_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_BillboardSet *_self = new DaoCxx_Craft_BillboardSet( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::BillboardSet::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Material_Core );

  self->SetMaterial( material );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetNumBillboards( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumBillboards( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetRelative( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetRelative( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetScaled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetScaled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetSorted( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSorted( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetFaceCameraMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  Craft::FaceCameraMode mode = (Craft::FaceCameraMode) DaoValue_TryGetInteger( _p[1] );

  self->SetFaceCameraMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_SetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  float bias = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAnimationLodBias( bias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_Commit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  self->Commit(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  Craft::Material* _GetMaterial = self->GetMaterial(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetMaterial, dao_Craft_Material_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_GetNumBillboards( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  unsigned int _GetNumBillboards = self->GetNumBillboards(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumBillboards );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_GetBillboard( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::Billboard* _GetBillboard = self->GetBillboard( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetBillboard, dao_Craft_Billboard_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_IsRelative( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  bool _IsRelative = self->IsRelative(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsRelative );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_IsScaled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  bool _IsScaled = self->IsScaled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsScaled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_IsSorted( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  bool _IsSorted = self->IsSorted(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSorted );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_GetFaceCameraMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  Craft::FaceCameraMode _GetFaceCameraMode = self->GetFaceCameraMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFaceCameraMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_BillboardSet_GetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::BillboardSet* self = (Craft::BillboardSet*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_BillboardSet_Core );

  float _GetAnimationLodBias = self->GetAnimationLodBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAnimationLodBias );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ColorFrame_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ColorFrame_ColorFrame_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ColorFrame_ColorFrame_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ColorFrame_ColorFrame_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ColorFrame_Interpolate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ColorFrame_Meths[] = 
{
  { dao_Craft_ColorFrame_ColorFrame_dao_5, "ColorFrame(  )=>Craft::ColorFrame" },
  { dao_Craft_ColorFrame_ColorFrame_dao_6, "ColorFrame( color: Craft::Color )=>Craft::ColorFrame" },
  { dao_Craft_ColorFrame_ColorFrame_dao_7, "ColorFrame( color: Craft::Color, time: float )=>Craft::ColorFrame" },
  { dao_Craft_ColorFrame_Interpolate, "Interpolate( self: Craft::ColorFrame, next: Craft::ColorFrame, time: float )=>Craft::Color" },
  { NULL, NULL }
};
static void Dao_Craft_ColorFrame_Delete( DaoValue *self )
{
	delete (Craft::ColorFrame*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_ColorFrame_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::ColorFrame* src = (Craft::ColorFrame*) DaoValue_TryCastCdataTC( self, dao_Craft_ColorFrame_Core );
	Craft::ColorFrame* dest;
	if( target ){
		dest = (Craft::ColorFrame*) DaoValue_TryCastCdataTC( target, dao_Craft_ColorFrame_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::ColorFrame( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_ColorFrame_Core, dest );
}

static DaoTypeCore Craft_ColorFrame_Core = 
{
  "Craft::ColorFrame",
  sizeof(Craft::ColorFrame),
  { NULL },
  { NULL },
  dao_Craft_ColorFrame_Nums,
  dao_Craft_ColorFrame_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_ColorFrame_Copy,
  Dao_Craft_ColorFrame_Delete,
  NULL
};
DaoTypeCore *dao_Craft_ColorFrame_Core = & Craft_ColorFrame_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ColorFrame_ColorFrame_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::ColorFrame _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_ColorFrame_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ColorFrame_ColorFrame_dao_6( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );

  Craft::ColorFrame _self(*color);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_ColorFrame_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ColorFrame_ColorFrame_dao_7( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Color_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  Craft::ColorFrame _self(*color, time);
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_ColorFrame_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ColorFrame_Interpolate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ColorFrame* self = (Craft::ColorFrame*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ColorFrame_Core );
  Craft::ColorFrame* next = (Craft::ColorFrame*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ColorFrame_Core );
  float time = (float) DaoValue_TryGetFloat( _p[2] );

  Craft::Color _Interpolate = self->Interpolate( *next, time );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Color( _Interpolate ), dao_Craft_Color_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_TextureFrame_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_TextureFrame_TextureFrame_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_TextureFrame_Meths[] = 
{
  { dao_Craft_TextureFrame_TextureFrame_dao_3, "TextureFrame(  )=>Craft::TextureFrame" },
  { NULL, NULL }
};
static void Dao_Craft_TextureFrame_Delete( DaoValue *self )
{
	delete (Craft::TextureFrame*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_TextureFrame_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::TextureFrame* src = (Craft::TextureFrame*) DaoValue_TryCastCdataTC( self, dao_Craft_TextureFrame_Core );
	Craft::TextureFrame* dest;
	if( target ){
		dest = (Craft::TextureFrame*) DaoValue_TryCastCdataTC( target, dao_Craft_TextureFrame_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::TextureFrame( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_TextureFrame_Core, dest );
}

static DaoTypeCore Craft_TextureFrame_Core = 
{
  "Craft::TextureFrame",
  sizeof(Craft::TextureFrame),
  { NULL },
  { NULL },
  dao_Craft_TextureFrame_Nums,
  dao_Craft_TextureFrame_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_TextureFrame_Copy,
  Dao_Craft_TextureFrame_Delete,
  NULL
};
DaoTypeCore *dao_Craft_TextureFrame_Core = & Craft_TextureFrame_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TextureFrame_TextureFrame_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::TextureFrame _self;
  DaoProcess_CopyCdataTC( _proc, & _self, dao_Craft_TextureFrame_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ParticleEffect_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ParticleEffect_ParticleEffect_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_Save( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetRelative( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetScaled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetSorted( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetEmitterType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetEmitterSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetConstantForce( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetDampingForce( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetActiveTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetInactiveTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMinRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetMaxRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetSizeAdd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetSizeMul( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_AddColorTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_AddColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_RemoveColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetNumColorFrames( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SortColorFrames( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_AddTextureTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_AddTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_RemoveTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SetNumTextureFrames( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_SortTextureFrames( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_IsRelative( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_IsScaled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_IsSorted( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetEmitterType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetEmitterSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetConstantForce( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetDampingForce( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetActiveTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetInactiveTime( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMinRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetMaxRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetSizeAdd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetSizeMul( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetNumColorFrames( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetNumTextureFrames( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetRandomDirection( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetRandomSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetRandomVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetRandomTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetRandomRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEffect_GetRandomRotation( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ParticleEffect_Meths[] = 
{
  { dao_Craft_ParticleEffect_ParticleEffect_dao_2, "ParticleEffect(  )=>Craft::ParticleEffect" },
  { dao_Craft_ParticleEffect_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_ParticleEffect_BeginLoad, "BeginLoad( self: Craft::ParticleEffect, source: Craft::Deserializer )=>bool" },
  { dao_Craft_ParticleEffect_EndLoad, "EndLoad( self: Craft::ParticleEffect )=>bool" },
  { dao_Craft_ParticleEffect_Save, "Save( self: Craft::ParticleEffect, dest: Craft::Serializer )=>bool" },
  { dao_Craft_ParticleEffect_SetMaterial, "SetMaterial( self: Craft::ParticleEffect, material: Craft::Material )" },
  { dao_Craft_ParticleEffect_SetNumParticles, "SetNumParticles( self: Craft::ParticleEffect, num: int )" },
  { dao_Craft_ParticleEffect_SetUpdateInvisible, "SetUpdateInvisible( self: Craft::ParticleEffect, enable: bool )" },
  { dao_Craft_ParticleEffect_SetRelative, "SetRelative( self: Craft::ParticleEffect, enable: bool )" },
  { dao_Craft_ParticleEffect_SetScaled, "SetScaled( self: Craft::ParticleEffect, enable: bool )" },
  { dao_Craft_ParticleEffect_SetSorted, "SetSorted( self: Craft::ParticleEffect, enable: bool )" },
  { dao_Craft_ParticleEffect_SetAnimationLodBias, "SetAnimationLodBias( self: Craft::ParticleEffect, lodBias: float )" },
  { dao_Craft_ParticleEffect_SetEmitterType, "SetEmitterType( self: Craft::ParticleEffect, type: int )" },
  { dao_Craft_ParticleEffect_SetEmitterSize, "SetEmitterSize( self: Craft::ParticleEffect, size: Craft::Vector3 )" },
  { dao_Craft_ParticleEffect_SetMinDirection, "SetMinDirection( self: Craft::ParticleEffect, direction: Craft::Vector3 )" },
  { dao_Craft_ParticleEffect_SetMaxDirection, "SetMaxDirection( self: Craft::ParticleEffect, direction: Craft::Vector3 )" },
  { dao_Craft_ParticleEffect_SetConstantForce, "SetConstantForce( self: Craft::ParticleEffect, force: Craft::Vector3 )" },
  { dao_Craft_ParticleEffect_SetDampingForce, "SetDampingForce( self: Craft::ParticleEffect, force: float )" },
  { dao_Craft_ParticleEffect_SetActiveTime, "SetActiveTime( self: Craft::ParticleEffect, time: float )" },
  { dao_Craft_ParticleEffect_SetInactiveTime, "SetInactiveTime( self: Craft::ParticleEffect, time: float )" },
  { dao_Craft_ParticleEffect_SetMinEmissionRate, "SetMinEmissionRate( self: Craft::ParticleEffect, rate: float )" },
  { dao_Craft_ParticleEffect_SetMaxEmissionRate, "SetMaxEmissionRate( self: Craft::ParticleEffect, rate: float )" },
  { dao_Craft_ParticleEffect_SetMinParticleSize, "SetMinParticleSize( self: Craft::ParticleEffect, size: Craft::Vector2 )" },
  { dao_Craft_ParticleEffect_SetMaxParticleSize, "SetMaxParticleSize( self: Craft::ParticleEffect, size: Craft::Vector2 )" },
  { dao_Craft_ParticleEffect_SetMinTimeToLive, "SetMinTimeToLive( self: Craft::ParticleEffect, time: float )" },
  { dao_Craft_ParticleEffect_SetMaxTimeToLive, "SetMaxTimeToLive( self: Craft::ParticleEffect, time: float )" },
  { dao_Craft_ParticleEffect_SetMinVelocity, "SetMinVelocity( self: Craft::ParticleEffect, velocity: float )" },
  { dao_Craft_ParticleEffect_SetMaxVelocity, "SetMaxVelocity( self: Craft::ParticleEffect, velocity: float )" },
  { dao_Craft_ParticleEffect_SetMinRotation, "SetMinRotation( self: Craft::ParticleEffect, rotation: float )" },
  { dao_Craft_ParticleEffect_SetMaxRotation, "SetMaxRotation( self: Craft::ParticleEffect, rotation: float )" },
  { dao_Craft_ParticleEffect_SetMinRotationSpeed, "SetMinRotationSpeed( self: Craft::ParticleEffect, speed: float )" },
  { dao_Craft_ParticleEffect_SetMaxRotationSpeed, "SetMaxRotationSpeed( self: Craft::ParticleEffect, speed: float )" },
  { dao_Craft_ParticleEffect_SetSizeAdd, "SetSizeAdd( self: Craft::ParticleEffect, sizeAdd: float )" },
  { dao_Craft_ParticleEffect_SetSizeMul, "SetSizeMul( self: Craft::ParticleEffect, sizeMul: float )" },
  { dao_Craft_ParticleEffect_AddColorTime, "AddColorTime( self: Craft::ParticleEffect, color: Craft::Color, time: float )" },
  { dao_Craft_ParticleEffect_AddColorFrame, "AddColorFrame( self: Craft::ParticleEffect, colorFrame: Craft::ColorFrame )" },
  { dao_Craft_ParticleEffect_RemoveColorFrame, "RemoveColorFrame( self: Craft::ParticleEffect, index: int )" },
  { dao_Craft_ParticleEffect_SetColorFrame, "SetColorFrame( self: Craft::ParticleEffect, index: int, colorFrame: Craft::ColorFrame )" },
  { dao_Craft_ParticleEffect_SetNumColorFrames, "SetNumColorFrames( self: Craft::ParticleEffect, number: int )" },
  { dao_Craft_ParticleEffect_SortColorFrames, "SortColorFrames( self: Craft::ParticleEffect )" },
  { dao_Craft_ParticleEffect_AddTextureTime, "AddTextureTime( self: Craft::ParticleEffect, uv: Craft::Rect, time: float )" },
  { dao_Craft_ParticleEffect_AddTextureFrame, "AddTextureFrame( self: Craft::ParticleEffect, textureFrame: Craft::TextureFrame )" },
  { dao_Craft_ParticleEffect_RemoveTextureFrame, "RemoveTextureFrame( self: Craft::ParticleEffect, index: int )" },
  { dao_Craft_ParticleEffect_SetTextureFrame, "SetTextureFrame( self: Craft::ParticleEffect, index: int, textureFrame: Craft::TextureFrame )" },
  { dao_Craft_ParticleEffect_SetNumTextureFrames, "SetNumTextureFrames( self: Craft::ParticleEffect, number: int )" },
  { dao_Craft_ParticleEffect_SortTextureFrames, "SortTextureFrames( self: Craft::ParticleEffect )" },
  { dao_Craft_ParticleEffect_GetMaterial, "GetMaterial( self: Craft::ParticleEffect )=>Craft::Material" },
  { dao_Craft_ParticleEffect_GetNumParticles, "GetNumParticles( self: Craft::ParticleEffect )=>int" },
  { dao_Craft_ParticleEffect_GetUpdateInvisible, "GetUpdateInvisible( self: Craft::ParticleEffect )=>bool" },
  { dao_Craft_ParticleEffect_IsRelative, "IsRelative( self: Craft::ParticleEffect )=>bool" },
  { dao_Craft_ParticleEffect_IsScaled, "IsScaled( self: Craft::ParticleEffect )=>bool" },
  { dao_Craft_ParticleEffect_IsSorted, "IsSorted( self: Craft::ParticleEffect )=>bool" },
  { dao_Craft_ParticleEffect_GetAnimationLodBias, "GetAnimationLodBias( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetEmitterType, "GetEmitterType( self: Craft::ParticleEffect )=>int" },
  { dao_Craft_ParticleEffect_GetEmitterSize, "GetEmitterSize( self: Craft::ParticleEffect )=>Craft::Vector3" },
  { dao_Craft_ParticleEffect_GetMinDirection, "GetMinDirection( self: Craft::ParticleEffect )=>Craft::Vector3" },
  { dao_Craft_ParticleEffect_GetMaxDirection, "GetMaxDirection( self: Craft::ParticleEffect )=>Craft::Vector3" },
  { dao_Craft_ParticleEffect_GetConstantForce, "GetConstantForce( self: Craft::ParticleEffect )=>Craft::Vector3" },
  { dao_Craft_ParticleEffect_GetDampingForce, "GetDampingForce( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetActiveTime, "GetActiveTime( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetInactiveTime, "GetInactiveTime( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMinEmissionRate, "GetMinEmissionRate( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMaxEmissionRate, "GetMaxEmissionRate( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMinParticleSize, "GetMinParticleSize( self: Craft::ParticleEffect )=>Craft::Vector2" },
  { dao_Craft_ParticleEffect_GetMaxParticleSize, "GetMaxParticleSize( self: Craft::ParticleEffect )=>Craft::Vector2" },
  { dao_Craft_ParticleEffect_GetMinTimeToLive, "GetMinTimeToLive( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMaxTimeToLive, "GetMaxTimeToLive( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMinVelocity, "GetMinVelocity( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMaxVelocity, "GetMaxVelocity( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMinRotation, "GetMinRotation( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMaxRotation, "GetMaxRotation( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMinRotationSpeed, "GetMinRotationSpeed( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetMaxRotationSpeed, "GetMaxRotationSpeed( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetSizeAdd, "GetSizeAdd( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetSizeMul, "GetSizeMul( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetNumColorFrames, "GetNumColorFrames( self: Craft::ParticleEffect )=>int" },
  { dao_Craft_ParticleEffect_GetColorFrame, "GetColorFrame( self: Craft::ParticleEffect, index: int )=>Craft::ColorFrame" },
  { dao_Craft_ParticleEffect_GetNumTextureFrames, "GetNumTextureFrames( self: Craft::ParticleEffect )=>int" },
  { dao_Craft_ParticleEffect_GetTextureFrame, "GetTextureFrame( self: Craft::ParticleEffect, index: int )=>Craft::TextureFrame" },
  { dao_Craft_ParticleEffect_GetRandomDirection, "GetRandomDirection( self: Craft::ParticleEffect )=>Craft::Vector3" },
  { dao_Craft_ParticleEffect_GetRandomSize, "GetRandomSize( self: Craft::ParticleEffect )=>Craft::Vector2" },
  { dao_Craft_ParticleEffect_GetRandomVelocity, "GetRandomVelocity( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetRandomTimeToLive, "GetRandomTimeToLive( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetRandomRotationSpeed, "GetRandomRotationSpeed( self: Craft::ParticleEffect )=>float" },
  { dao_Craft_ParticleEffect_GetRandomRotation, "GetRandomRotation( self: Craft::ParticleEffect )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_ParticleEffect_Delete( DaoValue *self )
{
	Craft::ParticleEffect *obj = (Craft::ParticleEffect*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ParticleEffect_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ParticleEffect *self = (DaoCxx_Craft_ParticleEffect*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ParticleEffect_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::ParticleEffect*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::ParticleEffect*)data);
}

static DaoTypeCore Craft_ParticleEffect_Core = 
{
  "Craft::ParticleEffect",
  sizeof(Craft::ParticleEffect),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_ParticleEffect_Craft_Resource,NULL },
  dao_Craft_ParticleEffect_Nums,
  dao_Craft_ParticleEffect_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ParticleEffect_Delete,
  Dao_Craft_ParticleEffect_HandleGC
};
DaoTypeCore *dao_Craft_ParticleEffect_Core = & Craft_ParticleEffect_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_ParticleEffect_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_ParticleEffect *_self = new DaoCxx_Craft_ParticleEffect( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::ParticleEffect::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_EndLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  bool _EndLoad = self->EndLoad(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _EndLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_Save( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _Save = self->Save( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Save );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Material_Core );

  self->SetMaterial( material );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumParticles( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUpdateInvisible( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetRelative( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetRelative( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetScaled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetScaled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetSorted( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSorted( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float lodBias = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAnimationLodBias( lodBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetEmitterType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::EmitterType type = (Craft::EmitterType) DaoValue_TryGetInteger( _p[1] );

  self->SetEmitterType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetEmitterSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Vector3* size = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetEmitterSize( *size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetMinDirection( *direction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Vector3* direction = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetMaxDirection( *direction );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetConstantForce( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Vector3* force = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetConstantForce( *force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetDampingForce( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float force = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetDampingForce( force );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetActiveTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetActiveTime( time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetInactiveTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetInactiveTime( time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float rate = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMinEmissionRate( rate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float rate = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMaxEmissionRate( rate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Vector2* size = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetMinParticleSize( *size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Vector2* size = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetMaxParticleSize( *size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMinTimeToLive( time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float time = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMaxTimeToLive( time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float velocity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMinVelocity( velocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float velocity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMaxVelocity( velocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMinRotation( rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float rotation = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMaxRotation( rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMinRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float speed = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMinRotationSpeed( speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetMaxRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float speed = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMaxRotationSpeed( speed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetSizeAdd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float sizeAdd = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSizeAdd( sizeAdd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetSizeMul( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  float sizeMul = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetSizeMul( sizeMul );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_AddColorTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Color* color = (Craft::Color*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Color_Core );
  const float time = (const float) DaoValue_TryGetFloat( _p[2] );

  self->AddColorTime( *color, time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_AddColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::ColorFrame* colorFrame = (Craft::ColorFrame*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ColorFrame_Core );

  self->AddColorFrame( *colorFrame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_RemoveColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveColorFrame( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::ColorFrame* colorFrame = (Craft::ColorFrame*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_ColorFrame_Core );

  self->SetColorFrame( index, *colorFrame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetNumColorFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int number = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumColorFrames( number );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SortColorFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  self->SortColorFrames(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_AddTextureTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::Rect* uv = (Craft::Rect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Rect_Core );
  const float time = (const float) DaoValue_TryGetFloat( _p[2] );

  self->AddTextureTime( *uv, time );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_AddTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  Craft::TextureFrame* textureFrame = (Craft::TextureFrame*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_TextureFrame_Core );

  self->AddTextureFrame( *textureFrame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_RemoveTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->RemoveTextureFrame( index );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  Craft::TextureFrame* textureFrame = (Craft::TextureFrame*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_TextureFrame_Core );

  self->SetTextureFrame( index, *textureFrame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SetNumTextureFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int number = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumTextureFrames( number );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_SortTextureFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  self->SortTextureFrames(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  Craft::Material* _GetMaterial = self->GetMaterial(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetMaterial, dao_Craft_Material_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  unsigned int _GetNumParticles = self->GetNumParticles(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumParticles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetUpdateInvisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  bool _GetUpdateInvisible = self->GetUpdateInvisible(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUpdateInvisible );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_IsRelative( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  bool _IsRelative = self->IsRelative(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsRelative );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_IsScaled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  bool _IsScaled = self->IsScaled(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsScaled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_IsSorted( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  bool _IsSorted = self->IsSorted(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSorted );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetAnimationLodBias( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetAnimationLodBias = self->GetAnimationLodBias(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAnimationLodBias );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetEmitterType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  Craft::EmitterType _GetEmitterType = self->GetEmitterType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetEmitterType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetEmitterSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  const Craft::Vector3& _GetEmitterSize = self->GetEmitterSize(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetEmitterSize, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  const Craft::Vector3& _GetMinDirection = self->GetMinDirection(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMinDirection, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  const Craft::Vector3& _GetMaxDirection = self->GetMaxDirection(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMaxDirection, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetConstantForce( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  const Craft::Vector3& _GetConstantForce = self->GetConstantForce(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetConstantForce, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetDampingForce( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetDampingForce = self->GetDampingForce(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetDampingForce );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetActiveTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetActiveTime = self->GetActiveTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetActiveTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetInactiveTime( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetInactiveTime = self->GetInactiveTime(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetInactiveTime );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMinEmissionRate = self->GetMinEmissionRate(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMinEmissionRate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxEmissionRate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMaxEmissionRate = self->GetMaxEmissionRate(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxEmissionRate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  const Craft::Vector2& _GetMinParticleSize = self->GetMinParticleSize(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMinParticleSize, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxParticleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  const Craft::Vector2& _GetMaxParticleSize = self->GetMaxParticleSize(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMaxParticleSize, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMinTimeToLive = self->GetMinTimeToLive(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMinTimeToLive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMaxTimeToLive = self->GetMaxTimeToLive(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxTimeToLive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMinVelocity = self->GetMinVelocity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMinVelocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMaxVelocity = self->GetMaxVelocity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxVelocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMinRotation = self->GetMinRotation(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMinRotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMaxRotation = self->GetMaxRotation(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxRotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMinRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMinRotationSpeed = self->GetMinRotationSpeed(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMinRotationSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetMaxRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetMaxRotationSpeed = self->GetMaxRotationSpeed(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxRotationSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetSizeAdd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetSizeAdd = self->GetSizeAdd(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSizeAdd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetSizeMul( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetSizeMul = self->GetSizeMul(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSizeMul );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetNumColorFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  unsigned int _GetNumColorFrames = self->GetNumColorFrames(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumColorFrames );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetColorFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  const Craft::ColorFrame* _GetColorFrame = self->GetColorFrame( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetColorFrame, dao_Craft_ColorFrame_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetNumTextureFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  unsigned int _GetNumTextureFrames = self->GetNumTextureFrames(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumTextureFrames );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetTextureFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  const Craft::TextureFrame* _GetTextureFrame = self->GetTextureFrame( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTextureFrame, dao_Craft_TextureFrame_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetRandomDirection( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  Craft::Vector3 _GetRandomDirection = self->GetRandomDirection(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetRandomDirection ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetRandomSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  Craft::Vector2 _GetRandomSize = self->GetRandomSize(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector2( _GetRandomSize ), dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetRandomVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetRandomVelocity = self->GetRandomVelocity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRandomVelocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetRandomTimeToLive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetRandomTimeToLive = self->GetRandomTimeToLive(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRandomTimeToLive );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetRandomRotationSpeed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetRandomRotationSpeed = self->GetRandomRotationSpeed(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRandomRotationSpeed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEffect_GetRandomRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEffect* self = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEffect_Core );

  float _GetRandomRotation = self->GetRandomRotation(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetRandomRotation );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Particle_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Particle_GETF_velocity_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_size_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_timer_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_SETF_timer_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_timeToLive_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_SETF_timeToLive_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_scale_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_SETF_scale_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_rotationSpeed_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_SETF_rotationSpeed_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_colorIndex_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_SETF_colorIndex_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_GETF_texIndex_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Particle_SETF_texIndex_( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Particle_Meths[] = 
{
  { dao_Craft_Particle_GETF_velocity_, ".velocity_ ( self: Craft::Particle )=>Craft::Vector3" },
  { dao_Craft_Particle_GETF_size_, ".size_ ( self: Craft::Particle )=>Craft::Vector2" },
  { dao_Craft_Particle_GETF_timer_, ".timer_ ( self: Craft::Particle )=>float" },
  { dao_Craft_Particle_SETF_timer_, ".timer_=( self: Craft::Particle, timer_: float )" },
  { dao_Craft_Particle_GETF_timeToLive_, ".timeToLive_ ( self: Craft::Particle )=>float" },
  { dao_Craft_Particle_SETF_timeToLive_, ".timeToLive_=( self: Craft::Particle, timeToLive_: float )" },
  { dao_Craft_Particle_GETF_scale_, ".scale_ ( self: Craft::Particle )=>float" },
  { dao_Craft_Particle_SETF_scale_, ".scale_=( self: Craft::Particle, scale_: float )" },
  { dao_Craft_Particle_GETF_rotationSpeed_, ".rotationSpeed_ ( self: Craft::Particle )=>float" },
  { dao_Craft_Particle_SETF_rotationSpeed_, ".rotationSpeed_=( self: Craft::Particle, rotationSpeed_: float )" },
  { dao_Craft_Particle_GETF_colorIndex_, ".colorIndex_ ( self: Craft::Particle )=>int" },
  { dao_Craft_Particle_SETF_colorIndex_, ".colorIndex_=( self: Craft::Particle, colorIndex_: int )" },
  { dao_Craft_Particle_GETF_texIndex_, ".texIndex_ ( self: Craft::Particle )=>int" },
  { dao_Craft_Particle_SETF_texIndex_, ".texIndex_=( self: Craft::Particle, texIndex_: int )" },
  { NULL, NULL }
};
static void Dao_Craft_Particle_Delete( DaoValue *self )
{
	delete (Craft::Particle*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_Particle_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::Particle* src = (Craft::Particle*) DaoValue_TryCastCdataTC( self, dao_Craft_Particle_Core );
	Craft::Particle* dest;
	if( target ){
		dest = (Craft::Particle*) DaoValue_TryCastCdataTC( target, dao_Craft_Particle_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::Particle( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_Particle_Core, dest );
}

static DaoTypeCore Craft_Particle_Core = 
{
  "Craft::Particle",
  sizeof(Craft::Particle),
  { NULL },
  { NULL },
  dao_Craft_Particle_Nums,
  dao_Craft_Particle_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_Particle_Copy,
  Dao_Craft_Particle_Delete,
  NULL
};
DaoTypeCore *dao_Craft_Particle_Core = & Craft_Particle_Core;
static void dao_Craft_Particle_GETF_velocity_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->velocity_, dao_Craft_Vector3_Core );
}
static void dao_Craft_Particle_GETF_size_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->size_, dao_Craft_Vector2_Core );
}
static void dao_Craft_Particle_GETF_timer_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->timer_ );
}
static void dao_Craft_Particle_SETF_timer_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  self->timer_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Particle_GETF_timeToLive_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->timeToLive_ );
}
static void dao_Craft_Particle_SETF_timeToLive_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  self->timeToLive_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Particle_GETF_scale_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->scale_ );
}
static void dao_Craft_Particle_SETF_scale_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  self->scale_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Particle_GETF_rotationSpeed_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->rotationSpeed_ );
}
static void dao_Craft_Particle_SETF_rotationSpeed_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  self->rotationSpeed_ = (float) DaoValue_TryGetFloat(_p[1]);
}
static void dao_Craft_Particle_GETF_colorIndex_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->colorIndex_ );
}
static void dao_Craft_Particle_SETF_colorIndex_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  self->colorIndex_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_Particle_GETF_texIndex_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->texIndex_ );
}
static void dao_Craft_Particle_SETF_texIndex_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Particle *self = (Craft::Particle*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_Particle_Core);
  self->texIndex_ = (unsigned int) DaoValue_TryGetInteger(_p[1]);
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_ParticleEmitter_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_ParticleEmitter_ParticleEmitter_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_SetEffect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_SetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_SetEmitting( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_SetSerializeParticles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_ResetEmissionTimer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_RemoveAllParticles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_ApplyEffect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_GetEffect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_GetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_IsEmitting( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_ParticleEmitter_GetSerializeParticles( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_ParticleEmitter_Meths[] = 
{
  { dao_Craft_ParticleEmitter_ParticleEmitter_dao_2, "ParticleEmitter(  )=>Craft::ParticleEmitter" },
  { dao_Craft_ParticleEmitter_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_ParticleEmitter_OnSetEnabled, "OnSetEnabled( self: Craft::ParticleEmitter )" },
  { dao_Craft_ParticleEmitter_Update, "Update( self: Craft::ParticleEmitter, frame: Craft::FrameInfo )" },
  { dao_Craft_ParticleEmitter_SetEffect, "SetEffect( self: Craft::ParticleEmitter, effect: Craft::ParticleEffect )" },
  { dao_Craft_ParticleEmitter_SetNumParticles, "SetNumParticles( self: Craft::ParticleEmitter, num: int )" },
  { dao_Craft_ParticleEmitter_SetEmitting, "SetEmitting( self: Craft::ParticleEmitter, enable: bool )" },
  { dao_Craft_ParticleEmitter_SetSerializeParticles, "SetSerializeParticles( self: Craft::ParticleEmitter, enable: bool )" },
  { dao_Craft_ParticleEmitter_ResetEmissionTimer, "ResetEmissionTimer( self: Craft::ParticleEmitter )" },
  { dao_Craft_ParticleEmitter_RemoveAllParticles, "RemoveAllParticles( self: Craft::ParticleEmitter )" },
  { dao_Craft_ParticleEmitter_Reset, "Reset( self: Craft::ParticleEmitter )" },
  { dao_Craft_ParticleEmitter_ApplyEffect, "ApplyEffect( self: Craft::ParticleEmitter )" },
  { dao_Craft_ParticleEmitter_GetEffect, "GetEffect( self: Craft::ParticleEmitter )=>Craft::ParticleEffect" },
  { dao_Craft_ParticleEmitter_GetNumParticles, "GetNumParticles( self: Craft::ParticleEmitter )=>int" },
  { dao_Craft_ParticleEmitter_IsEmitting, "IsEmitting( self: Craft::ParticleEmitter )=>bool" },
  { dao_Craft_ParticleEmitter_GetSerializeParticles, "GetSerializeParticles( self: Craft::ParticleEmitter )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_ParticleEmitter_Delete( DaoValue *self )
{
	Craft::ParticleEmitter *obj = (Craft::ParticleEmitter*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_ParticleEmitter_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_ParticleEmitter *self = (DaoCxx_Craft_ParticleEmitter*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_ParticleEmitter_Craft_BillboardSet( void *data, int down )
{
	if( down ) return static_cast<Craft::ParticleEmitter*>((Craft::BillboardSet*)data);
	return dynamic_cast<Craft::BillboardSet*>((Craft::ParticleEmitter*)data);
}

static DaoTypeCore Craft_ParticleEmitter_Core = 
{
  "Craft::ParticleEmitter",
  sizeof(Craft::ParticleEmitter),
  { dao_Craft_BillboardSet_Core, NULL },
  { dao_cast_Craft_ParticleEmitter_Craft_BillboardSet,NULL },
  dao_Craft_ParticleEmitter_Nums,
  dao_Craft_ParticleEmitter_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_ParticleEmitter_Delete,
  Dao_Craft_ParticleEmitter_HandleGC
};
DaoTypeCore *dao_Craft_ParticleEmitter_Core = & Craft_ParticleEmitter_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_ParticleEmitter_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_ParticleEmitter *_self = new DaoCxx_Craft_ParticleEmitter( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::ParticleEmitter::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->Update( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_SetEffect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );
  Craft::ParticleEffect* effect = (Craft::ParticleEffect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_ParticleEffect_Core );

  self->SetEffect( effect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_SetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );
  unsigned int num = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumParticles( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_SetEmitting( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetEmitting( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_SetSerializeParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSerializeParticles( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_ResetEmissionTimer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  self->ResetEmissionTimer(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_RemoveAllParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  self->RemoveAllParticles(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_ApplyEffect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  self->ApplyEffect(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_GetEffect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  Craft::ParticleEffect* _GetEffect = self->GetEffect(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEffect, dao_Craft_ParticleEffect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_GetNumParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  unsigned int _GetNumParticles = self->GetNumParticles(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumParticles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_IsEmitting( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  bool _IsEmitting = self->IsEmitting(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsEmitting );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_ParticleEmitter_GetSerializeParticles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::ParticleEmitter* self = (Craft::ParticleEmitter*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_ParticleEmitter_Core );

  bool _GetSerializeParticles = self->GetSerializeParticles(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSerializeParticles );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_TerrainPatch_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_TerrainPatch_TerrainPatch_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_UpdateGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetUpdateGeometryType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetNumOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_SetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_SetNeighbors( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_SetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_SetCoordinates( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_ResetLod( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetMaxLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetOcclusionGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetNorthPatch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetSouthPatch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetWestPatch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetEastPatch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetCoordinates( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TerrainPatch_GetLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_TerrainPatch_Meths[] = 
{
  { dao_Craft_TerrainPatch_TerrainPatch_dao_2, "TerrainPatch(  )=>Craft::TerrainPatch" },
  { dao_Craft_TerrainPatch_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_TerrainPatch_UpdateBatches, "UpdateBatches( self: Craft::TerrainPatch, frame: Craft::FrameInfo )" },
  { dao_Craft_TerrainPatch_UpdateGeometry, "UpdateGeometry( self: Craft::TerrainPatch, frame: Craft::FrameInfo )" },
  { dao_Craft_TerrainPatch_GetUpdateGeometryType, "GetUpdateGeometryType( self: Craft::TerrainPatch )=>int" },
  { dao_Craft_TerrainPatch_GetLodGeometry, "GetLodGeometry( self: Craft::TerrainPatch, batchIndex: int, level: int )=>Craft::Geometry" },
  { dao_Craft_TerrainPatch_GetNumOccluderTriangles, "GetNumOccluderTriangles( self: Craft::TerrainPatch )=>int" },
  { dao_Craft_TerrainPatch_SetOwner, "SetOwner( self: Craft::TerrainPatch, terrain: Craft::Terrain )" },
  { dao_Craft_TerrainPatch_SetNeighbors, "SetNeighbors( self: Craft::TerrainPatch, north: Craft::TerrainPatch, south: Craft::TerrainPatch, west: Craft::TerrainPatch, east: Craft::TerrainPatch )" },
  { dao_Craft_TerrainPatch_SetMaterial, "SetMaterial( self: Craft::TerrainPatch, material: Craft::Material )" },
  { dao_Craft_TerrainPatch_SetBoundingBox, "SetBoundingBox( self: Craft::TerrainPatch, box: Craft::BoundingBox )" },
  { dao_Craft_TerrainPatch_SetCoordinates, "SetCoordinates( self: Craft::TerrainPatch, coordinates: Craft::IntVector2 )" },
  { dao_Craft_TerrainPatch_ResetLod, "ResetLod( self: Craft::TerrainPatch )" },
  { dao_Craft_TerrainPatch_GetGeometry, "GetGeometry( self: Craft::TerrainPatch )=>Craft::Geometry" },
  { dao_Craft_TerrainPatch_GetMaxLodGeometry, "GetMaxLodGeometry( self: Craft::TerrainPatch )=>Craft::Geometry" },
  { dao_Craft_TerrainPatch_GetOcclusionGeometry, "GetOcclusionGeometry( self: Craft::TerrainPatch )=>Craft::Geometry" },
  { dao_Craft_TerrainPatch_GetOwner, "GetOwner( self: Craft::TerrainPatch )=>Craft::Terrain" },
  { dao_Craft_TerrainPatch_GetNorthPatch, "GetNorthPatch( self: Craft::TerrainPatch )=>Craft::TerrainPatch" },
  { dao_Craft_TerrainPatch_GetSouthPatch, "GetSouthPatch( self: Craft::TerrainPatch )=>Craft::TerrainPatch" },
  { dao_Craft_TerrainPatch_GetWestPatch, "GetWestPatch( self: Craft::TerrainPatch )=>Craft::TerrainPatch" },
  { dao_Craft_TerrainPatch_GetEastPatch, "GetEastPatch( self: Craft::TerrainPatch )=>Craft::TerrainPatch" },
  { dao_Craft_TerrainPatch_GetCoordinates, "GetCoordinates( self: Craft::TerrainPatch )=>Craft::IntVector2" },
  { dao_Craft_TerrainPatch_GetLodLevel, "GetLodLevel( self: Craft::TerrainPatch )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_TerrainPatch_Delete( DaoValue *self )
{
	Craft::TerrainPatch *obj = (Craft::TerrainPatch*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_TerrainPatch_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_TerrainPatch *self = (DaoCxx_Craft_TerrainPatch*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_TerrainPatch_Craft_Drawable( void *data, int down )
{
	if( down ) return static_cast<Craft::TerrainPatch*>((Craft::Drawable*)data);
	return dynamic_cast<Craft::Drawable*>((Craft::TerrainPatch*)data);
}

static DaoTypeCore Craft_TerrainPatch_Core = 
{
  "Craft::TerrainPatch",
  sizeof(Craft::TerrainPatch),
  { dao_Craft_Drawable_Core, NULL },
  { dao_cast_Craft_TerrainPatch_Craft_Drawable,NULL },
  dao_Craft_TerrainPatch_Nums,
  dao_Craft_TerrainPatch_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_TerrainPatch_Delete,
  Dao_Craft_TerrainPatch_HandleGC
};
DaoTypeCore *dao_Craft_TerrainPatch_Core = & Craft_TerrainPatch_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_TerrainPatch_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_TerrainPatch *_self = new DaoCxx_Craft_TerrainPatch( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::TerrainPatch::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_UpdateBatches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->UpdateBatches( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_UpdateGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::FrameInfo* frame = (Craft::FrameInfo*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_FrameInfo_Core );

  self->UpdateGeometry( *frame );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetUpdateGeometryType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::UpdateGeometryType _GetUpdateGeometryType = self->GetUpdateGeometryType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetUpdateGeometryType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  unsigned int batchIndex = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int level = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  Craft::Geometry* _GetLodGeometry = self->GetLodGeometry( batchIndex, level );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetLodGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetNumOccluderTriangles( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  unsigned int _GetNumOccluderTriangles = self->GetNumOccluderTriangles(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumOccluderTriangles );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_SetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::Terrain* terrain = (Craft::Terrain*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Terrain_Core );

  self->SetOwner( terrain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_SetNeighbors( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::TerrainPatch* north = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_TerrainPatch_Core );
  Craft::TerrainPatch* south = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_TerrainPatch_Core );
  Craft::TerrainPatch* west = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_TerrainPatch_Core );
  Craft::TerrainPatch* east = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[4], dao_Craft_TerrainPatch_Core );

  self->SetNeighbors( north, south, west, east );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_SetMaterial( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::Material* material = (Craft::Material*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Material_Core );

  self->SetMaterial( material );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_SetBoundingBox( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::BoundingBox* box = (Craft::BoundingBox*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_BoundingBox_Core );

  self->SetBoundingBox( *box );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_SetCoordinates( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );
  Craft::IntVector2* coordinates = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );

  self->SetCoordinates( *coordinates );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_ResetLod( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  self->ResetLod(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::Geometry* _GetGeometry = self->GetGeometry(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetMaxLodGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::Geometry* _GetMaxLodGeometry = self->GetMaxLodGeometry(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetMaxLodGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetOcclusionGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::Geometry* _GetOcclusionGeometry = self->GetOcclusionGeometry(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOcclusionGeometry, dao_Craft_Geometry_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetOwner( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::Terrain* _GetOwner = self->GetOwner(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOwner, dao_Craft_Terrain_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetNorthPatch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::TerrainPatch* _GetNorthPatch = self->GetNorthPatch(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetNorthPatch, dao_Craft_TerrainPatch_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetSouthPatch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::TerrainPatch* _GetSouthPatch = self->GetSouthPatch(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSouthPatch, dao_Craft_TerrainPatch_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetWestPatch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::TerrainPatch* _GetWestPatch = self->GetWestPatch(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetWestPatch, dao_Craft_TerrainPatch_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetEastPatch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  Craft::TerrainPatch* _GetEastPatch = self->GetEastPatch(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetEastPatch, dao_Craft_TerrainPatch_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetCoordinates( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  const Craft::IntVector2& _GetCoordinates = self->GetCoordinates(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetCoordinates, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_TerrainPatch_GetLodLevel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TerrainPatch* self = (Craft::TerrainPatch*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_TerrainPatch_Core );

  unsigned int _GetLodLevel = self->GetLodLevel(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLodLevel );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Sound_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Sound_Sound_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_LoadRaw( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_LoadWav( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_LoadOggVorbis( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_SetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_SetFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_SetLooped( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_SetLoop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetStart( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetRepeat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetEnd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetDataSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetSampleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_GetIntFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_IsLooped( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_IsSixteenBit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_IsStereo( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Sound_FixInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Sound_Meths[] = 
{
  { dao_Craft_Sound_Sound_dao_2, "Sound( context: Craft::Context )=>Craft::Sound" },
  { dao_Craft_Sound_BeginLoad, "BeginLoad( self: Craft::Sound, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Sound_LoadRaw, "LoadRaw( self: Craft::Sound, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Sound_LoadWav, "LoadWav( self: Craft::Sound, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Sound_LoadOggVorbis, "LoadOggVorbis( self: Craft::Sound, source: Craft::Deserializer )=>bool" },
  { dao_Craft_Sound_SetSize, "SetSize( self: Craft::Sound, dataSize: int )" },
  { dao_Craft_Sound_SetData, "SetData( self: Craft::Sound, data: cdata, dataSize: int )" },
  { dao_Craft_Sound_SetFormat, "SetFormat( self: Craft::Sound, frequency: int, sixteenBit: bool, stereo: bool )" },
  { dao_Craft_Sound_SetLooped, "SetLooped( self: Craft::Sound, enable: bool )" },
  { dao_Craft_Sound_SetLoop, "SetLoop( self: Craft::Sound, repeatOffset: int, endOffset: int )" },
  { dao_Craft_Sound_GetStart, "GetStart( self: Craft::Sound )=>string" },
  { dao_Craft_Sound_GetRepeat, "GetRepeat( self: Craft::Sound )=>string" },
  { dao_Craft_Sound_GetEnd, "GetEnd( self: Craft::Sound )=>string" },
  { dao_Craft_Sound_GetLength, "GetLength( self: Craft::Sound )=>float" },
  { dao_Craft_Sound_GetDataSize, "GetDataSize( self: Craft::Sound )=>int" },
  { dao_Craft_Sound_GetSampleSize, "GetSampleSize( self: Craft::Sound )=>int" },
  { dao_Craft_Sound_GetFrequency, "GetFrequency( self: Craft::Sound )=>float" },
  { dao_Craft_Sound_GetIntFrequency, "GetIntFrequency( self: Craft::Sound )=>int" },
  { dao_Craft_Sound_IsLooped, "IsLooped( self: Craft::Sound )=>bool" },
  { dao_Craft_Sound_IsSixteenBit, "IsSixteenBit( self: Craft::Sound )=>bool" },
  { dao_Craft_Sound_IsStereo, "IsStereo( self: Craft::Sound )=>bool" },
  { dao_Craft_Sound_IsCompressed, "IsCompressed( self: Craft::Sound )=>bool" },
  { dao_Craft_Sound_FixInterpolation, "FixInterpolation( self: Craft::Sound )" },
  { NULL, NULL }
};
static void Dao_Craft_Sound_Delete( DaoValue *self )
{
	Craft::Sound *obj = (Craft::Sound*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Sound_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Sound *self = (DaoCxx_Craft_Sound*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Sound_Craft_Resource( void *data, int down )
{
	if( down ) return static_cast<Craft::Sound*>((Craft::Resource*)data);
	return dynamic_cast<Craft::Resource*>((Craft::Sound*)data);
}

static DaoTypeCore Craft_Sound_Core = 
{
  "Craft::Sound",
  sizeof(Craft::Sound),
  { dao_Craft_Resource_Core, NULL },
  { dao_cast_Craft_Sound_Craft_Resource,NULL },
  dao_Craft_Sound_Nums,
  dao_Craft_Sound_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Sound_Delete,
  Dao_Craft_Sound_HandleGC
};
DaoTypeCore *dao_Craft_Sound_Core = & Craft_Sound_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_Sound_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_Sound *_self = new DaoCxx_Craft_Sound( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_BeginLoad( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _BeginLoad = self->BeginLoad( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _BeginLoad );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_LoadRaw( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _LoadRaw = self->LoadRaw( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadRaw );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_LoadWav( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _LoadWav = self->LoadWav( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadWav );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_LoadOggVorbis( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  bool _LoadOggVorbis = self->LoadOggVorbis( *source );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _LoadOggVorbis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  unsigned int dataSize = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetSize( dataSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_SetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  const void* data = (const void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int dataSize = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->SetData( data, dataSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_SetFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  unsigned int frequency = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  bool sixteenBit = (bool) DaoValue_TryGetBoolean( _p[2] );
  bool stereo = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->SetFormat( frequency, sixteenBit, stereo );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_SetLooped( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetLooped( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_SetLoop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );
  unsigned int repeatOffset = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int endOffset = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->SetLoop( repeatOffset, endOffset );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetStart( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  signed char* _GetStart = self->GetStart(  );
  DaoProcess_PutChars( _proc, (char*) _GetStart );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetRepeat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  signed char* _GetRepeat = self->GetRepeat(  );
  DaoProcess_PutChars( _proc, (char*) _GetRepeat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetEnd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  signed char* _GetEnd = self->GetEnd(  );
  DaoProcess_PutChars( _proc, (char*) _GetEnd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetLength( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  float _GetLength = self->GetLength(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetLength );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetDataSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  unsigned int _GetDataSize = self->GetDataSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetDataSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetSampleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  unsigned int _GetSampleSize = self->GetSampleSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSampleSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  float _GetFrequency = self->GetFrequency(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFrequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_GetIntFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  unsigned int _GetIntFrequency = self->GetIntFrequency(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetIntFrequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_IsLooped( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  bool _IsLooped = self->IsLooped(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsLooped );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_IsSixteenBit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  bool _IsSixteenBit = self->IsSixteenBit(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSixteenBit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_IsStereo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  bool _IsStereo = self->IsStereo(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsStereo );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_IsCompressed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  bool _IsCompressed = self->IsCompressed(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsCompressed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Sound_FixInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Sound* self = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Sound_Core );

  self->FixInterpolation(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_SoundSource_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_SoundSource_SoundSource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Play( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Play_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Play_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Play_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Play_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Stop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetSoundType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetPanning( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetAutoRemoveMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetPlayPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetSound( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetSoundType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetTimePosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetPanning( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetAutoRemoveMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_IsPlaying( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_Mix( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_UpdateMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_SetPlayingAttr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource_GetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_SoundSource_Meths[] = 
{
  { dao_Craft_SoundSource_SoundSource_dao_2, "SoundSource( context: Craft::Context )=>Craft::SoundSource" },
  { dao_Craft_SoundSource_Play, "Play( self: Craft::SoundSource, sound: Craft::Sound )" },
  { dao_Craft_SoundSource_Play_dao_2, "Play( self: Craft::SoundSource, sound: Craft::Sound, frequency: float )" },
  { dao_Craft_SoundSource_Play_dao_3, "Play( self: Craft::SoundSource, sound: Craft::Sound, frequency: float, gain: float )" },
  { dao_Craft_SoundSource_Play_dao_4, "Play( self: Craft::SoundSource, sound: Craft::Sound, frequency: float, gain: float, panning: float )" },
  { dao_Craft_SoundSource_Play_dao_5, "Play( self: Craft::SoundSource, stream: Craft::SoundStream )" },
  { dao_Craft_SoundSource_Stop, "Stop( self: Craft::SoundSource )" },
  { dao_Craft_SoundSource_SetSoundType, "SetSoundType( self: Craft::SoundSource, type: string )" },
  { dao_Craft_SoundSource_SetFrequency, "SetFrequency( self: Craft::SoundSource, frequency: float )" },
  { dao_Craft_SoundSource_SetGain, "SetGain( self: Craft::SoundSource, gain: float )" },
  { dao_Craft_SoundSource_SetAttenuation, "SetAttenuation( self: Craft::SoundSource, attenuation: float )" },
  { dao_Craft_SoundSource_SetPanning, "SetPanning( self: Craft::SoundSource, panning: float )" },
  { dao_Craft_SoundSource_SetAutoRemoveMode, "SetAutoRemoveMode( self: Craft::SoundSource, mode: int )" },
  { dao_Craft_SoundSource_SetPlayPosition, "SetPlayPosition( self: Craft::SoundSource, pos: string )" },
  { dao_Craft_SoundSource_GetSound, "GetSound( self: Craft::SoundSource )=>Craft::Sound" },
  { dao_Craft_SoundSource_GetSoundType, "GetSoundType( self: Craft::SoundSource )=>string" },
  { dao_Craft_SoundSource_GetTimePosition, "GetTimePosition( self: Craft::SoundSource )=>float" },
  { dao_Craft_SoundSource_GetFrequency, "GetFrequency( self: Craft::SoundSource )=>float" },
  { dao_Craft_SoundSource_GetGain, "GetGain( self: Craft::SoundSource )=>float" },
  { dao_Craft_SoundSource_GetAttenuation, "GetAttenuation( self: Craft::SoundSource )=>float" },
  { dao_Craft_SoundSource_GetPanning, "GetPanning( self: Craft::SoundSource )=>float" },
  { dao_Craft_SoundSource_GetAutoRemoveMode, "GetAutoRemoveMode( self: Craft::SoundSource )=>int" },
  { dao_Craft_SoundSource_IsPlaying, "IsPlaying( self: Craft::SoundSource )=>bool" },
  { dao_Craft_SoundSource_Update, "Update( self: Craft::SoundSource, timeStep: float )" },
  { dao_Craft_SoundSource_Mix, "Mix( self: Craft::SoundSource, dest: int, samples: int, mixRate: int, stereo: bool, interpolation: bool )=>int" },
  { dao_Craft_SoundSource_UpdateMasterGain, "UpdateMasterGain( self: Craft::SoundSource )" },
  { dao_Craft_SoundSource_SetPositionAttr, "SetPositionAttr( self: Craft::SoundSource, value: int )" },
  { dao_Craft_SoundSource_SetPlayingAttr, "SetPlayingAttr( self: Craft::SoundSource, value: bool )" },
  { dao_Craft_SoundSource_GetPositionAttr, "GetPositionAttr( self: Craft::SoundSource )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_SoundSource_Delete( DaoValue *self )
{
	Craft::SoundSource *obj = (Craft::SoundSource*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_SoundSource_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_SoundSource *self = (DaoCxx_Craft_SoundSource*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_SoundSource_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::SoundSource*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::SoundSource*)data);
}

static DaoTypeCore Craft_SoundSource_Core = 
{
  "Craft::SoundSource",
  sizeof(Craft::SoundSource),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_SoundSource_Craft_Component,NULL },
  dao_Craft_SoundSource_Nums,
  dao_Craft_SoundSource_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_SoundSource_Delete,
  Dao_Craft_SoundSource_HandleGC
};
DaoTypeCore *dao_Craft_SoundSource_Core = & Craft_SoundSource_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SoundSource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_SoundSource *_self = new DaoCxx_Craft_SoundSource( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Play( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  Craft::Sound* sound = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sound_Core );

  self->Play( sound );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Play_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  Craft::Sound* sound = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sound_Core );
  float frequency = (float) DaoValue_TryGetFloat( _p[2] );

  self->Play( sound, frequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Play_dao_3( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  Craft::Sound* sound = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sound_Core );
  float frequency = (float) DaoValue_TryGetFloat( _p[2] );
  float gain = (float) DaoValue_TryGetFloat( _p[3] );

  self->Play( sound, frequency, gain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Play_dao_4( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  Craft::Sound* sound = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sound_Core );
  float frequency = (float) DaoValue_TryGetFloat( _p[2] );
  float gain = (float) DaoValue_TryGetFloat( _p[3] );
  float panning = (float) DaoValue_TryGetFloat( _p[4] );

  self->Play( sound, frequency, gain, panning );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Play_dao_5( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  Craft::SoundStream* stream = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_SoundStream_Core );

  self->Play( stream );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Stop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  self->Stop(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetSoundType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );

  self->SetSoundType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  float frequency = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFrequency( frequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  float gain = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetGain( gain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  float attenuation = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAttenuation( attenuation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetPanning( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  float panning = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetPanning( panning );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetAutoRemoveMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  Craft::AutoRemoveMode mode = (Craft::AutoRemoveMode) DaoValue_TryGetInteger( _p[1] );

  self->SetAutoRemoveMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetPlayPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  signed char* pos = (signed char*) DaoValue_TryGetChars( _p[1] );

  self->SetPlayPosition( pos );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetSound( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  Craft::Sound* _GetSound = self->GetSound(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetSound, dao_Craft_Sound_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetSoundType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  Craft::String _GetSoundType = self->GetSoundType(  );
  DaoProcess_PutBytes( _proc, (char*) _GetSoundType.CString(), _GetSoundType.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetTimePosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  float _GetTimePosition = self->GetTimePosition(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetTimePosition );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  float _GetFrequency = self->GetFrequency(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFrequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  float _GetGain = self->GetGain(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetGain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  float _GetAttenuation = self->GetAttenuation(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAttenuation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetPanning( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  float _GetPanning = self->GetPanning(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetPanning );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetAutoRemoveMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  Craft::AutoRemoveMode _GetAutoRemoveMode = self->GetAutoRemoveMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetAutoRemoveMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_IsPlaying( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  bool _IsPlaying = self->IsPlaying(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsPlaying );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_Mix( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  int dest = (int) DaoValue_TryGetInteger( _p[1] );
  unsigned int samples = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  int mixRate = (int) DaoValue_TryGetInteger( _p[3] );
  bool stereo = (bool) DaoValue_TryGetBoolean( _p[4] );
  bool interpolation = (bool) DaoValue_TryGetBoolean( _p[5] );

  self->Mix( &dest, samples, mixRate, stereo, interpolation );
  DaoProcess_PutInteger( _proc, (dao_integer) dest );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_UpdateMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  self->UpdateMasterGain(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  int value = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetPositionAttr( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_SetPlayingAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetPlayingAttr( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource_GetPositionAttr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource* self = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource_Core );

  int _GetPositionAttr = self->GetPositionAttr(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPositionAttr );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_SoundListener_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_SoundListener_SoundListener_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_SoundListener_Meths[] = 
{
  { dao_Craft_SoundListener_SoundListener_dao_2, "SoundListener( context: Craft::Context )=>Craft::SoundListener" },
  { NULL, NULL }
};
static void Dao_Craft_SoundListener_Delete( DaoValue *self )
{
	Craft::SoundListener *obj = (Craft::SoundListener*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_SoundListener_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_SoundListener *self = (DaoCxx_Craft_SoundListener*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_SoundListener_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::SoundListener*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::SoundListener*)data);
}

static DaoTypeCore Craft_SoundListener_Core = 
{
  "Craft::SoundListener",
  sizeof(Craft::SoundListener),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_SoundListener_Craft_Component,NULL },
  dao_Craft_SoundListener_Nums,
  dao_Craft_SoundListener_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_SoundListener_Delete,
  Dao_Craft_SoundListener_HandleGC
};
DaoTypeCore *dao_Craft_SoundListener_Core = & Craft_SoundListener_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundListener_SoundListener_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_SoundListener *_self = new DaoCxx_Craft_SoundListener( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Audio_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Audio_Audio_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_SetMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_Play( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_Stop( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_SetMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_PauseSoundType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_ResumeSoundType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_ResumeAll( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_SetListener( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_StopSound( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetSampleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetMixRate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_IsStereo( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_IsPlaying( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_IsInitialized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_IsSoundTypePaused( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetListener( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_HasMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_AddSoundSource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_RemoveSoundSource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetMutex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_GetSoundSourceMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Audio_MixOutput( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Audio_Meths[] = 
{
  { dao_Craft_Audio_Audio_dao_2, "Audio( context: Craft::Context )=>Craft::Audio" },
  { dao_Craft_Audio_SetMode, "SetMode( self: Craft::Audio, bufferLengthMSec: int, mixRate: int, stereo: bool, interpolation: bool =true )=>bool" },
  { dao_Craft_Audio_Update, "Update( self: Craft::Audio, timeStep: float )" },
  { dao_Craft_Audio_Play, "Play( self: Craft::Audio )=>bool" },
  { dao_Craft_Audio_Stop, "Stop( self: Craft::Audio )" },
  { dao_Craft_Audio_SetMasterGain, "SetMasterGain( self: Craft::Audio, type: string, gain: float )" },
  { dao_Craft_Audio_PauseSoundType, "PauseSoundType( self: Craft::Audio, type: string )" },
  { dao_Craft_Audio_ResumeSoundType, "ResumeSoundType( self: Craft::Audio, type: string )" },
  { dao_Craft_Audio_ResumeAll, "ResumeAll( self: Craft::Audio )" },
  { dao_Craft_Audio_SetListener, "SetListener( self: Craft::Audio, listener: Craft::SoundListener )" },
  { dao_Craft_Audio_StopSound, "StopSound( self: Craft::Audio, sound: Craft::Sound )" },
  { dao_Craft_Audio_GetSampleSize, "GetSampleSize( self: Craft::Audio )=>int" },
  { dao_Craft_Audio_GetMixRate, "GetMixRate( self: Craft::Audio )=>int" },
  { dao_Craft_Audio_GetInterpolation, "GetInterpolation( self: Craft::Audio )=>bool" },
  { dao_Craft_Audio_IsStereo, "IsStereo( self: Craft::Audio )=>bool" },
  { dao_Craft_Audio_IsPlaying, "IsPlaying( self: Craft::Audio )=>bool" },
  { dao_Craft_Audio_IsInitialized, "IsInitialized( self: Craft::Audio )=>bool" },
  { dao_Craft_Audio_GetMasterGain, "GetMasterGain( self: Craft::Audio, type: string )=>float" },
  { dao_Craft_Audio_IsSoundTypePaused, "IsSoundTypePaused( self: Craft::Audio, type: string )=>bool" },
  { dao_Craft_Audio_GetListener, "GetListener( self: Craft::Audio )=>Craft::SoundListener" },
  { dao_Craft_Audio_HasMasterGain, "HasMasterGain( self: Craft::Audio, type: string )=>bool" },
  { dao_Craft_Audio_AddSoundSource, "AddSoundSource( self: Craft::Audio, soundSource: Craft::SoundSource )" },
  { dao_Craft_Audio_RemoveSoundSource, "RemoveSoundSource( self: Craft::Audio, soundSource: Craft::SoundSource )" },
  { dao_Craft_Audio_GetMutex, "GetMutex( self: Craft::Audio )=>Craft::Mutex" },
  { dao_Craft_Audio_GetSoundSourceMasterGain, "GetSoundSourceMasterGain( self: Craft::Audio, typeHash: Craft::StringHash )=>float" },
  { dao_Craft_Audio_MixOutput, "MixOutput( self: Craft::Audio, dest: cdata, samples: int )" },
  { NULL, NULL }
};
static void Dao_Craft_Audio_Delete( DaoValue *self )
{
	Craft::Audio *obj = (Craft::Audio*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Audio_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Audio *self = (DaoCxx_Craft_Audio*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Audio_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Audio*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Audio*)data);
}

static DaoTypeCore Craft_Audio_Core = 
{
  "Craft::Audio",
  sizeof(Craft::Audio),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Audio_Craft_Object,NULL },
  dao_Craft_Audio_Nums,
  dao_Craft_Audio_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Audio_Delete,
  Dao_Craft_Audio_HandleGC
};
DaoTypeCore *dao_Craft_Audio_Core = & Craft_Audio_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_Audio_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_Audio *_self = new DaoCxx_Craft_Audio( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_SetMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  int bufferLengthMSec = (int) DaoValue_TryGetInteger( _p[1] );
  int mixRate = (int) DaoValue_TryGetInteger( _p[2] );
  bool stereo = (bool) DaoValue_TryGetBoolean( _p[3] );
  bool interpolation = (bool) DaoValue_TryGetBoolean( _p[4] );

  bool _SetMode = self->SetMode( bufferLengthMSec, mixRate, stereo, interpolation );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SetMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_Play( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  bool _Play = self->Play(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Play );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_Stop( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  self->Stop(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_SetMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );
  float gain = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetMasterGain( type, gain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_PauseSoundType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );

  self->PauseSoundType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_ResumeSoundType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );

  self->ResumeSoundType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_ResumeAll( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  self->ResumeAll(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_SetListener( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  Craft::SoundListener* listener = (Craft::SoundListener*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_SoundListener_Core );

  self->SetListener( listener );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_StopSound( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  Craft::Sound* sound = (Craft::Sound*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Sound_Core );

  self->StopSound( sound );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetSampleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  unsigned int _GetSampleSize = self->GetSampleSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSampleSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetMixRate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  int _GetMixRate = self->GetMixRate(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMixRate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  bool _GetInterpolation = self->GetInterpolation(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetInterpolation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_IsStereo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  bool _IsStereo = self->IsStereo(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsStereo );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_IsPlaying( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  bool _IsPlaying = self->IsPlaying(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsPlaying );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_IsInitialized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  bool _IsInitialized = self->IsInitialized(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInitialized );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );

  float _GetMasterGain = self->GetMasterGain( type );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMasterGain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_IsSoundTypePaused( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );

  bool _IsSoundTypePaused = self->IsSoundTypePaused( type );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSoundTypePaused );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetListener( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  Craft::SoundListener* _GetListener = self->GetListener(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetListener, dao_Craft_SoundListener_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_HasMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  DString *__str_type = DaoValue_TryGetString( _p[1] );
  Craft::String type( DString_GetData( __str_type ), DString_Size( __str_type ) );

  bool _HasMasterGain = self->HasMasterGain( type );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasMasterGain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_AddSoundSource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  Craft::SoundSource* soundSource = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_SoundSource_Core );

  self->AddSoundSource( soundSource );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_RemoveSoundSource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  Craft::SoundSource* soundSource = (Craft::SoundSource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_SoundSource_Core );

  self->RemoveSoundSource( soundSource );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetMutex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );

  Craft::Mutex& _GetMutex = self->GetMutex(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMutex, dao_Craft_Mutex_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_GetSoundSourceMasterGain( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  Craft::StringHash* typeHash = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );

  float _GetSoundSourceMasterGain = self->GetSoundSourceMasterGain( *typeHash );
  DaoProcess_PutFloat( _proc, (dao_float) _GetSoundSourceMasterGain );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Audio_MixOutput( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Audio* self = (Craft::Audio*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Audio_Core );
  void* dest = (void*) DaoValue_TryGetCdata( _p[1] );
  unsigned int samples = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  self->MixOutput( dest, samples );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_SoundStream_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_SoundStream_SoundStream_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_GetData( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_SetFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_SetStopAtEnd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_GetSampleSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_GetIntFrequency( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_GetStopAtEnd( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_IsSixteenBit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundStream_IsStereo( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_SoundStream_Meths[] = 
{
  { dao_Craft_SoundStream_SoundStream_dao_2, "SoundStream(  )=>Craft::SoundStream" },
  { dao_Craft_SoundStream_GetData, "GetData( self: Craft::SoundStream, dest: string, numBytes: int )=>int" },
  { dao_Craft_SoundStream_SetFormat, "SetFormat( self: Craft::SoundStream, frequency: int, sixteenBit: bool, stereo: bool )" },
  { dao_Craft_SoundStream_SetStopAtEnd, "SetStopAtEnd( self: Craft::SoundStream, enable: bool )" },
  { dao_Craft_SoundStream_GetSampleSize, "GetSampleSize( self: Craft::SoundStream )=>int" },
  { dao_Craft_SoundStream_GetFrequency, "GetFrequency( self: Craft::SoundStream )=>float" },
  { dao_Craft_SoundStream_GetIntFrequency, "GetIntFrequency( self: Craft::SoundStream )=>int" },
  { dao_Craft_SoundStream_GetStopAtEnd, "GetStopAtEnd( self: Craft::SoundStream )=>bool" },
  { dao_Craft_SoundStream_IsSixteenBit, "IsSixteenBit( self: Craft::SoundStream )=>bool" },
  { dao_Craft_SoundStream_IsStereo, "IsStereo( self: Craft::SoundStream )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_SoundStream_Delete( DaoValue *self )
{
	Craft::SoundStream *obj = (Craft::SoundStream*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_SoundStream_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_SoundStream *self = (DaoCxx_Craft_SoundStream*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_SoundStream_Craft_RefCounted( void *data, int down )
{
	if( down ) return static_cast<Craft::SoundStream*>((Craft::RefCounted*)data);
	return dynamic_cast<Craft::RefCounted*>((Craft::SoundStream*)data);
}

static DaoTypeCore Craft_SoundStream_Core = 
{
  "Craft::SoundStream",
  sizeof(Craft::SoundStream),
  { dao_Craft_RefCounted_Core, NULL },
  { dao_cast_Craft_SoundStream_Craft_RefCounted,NULL },
  dao_Craft_SoundStream_Nums,
  dao_Craft_SoundStream_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_SoundStream_Delete,
  Dao_Craft_SoundStream_HandleGC
};
DaoTypeCore *dao_Craft_SoundStream_Core = & Craft_SoundStream_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_SoundStream_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  DaoCxx_Craft_SoundStream *_self = new DaoCxx_Craft_SoundStream(  );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_GetData( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );
  signed char* dest = (signed char*) DaoValue_TryGetChars( _p[1] );
  unsigned int numBytes = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  unsigned int _GetData = self->GetData( dest, numBytes );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetData );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_SetFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );
  unsigned int frequency = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  bool sixteenBit = (bool) DaoValue_TryGetBoolean( _p[2] );
  bool stereo = (bool) DaoValue_TryGetBoolean( _p[3] );

  self->SetFormat( frequency, sixteenBit, stereo );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_SetStopAtEnd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetStopAtEnd( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_GetSampleSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );

  unsigned int _GetSampleSize = self->GetSampleSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSampleSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_GetFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );

  float _GetFrequency = self->GetFrequency(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFrequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_GetIntFrequency( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );

  unsigned int _GetIntFrequency = self->GetIntFrequency(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetIntFrequency );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_GetStopAtEnd( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );

  bool _GetStopAtEnd = self->GetStopAtEnd(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetStopAtEnd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_IsSixteenBit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );

  bool _IsSixteenBit = self->IsSixteenBit(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsSixteenBit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundStream_IsStereo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundStream* self = (Craft::SoundStream*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundStream_Core );

  bool _IsStereo = self->IsStereo(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsStereo );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_SoundSource3D_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_SoundSource3D_SoundSource3D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetDistanceAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetAngleAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetNearDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetFarDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetInnerAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetOuterAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_SetRolloffFactor( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_CalculateAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_GetNearDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_GetFarDistance( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_GetInnerAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_GetOuterAngle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_SoundSource3D_RollAngleoffFactor( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_SoundSource3D_Meths[] = 
{
  { dao_Craft_SoundSource3D_SoundSource3D_dao_2, "SoundSource3D( context: Craft::Context )=>Craft::SoundSource3D" },
  { dao_Craft_SoundSource3D_Update, "Update( self: Craft::SoundSource3D, timeStep: float )" },
  { dao_Craft_SoundSource3D_SetDistanceAttenuation, "SetDistanceAttenuation( self: Craft::SoundSource3D, nearDistance: float, farDistance: float, rolloffFactor: float )" },
  { dao_Craft_SoundSource3D_SetAngleAttenuation, "SetAngleAttenuation( self: Craft::SoundSource3D, innerAngle: float, outerAngle: float )" },
  { dao_Craft_SoundSource3D_SetNearDistance, "SetNearDistance( self: Craft::SoundSource3D, distance: float )" },
  { dao_Craft_SoundSource3D_SetFarDistance, "SetFarDistance( self: Craft::SoundSource3D, distance: float )" },
  { dao_Craft_SoundSource3D_SetInnerAngle, "SetInnerAngle( self: Craft::SoundSource3D, angle: float )" },
  { dao_Craft_SoundSource3D_SetOuterAngle, "SetOuterAngle( self: Craft::SoundSource3D, angle: float )" },
  { dao_Craft_SoundSource3D_SetRolloffFactor, "SetRolloffFactor( self: Craft::SoundSource3D, factor: float )" },
  { dao_Craft_SoundSource3D_CalculateAttenuation, "CalculateAttenuation( self: Craft::SoundSource3D )" },
  { dao_Craft_SoundSource3D_GetNearDistance, "GetNearDistance( self: Craft::SoundSource3D )=>float" },
  { dao_Craft_SoundSource3D_GetFarDistance, "GetFarDistance( self: Craft::SoundSource3D )=>float" },
  { dao_Craft_SoundSource3D_GetInnerAngle, "GetInnerAngle( self: Craft::SoundSource3D )=>float" },
  { dao_Craft_SoundSource3D_GetOuterAngle, "GetOuterAngle( self: Craft::SoundSource3D )=>float" },
  { dao_Craft_SoundSource3D_RollAngleoffFactor, "RollAngleoffFactor( self: Craft::SoundSource3D )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_SoundSource3D_Delete( DaoValue *self )
{
	Craft::SoundSource3D *obj = (Craft::SoundSource3D*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_SoundSource3D_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_SoundSource3D *self = (DaoCxx_Craft_SoundSource3D*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_SoundSource3D_Craft_SoundSource( void *data, int down )
{
	if( down ) return static_cast<Craft::SoundSource3D*>((Craft::SoundSource*)data);
	return dynamic_cast<Craft::SoundSource*>((Craft::SoundSource3D*)data);
}

static DaoTypeCore Craft_SoundSource3D_Core = 
{
  "Craft::SoundSource3D",
  sizeof(Craft::SoundSource3D),
  { dao_Craft_SoundSource_Core, NULL },
  { dao_cast_Craft_SoundSource3D_Craft_SoundSource,NULL },
  dao_Craft_SoundSource3D_Nums,
  dao_Craft_SoundSource3D_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_SoundSource3D_Delete,
  Dao_Craft_SoundSource3D_HandleGC
};
DaoTypeCore *dao_Craft_SoundSource3D_Core = & Craft_SoundSource3D_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SoundSource3D_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_SoundSource3D *_self = new DaoCxx_Craft_SoundSource3D( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetDistanceAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float nearDistance = (float) DaoValue_TryGetFloat( _p[1] );
  float farDistance = (float) DaoValue_TryGetFloat( _p[2] );
  float rolloffFactor = (float) DaoValue_TryGetFloat( _p[3] );

  self->SetDistanceAttenuation( nearDistance, farDistance, rolloffFactor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetAngleAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float innerAngle = (float) DaoValue_TryGetFloat( _p[1] );
  float outerAngle = (float) DaoValue_TryGetFloat( _p[2] );

  self->SetAngleAttenuation( innerAngle, outerAngle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetNearDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetNearDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetFarDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float distance = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetFarDistance( distance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetInnerAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float angle = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetInnerAngle( angle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetOuterAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float angle = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetOuterAngle( angle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_SetRolloffFactor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );
  float factor = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetRolloffFactor( factor );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_CalculateAttenuation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );

  self->CalculateAttenuation(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_GetNearDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );

  float _GetNearDistance = self->GetNearDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetNearDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_GetFarDistance( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );

  float _GetFarDistance = self->GetFarDistance(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetFarDistance );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_GetInnerAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );

  float _GetInnerAngle = self->GetInnerAngle(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetInnerAngle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_GetOuterAngle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );

  float _GetOuterAngle = self->GetOuterAngle(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetOuterAngle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_SoundSource3D_RollAngleoffFactor( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::SoundSource3D* self = (Craft::SoundSource3D*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_SoundSource3D_Core );

  float _RollAngleoffFactor = self->RollAngleoffFactor(  );
  DaoProcess_PutFloat( _proc, (dao_float) _RollAngleoffFactor );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_TouchState_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_TouchState_GETF_touchID_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TouchState_SETF_touchID_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TouchState_GETF_position_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TouchState_GETF_lastPosition_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TouchState_GETF_delta_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TouchState_GETF_pressure_( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_TouchState_SETF_pressure_( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_TouchState_Meths[] = 
{
  { dao_Craft_TouchState_GETF_touchID_, ".touchID_ ( self: Craft::TouchState )=>int" },
  { dao_Craft_TouchState_SETF_touchID_, ".touchID_=( self: Craft::TouchState, touchID_: int )" },
  { dao_Craft_TouchState_GETF_position_, ".position_ ( self: Craft::TouchState )=>Craft::IntVector2" },
  { dao_Craft_TouchState_GETF_lastPosition_, ".lastPosition_ ( self: Craft::TouchState )=>Craft::IntVector2" },
  { dao_Craft_TouchState_GETF_delta_, ".delta_ ( self: Craft::TouchState )=>Craft::IntVector2" },
  { dao_Craft_TouchState_GETF_pressure_, ".pressure_ ( self: Craft::TouchState )=>float" },
  { dao_Craft_TouchState_SETF_pressure_, ".pressure_=( self: Craft::TouchState, pressure_: float )" },
  { NULL, NULL }
};
static void Dao_Craft_TouchState_Delete( DaoValue *self )
{
	delete (Craft::TouchState*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static DaoValue* dao_Craft_TouchState_Copy( DaoValue *self, DaoValue *target )
{
	DaoCdata *cdata = (DaoCdata*) self;
	Craft::TouchState* src = (Craft::TouchState*) DaoValue_TryCastCdataTC( self, dao_Craft_TouchState_Core );
	Craft::TouchState* dest;
	if( target ){
		dest = (Craft::TouchState*) DaoValue_TryCastCdataTC( target, dao_Craft_TouchState_Core );
		*dest = *src;
		return target;
	}
	dest = new Craft::TouchState( *src );
	return (DaoValue*) DaoCdata_NewTC( DaoCdata_GetVmSpace(cdata), dao_Craft_TouchState_Core, dest );
}

static DaoTypeCore Craft_TouchState_Core = 
{
  "Craft::TouchState",
  sizeof(Craft::TouchState),
  { NULL },
  { NULL },
  dao_Craft_TouchState_Nums,
  dao_Craft_TouchState_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  dao_Craft_TouchState_Copy,
  Dao_Craft_TouchState_Delete,
  NULL
};
DaoTypeCore *dao_Craft_TouchState_Core = & Craft_TouchState_Core;
static void dao_Craft_TouchState_GETF_touchID_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  DaoProcess_PutInteger( _proc, (dao_integer) self->touchID_ );
}
static void dao_Craft_TouchState_SETF_touchID_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  self->touchID_ = (int) DaoValue_TryGetInteger(_p[1]);
}
static void dao_Craft_TouchState_GETF_position_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->position_, dao_Craft_IntVector2_Core );
}
static void dao_Craft_TouchState_GETF_lastPosition_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->lastPosition_, dao_Craft_IntVector2_Core );
}
static void dao_Craft_TouchState_GETF_delta_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  DaoProcess_CopyCdataTC( _proc, (void*)&self->delta_, dao_Craft_IntVector2_Core );
}
static void dao_Craft_TouchState_GETF_pressure_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  DaoProcess_PutFloat( _proc, (dao_float) self->pressure_ );
}
static void dao_Craft_TouchState_SETF_pressure_( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::TouchState *self = (Craft::TouchState*)DaoValue_TryCastCdataTC(_p[0],dao_Craft_TouchState_Core);
  self->pressure_ = (float) DaoValue_TryGetFloat(_p[1]);
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_JoystickState_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_JoystickState_JoystickState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_Initialize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_Reset( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_IsController( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetNumButtons( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetNumAxes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetNumHats( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetButtonDown( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetButtonPress( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetAxisPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_JoystickState_GetHatPosition( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_JoystickState_Meths[] = 
{
  { dao_Craft_JoystickState_JoystickState_dao_2, "JoystickState(  )=>Craft::JoystickState" },
  { dao_Craft_JoystickState_Initialize, "Initialize( self: Craft::JoystickState, numButtons: int, numAxes: int, numHats: int )" },
  { dao_Craft_JoystickState_Reset, "Reset( self: Craft::JoystickState )" },
  { dao_Craft_JoystickState_IsController, "IsController( self: Craft::JoystickState )=>bool" },
  { dao_Craft_JoystickState_GetNumButtons, "GetNumButtons( self: Craft::JoystickState )=>int" },
  { dao_Craft_JoystickState_GetNumAxes, "GetNumAxes( self: Craft::JoystickState )=>int" },
  { dao_Craft_JoystickState_GetNumHats, "GetNumHats( self: Craft::JoystickState )=>int" },
  { dao_Craft_JoystickState_GetButtonDown, "GetButtonDown( self: Craft::JoystickState, index: int )=>bool" },
  { dao_Craft_JoystickState_GetButtonPress, "GetButtonPress( self: Craft::JoystickState, index: int )=>bool" },
  { dao_Craft_JoystickState_GetAxisPosition, "GetAxisPosition( self: Craft::JoystickState, index: int )=>float" },
  { dao_Craft_JoystickState_GetHatPosition, "GetHatPosition( self: Craft::JoystickState, index: int )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_JoystickState_Delete( DaoValue *self )
{
	delete (Craft::JoystickState*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_JoystickState_Core = 
{
  "Craft::JoystickState",
  sizeof(Craft::JoystickState),
  { NULL },
  { NULL },
  dao_Craft_JoystickState_Nums,
  dao_Craft_JoystickState_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_JoystickState_Delete,
  NULL
};
DaoTypeCore *dao_Craft_JoystickState_Core = & Craft_JoystickState_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_JoystickState_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::JoystickState *_self = new Craft::JoystickState(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_JoystickState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_Initialize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );
  unsigned int numButtons = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  unsigned int numAxes = (unsigned int) DaoValue_TryGetInteger( _p[2] );
  unsigned int numHats = (unsigned int) DaoValue_TryGetInteger( _p[3] );

  self->Initialize( numButtons, numAxes, numHats );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_Reset( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );

  self->Reset(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_IsController( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );

  bool _IsController = self->IsController(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsController );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetNumButtons( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );

  unsigned int _GetNumButtons = self->GetNumButtons(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumButtons );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetNumAxes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );

  unsigned int _GetNumAxes = self->GetNumAxes(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumAxes );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetNumHats( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );

  unsigned int _GetNumHats = self->GetNumHats(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumHats );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetButtonDown( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _GetButtonDown = self->GetButtonDown( index );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetButtonDown );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetButtonPress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _GetButtonPress = self->GetButtonPress( index );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetButtonPress );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetAxisPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  float _GetAxisPosition = self->GetAxisPosition( index );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAxisPosition );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_JoystickState_GetHatPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::JoystickState* self = (Craft::JoystickState*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_JoystickState_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  int _GetHatPosition = self->GetHatPosition( index );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHatPosition );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Input_Nums[] = 
{
  { NULL, 0, 0 }
};


extern void dao_Craft_Input_Input_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetToggleFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetMouseVisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_ResetMouseVisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetMouseGrabbed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetMouseMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetScreenKeyboardVisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetTouchEmulation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_RecordGesture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SaveGestures( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SaveGesture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_LoadGestures( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_RemoveGesture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_RemoveAllGestures( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetKeyFromName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetKeyFromScancode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetKeyName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetScancodeFromKey( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetScancodeFromName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetScancodeName( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetKeyDown( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetKeyPress( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetScancodeDown( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetScancodePress( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseButtonDown( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseButtonPress( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetQualifierDown( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetQualifierPress( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetQualifiers( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMousePosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_SetMousePosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_CenterMousePosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMove( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMoveX( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMoveY( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMoveWheelX( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMoveWheelY( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMoveWheel( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetNumTouches( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetTouch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetNumJoysticks( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetJoystickByIndex( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetToggleFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetScreenKeyboardSupport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_IsScreenKeyboardVisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetTouchEmulation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_IsMouseVisible( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_IsMouseGrabbed( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_GetMouseMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_HasFocus( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Input_IsMinimized( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Input_Meths[] = 
{
  { dao_Craft_Input_Input_dao_2, "Input(  )=>Craft::Input" },
  { dao_Craft_Input_Update, "Update( self: Craft::Input )" },
  { dao_Craft_Input_SetToggleFullscreen, "SetToggleFullscreen( self: Craft::Input, enable: bool )" },
  { dao_Craft_Input_SetMouseVisible, "SetMouseVisible( self: Craft::Input, enable: bool, suppressEvent: bool =false )" },
  { dao_Craft_Input_ResetMouseVisible, "ResetMouseVisible( self: Craft::Input )" },
  { dao_Craft_Input_SetMouseGrabbed, "SetMouseGrabbed( self: Craft::Input, grab: bool )" },
  { dao_Craft_Input_SetMouseMode, "SetMouseMode( self: Craft::Input, mode: int )" },
  { dao_Craft_Input_SetScreenKeyboardVisible, "SetScreenKeyboardVisible( self: Craft::Input, enable: bool )" },
  { dao_Craft_Input_SetTouchEmulation, "SetTouchEmulation( self: Craft::Input, enable: bool )" },
  { dao_Craft_Input_RecordGesture, "RecordGesture( self: Craft::Input )=>bool" },
  { dao_Craft_Input_SaveGestures, "SaveGestures( self: Craft::Input, dest: Craft::Serializer )=>bool" },
  { dao_Craft_Input_SaveGesture, "SaveGesture( self: Craft::Input, dest: Craft::Serializer, gestureID: int )=>bool" },
  { dao_Craft_Input_LoadGestures, "LoadGestures( self: Craft::Input, source: Craft::Deserializer )=>int" },
  { dao_Craft_Input_RemoveGesture, "RemoveGesture( self: Craft::Input, gestureID: int )=>bool" },
  { dao_Craft_Input_RemoveAllGestures, "RemoveAllGestures( self: Craft::Input )" },
  { dao_Craft_Input_GetKeyFromName, "GetKeyFromName( self: Craft::Input, name: string )=>int" },
  { dao_Craft_Input_GetKeyFromScancode, "GetKeyFromScancode( self: Craft::Input, scancode: int )=>int" },
  { dao_Craft_Input_GetKeyName, "GetKeyName( self: Craft::Input, key: int )=>string" },
  { dao_Craft_Input_GetScancodeFromKey, "GetScancodeFromKey( self: Craft::Input, key: int )=>int" },
  { dao_Craft_Input_GetScancodeFromName, "GetScancodeFromName( self: Craft::Input, name: string )=>int" },
  { dao_Craft_Input_GetScancodeName, "GetScancodeName( self: Craft::Input, scancode: int )=>string" },
  { dao_Craft_Input_GetKeyDown, "GetKeyDown( self: Craft::Input, key: int )=>bool" },
  { dao_Craft_Input_GetKeyPress, "GetKeyPress( self: Craft::Input, key: int )=>bool" },
  { dao_Craft_Input_GetScancodeDown, "GetScancodeDown( self: Craft::Input, scancode: int )=>bool" },
  { dao_Craft_Input_GetScancodePress, "GetScancodePress( self: Craft::Input, scancode: int )=>bool" },
  { dao_Craft_Input_GetMouseButtonDown, "GetMouseButtonDown( self: Craft::Input, button: int )=>bool" },
  { dao_Craft_Input_GetMouseButtonPress, "GetMouseButtonPress( self: Craft::Input, button: int )=>bool" },
  { dao_Craft_Input_GetQualifierDown, "GetQualifierDown( self: Craft::Input, qualifier: int )=>bool" },
  { dao_Craft_Input_GetQualifierPress, "GetQualifierPress( self: Craft::Input, qualifier: int )=>bool" },
  { dao_Craft_Input_GetQualifiers, "GetQualifiers( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetMousePosition, "GetMousePosition( self: Craft::Input )=>Craft::IntVector2" },
  { dao_Craft_Input_SetMousePosition, "SetMousePosition( self: Craft::Input, position: Craft::IntVector2 )" },
  { dao_Craft_Input_CenterMousePosition, "CenterMousePosition( self: Craft::Input )" },
  { dao_Craft_Input_GetMouseMove, "GetMouseMove( self: Craft::Input )=>Craft::IntVector2" },
  { dao_Craft_Input_GetMouseMoveX, "GetMouseMoveX( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetMouseMoveY, "GetMouseMoveY( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetMouseMoveWheelX, "GetMouseMoveWheelX( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetMouseMoveWheelY, "GetMouseMoveWheelY( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetMouseMoveWheel, "GetMouseMoveWheel( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetNumTouches, "GetNumTouches( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetTouch, "GetTouch( self: Craft::Input, index: int )=>Craft::TouchState" },
  { dao_Craft_Input_GetNumJoysticks, "GetNumJoysticks( self: Craft::Input )=>int" },
  { dao_Craft_Input_GetJoystickByIndex, "GetJoystickByIndex( self: Craft::Input, index: int )=>Craft::JoystickState" },
  { dao_Craft_Input_GetToggleFullscreen, "GetToggleFullscreen( self: Craft::Input )=>bool" },
  { dao_Craft_Input_GetScreenKeyboardSupport, "GetScreenKeyboardSupport( self: Craft::Input )=>bool" },
  { dao_Craft_Input_IsScreenKeyboardVisible, "IsScreenKeyboardVisible( self: Craft::Input )=>bool" },
  { dao_Craft_Input_GetTouchEmulation, "GetTouchEmulation( self: Craft::Input )=>bool" },
  { dao_Craft_Input_IsMouseVisible, "IsMouseVisible( self: Craft::Input )=>bool" },
  { dao_Craft_Input_IsMouseGrabbed, "IsMouseGrabbed( self: Craft::Input )=>bool" },
  { dao_Craft_Input_GetMouseMode, "GetMouseMode( self: Craft::Input )=>int" },
  { dao_Craft_Input_HasFocus, "HasFocus( self: Craft::Input )=>bool" },
  { dao_Craft_Input_IsMinimized, "IsMinimized( self: Craft::Input )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_Input_Delete( DaoValue *self )
{
	Craft::Input *obj = (Craft::Input*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Input_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Input *self = (DaoCxx_Craft_Input*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Input_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Input*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Input*)data);
}

static DaoTypeCore Craft_Input_Core = 
{
  "Craft::Input",
  sizeof(Craft::Input),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Input_Craft_Object,NULL },
  dao_Craft_Input_Nums,
  dao_Craft_Input_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Input_Delete,
  Dao_Craft_Input_HandleGC
};
DaoTypeCore *dao_Craft_Input_Core = & Craft_Input_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  self->Update(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetToggleFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetToggleFullscreen( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetMouseVisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );
  bool suppressEvent = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetMouseVisible( enable, suppressEvent );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_ResetMouseVisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  self->ResetMouseVisible(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetMouseGrabbed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  bool grab = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetMouseGrabbed( grab );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetMouseMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::MouseMode mode = (Craft::MouseMode) DaoValue_TryGetInteger( _p[1] );

  self->SetMouseMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetScreenKeyboardVisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetScreenKeyboardVisible( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetTouchEmulation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetTouchEmulation( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_RecordGesture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _RecordGesture = self->RecordGesture(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RecordGesture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SaveGestures( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );

  bool _SaveGestures = self->SaveGestures( *dest );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveGestures );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SaveGesture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Serializer* dest = (Craft::Serializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Serializer_Core );
  unsigned int gestureID = (unsigned int) DaoValue_TryGetInteger( _p[2] );

  bool _SaveGesture = self->SaveGesture( *dest, gestureID );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _SaveGesture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_LoadGestures( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Deserializer* source = (Craft::Deserializer*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Deserializer_Core );

  unsigned int _LoadGestures = self->LoadGestures( *source );
  DaoProcess_PutInteger( _proc, (dao_integer) _LoadGestures );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_RemoveGesture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  unsigned int gestureID = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _RemoveGesture = self->RemoveGesture( gestureID );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _RemoveGesture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_RemoveAllGestures( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  self->RemoveAllGestures(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetKeyFromName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Key _GetKeyFromName = self->GetKeyFromName( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetKeyFromName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetKeyFromScancode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Scancode scancode = (Craft::Scancode) DaoValue_TryGetInteger( _p[1] );

  Craft::Key _GetKeyFromScancode = self->GetKeyFromScancode( scancode );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetKeyFromScancode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetKeyName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Key key = (Craft::Key) DaoValue_TryGetInteger( _p[1] );

  Craft::String _GetKeyName = self->GetKeyName( key );
  DaoProcess_PutBytes( _proc, (char*) _GetKeyName.CString(), _GetKeyName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetScancodeFromKey( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Key key = (Craft::Key) DaoValue_TryGetInteger( _p[1] );

  Craft::Scancode _GetScancodeFromKey = self->GetScancodeFromKey( key );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetScancodeFromKey );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetScancodeFromName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  Craft::Scancode _GetScancodeFromName = self->GetScancodeFromName( name );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetScancodeFromName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetScancodeName( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Scancode scancode = (Craft::Scancode) DaoValue_TryGetInteger( _p[1] );

  Craft::String _GetScancodeName = self->GetScancodeName( scancode );
  DaoProcess_PutBytes( _proc, (char*) _GetScancodeName.CString(), _GetScancodeName.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetKeyDown( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Key key = (Craft::Key) DaoValue_TryGetInteger( _p[1] );

  bool _GetKeyDown = self->GetKeyDown( key );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetKeyDown );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetKeyPress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Key key = (Craft::Key) DaoValue_TryGetInteger( _p[1] );

  bool _GetKeyPress = self->GetKeyPress( key );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetKeyPress );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetScancodeDown( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Scancode scancode = (Craft::Scancode) DaoValue_TryGetInteger( _p[1] );

  bool _GetScancodeDown = self->GetScancodeDown( scancode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetScancodeDown );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetScancodePress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Scancode scancode = (Craft::Scancode) DaoValue_TryGetInteger( _p[1] );

  bool _GetScancodePress = self->GetScancodePress( scancode );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetScancodePress );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseButtonDown( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  int button = (int) DaoValue_TryGetInteger( _p[1] );

  bool _GetMouseButtonDown = self->GetMouseButtonDown( button );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetMouseButtonDown );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseButtonPress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  int button = (int) DaoValue_TryGetInteger( _p[1] );

  bool _GetMouseButtonPress = self->GetMouseButtonPress( button );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetMouseButtonPress );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetQualifierDown( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Qualifier qualifier = (Craft::Qualifier) DaoValue_TryGetInteger( _p[1] );

  bool _GetQualifierDown = self->GetQualifierDown( qualifier );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetQualifierDown );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetQualifierPress( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::Qualifier qualifier = (Craft::Qualifier) DaoValue_TryGetInteger( _p[1] );

  bool _GetQualifierPress = self->GetQualifierPress( qualifier );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetQualifierPress );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetQualifiers( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  int _GetQualifiers = self->GetQualifiers(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetQualifiers );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMousePosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  Craft::IntVector2 _GetMousePosition = self->GetMousePosition(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntVector2( _GetMousePosition ), dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_SetMousePosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  Craft::IntVector2* position = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );

  self->SetMousePosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_CenterMousePosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  self->CenterMousePosition(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMove( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  const Craft::IntVector2& _GetMouseMove = self->GetMouseMove(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetMouseMove, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMoveX( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  int _GetMouseMoveX = self->GetMouseMoveX(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMouseMoveX );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMoveY( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  int _GetMouseMoveY = self->GetMouseMoveY(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMouseMoveY );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMoveWheelX( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  int _GetMouseMoveWheelX = self->GetMouseMoveWheelX(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMouseMoveWheelX );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMoveWheelY( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  int _GetMouseMoveWheelY = self->GetMouseMoveWheelY(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMouseMoveWheelY );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMoveWheel( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  int _GetMouseMoveWheel = self->GetMouseMoveWheel(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMouseMoveWheel );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetNumTouches( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  unsigned int _GetNumTouches = self->GetNumTouches(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumTouches );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetTouch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::TouchState* _GetTouch = self->GetTouch( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTouch, dao_Craft_TouchState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetNumJoysticks( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  unsigned int _GetNumJoysticks = self->GetNumJoysticks(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumJoysticks );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetJoystickByIndex( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );
  unsigned int index = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  Craft::JoystickState* _GetJoystickByIndex = self->GetJoystickByIndex( index );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetJoystickByIndex, dao_Craft_JoystickState_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetToggleFullscreen( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _GetToggleFullscreen = self->GetToggleFullscreen(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetToggleFullscreen );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetScreenKeyboardSupport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _GetScreenKeyboardSupport = self->GetScreenKeyboardSupport(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetScreenKeyboardSupport );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_IsScreenKeyboardVisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _IsScreenKeyboardVisible = self->IsScreenKeyboardVisible(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsScreenKeyboardVisible );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetTouchEmulation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _GetTouchEmulation = self->GetTouchEmulation(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetTouchEmulation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_IsMouseVisible( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _IsMouseVisible = self->IsMouseVisible(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsMouseVisible );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_IsMouseGrabbed( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _IsMouseGrabbed = self->IsMouseGrabbed(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsMouseGrabbed );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_GetMouseMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  Craft::MouseMode _GetMouseMode = self->GetMouseMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMouseMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_HasFocus( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _HasFocus = self->HasFocus(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _HasFocus );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Input_IsMinimized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Input* self = (Craft::Input*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Input_Core );

  bool _IsMinimized = self->IsMinimized(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsMinimized );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Constraint_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_Constraint_Constraint_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetConstraintType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetOtherBody( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetAxis( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetOtherPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetOtherRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetOtherAxis( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetHighLimit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetLowLimit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetERP( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetCFM( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_SetDisableCollision( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetPhysicsWorld( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetConstraintType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetOwnBody( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetOtherBody( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetOtherPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetOtherRotation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetHighLimit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetLowLimit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetERP( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetCFM( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_GetDisableCollision( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_ReleaseConstraint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Constraint_ApplyFrames( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Constraint_Meths[] = 
{
  { dao_Craft_Constraint_Constraint_dao_2, "Constraint(  )=>Craft::Constraint" },
  { dao_Craft_Constraint_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_Constraint_ApplyAttributes, "ApplyAttributes( self: Craft::Constraint )" },
  { dao_Craft_Constraint_OnSetEnabled, "OnSetEnabled( self: Craft::Constraint )" },
  { dao_Craft_Constraint_SetConstraintType, "SetConstraintType( self: Craft::Constraint, type: int )" },
  { dao_Craft_Constraint_SetOtherBody, "SetOtherBody( self: Craft::Constraint, body: Craft::RigidBody )" },
  { dao_Craft_Constraint_SetPosition, "SetPosition( self: Craft::Constraint, position: Craft::Vector3 )" },
  { dao_Craft_Constraint_SetRotation, "SetRotation( self: Craft::Constraint, rotation: Craft::Quaternion )" },
  { dao_Craft_Constraint_SetAxis, "SetAxis( self: Craft::Constraint, axis: Craft::Vector3 )" },
  { dao_Craft_Constraint_SetOtherPosition, "SetOtherPosition( self: Craft::Constraint, position: Craft::Vector3 )" },
  { dao_Craft_Constraint_SetOtherRotation, "SetOtherRotation( self: Craft::Constraint, rotation: Craft::Quaternion )" },
  { dao_Craft_Constraint_SetOtherAxis, "SetOtherAxis( self: Craft::Constraint, axis: Craft::Vector3 )" },
  { dao_Craft_Constraint_SetWorldPosition, "SetWorldPosition( self: Craft::Constraint, position: Craft::Vector3 )" },
  { dao_Craft_Constraint_SetHighLimit, "SetHighLimit( self: Craft::Constraint, limit: Craft::Vector2 )" },
  { dao_Craft_Constraint_SetLowLimit, "SetLowLimit( self: Craft::Constraint, limit: Craft::Vector2 )" },
  { dao_Craft_Constraint_SetERP, "SetERP( self: Craft::Constraint, erp: float )" },
  { dao_Craft_Constraint_SetCFM, "SetCFM( self: Craft::Constraint, cfm: float )" },
  { dao_Craft_Constraint_SetDisableCollision, "SetDisableCollision( self: Craft::Constraint, disable: bool )" },
  { dao_Craft_Constraint_GetPhysicsWorld, "GetPhysicsWorld( self: Craft::Constraint )=>Craft::PhysicsWorld" },
  { dao_Craft_Constraint_GetConstraintType, "GetConstraintType( self: Craft::Constraint )=>int" },
  { dao_Craft_Constraint_GetOwnBody, "GetOwnBody( self: Craft::Constraint )=>Craft::RigidBody" },
  { dao_Craft_Constraint_GetOtherBody, "GetOtherBody( self: Craft::Constraint )=>Craft::RigidBody" },
  { dao_Craft_Constraint_GetPosition, "GetPosition( self: Craft::Constraint )=>Craft::Vector3" },
  { dao_Craft_Constraint_GetRotation, "GetRotation( self: Craft::Constraint )=>Craft::Quaternion" },
  { dao_Craft_Constraint_GetOtherPosition, "GetOtherPosition( self: Craft::Constraint )=>Craft::Vector3" },
  { dao_Craft_Constraint_GetOtherRotation, "GetOtherRotation( self: Craft::Constraint )=>Craft::Quaternion" },
  { dao_Craft_Constraint_GetWorldPosition, "GetWorldPosition( self: Craft::Constraint )=>Craft::Vector3" },
  { dao_Craft_Constraint_GetHighLimit, "GetHighLimit( self: Craft::Constraint )=>Craft::Vector2" },
  { dao_Craft_Constraint_GetLowLimit, "GetLowLimit( self: Craft::Constraint )=>Craft::Vector2" },
  { dao_Craft_Constraint_GetERP, "GetERP( self: Craft::Constraint )=>float" },
  { dao_Craft_Constraint_GetCFM, "GetCFM( self: Craft::Constraint )=>float" },
  { dao_Craft_Constraint_GetDisableCollision, "GetDisableCollision( self: Craft::Constraint )=>bool" },
  { dao_Craft_Constraint_ReleaseConstraint, "ReleaseConstraint( self: Craft::Constraint )" },
  { dao_Craft_Constraint_ApplyFrames, "ApplyFrames( self: Craft::Constraint )" },
  { NULL, NULL }
};
static void Dao_Craft_Constraint_Delete( DaoValue *self )
{
	Craft::Constraint *obj = (Craft::Constraint*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Constraint_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Constraint *self = (DaoCxx_Craft_Constraint*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Constraint_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::Constraint*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::Constraint*)data);
}

static DaoTypeCore Craft_Constraint_Core = 
{
  "Craft::Constraint",
  sizeof(Craft::Constraint),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_Constraint_Craft_Component,NULL },
  dao_Craft_Constraint_Nums,
  dao_Craft_Constraint_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Constraint_Delete,
  Dao_Craft_Constraint_HandleGC
};
DaoTypeCore *dao_Craft_Constraint_Core = & Craft_Constraint_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_Constraint_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_Constraint *_self = new DaoCxx_Craft_Constraint( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::Constraint::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_ApplyAttributes( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  self->ApplyAttributes(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_OnSetEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  self->OnSetEnabled(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetConstraintType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::ConstraintType type = (Craft::ConstraintType) DaoValue_TryGetInteger( _p[1] );

  self->SetConstraintType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetOtherBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::RigidBody* body = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RigidBody_Core );

  self->SetOtherBody( body );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetAxis( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector3* axis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetAxis( *axis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetOtherPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetOtherPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetOtherRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Quaternion* rotation = (Craft::Quaternion*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Quaternion_Core );

  self->SetOtherRotation( *rotation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetOtherAxis( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector3* axis = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetOtherAxis( *axis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector3* position = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetWorldPosition( *position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetHighLimit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector2* limit = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetHighLimit( *limit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetLowLimit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  Craft::Vector2* limit = (Craft::Vector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector2_Core );

  self->SetLowLimit( *limit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetERP( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  float erp = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetERP( erp );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetCFM( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  float cfm = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetCFM( cfm );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_SetDisableCollision( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );
  bool disable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDisableCollision( disable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetPhysicsWorld( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  Craft::PhysicsWorld* _GetPhysicsWorld = self->GetPhysicsWorld(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPhysicsWorld, dao_Craft_PhysicsWorld_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetConstraintType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  Craft::ConstraintType _GetConstraintType = self->GetConstraintType(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetConstraintType );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetOwnBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  Craft::RigidBody* _GetOwnBody = self->GetOwnBody(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOwnBody, dao_Craft_RigidBody_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetOtherBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  Craft::RigidBody* _GetOtherBody = self->GetOtherBody(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetOtherBody, dao_Craft_RigidBody_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  const Craft::Vector3& _GetPosition = self->GetPosition(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetPosition, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  const Craft::Quaternion& _GetRotation = self->GetRotation(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetRotation, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetOtherPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  const Craft::Vector3& _GetOtherPosition = self->GetOtherPosition(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetOtherPosition, dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetOtherRotation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  const Craft::Quaternion& _GetOtherRotation = self->GetOtherRotation(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetOtherRotation, dao_Craft_Quaternion_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetWorldPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  Craft::Vector3 _GetWorldPosition = self->GetWorldPosition(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetWorldPosition ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetHighLimit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  const Craft::Vector2& _GetHighLimit = self->GetHighLimit(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetHighLimit, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetLowLimit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  const Craft::Vector2& _GetLowLimit = self->GetLowLimit(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetLowLimit, dao_Craft_Vector2_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetERP( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  float _GetERP = self->GetERP(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetERP );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetCFM( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  float _GetCFM = self->GetCFM(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetCFM );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_GetDisableCollision( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  bool _GetDisableCollision = self->GetDisableCollision(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDisableCollision );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_ReleaseConstraint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  self->ReleaseConstraint(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Constraint_ApplyFrames( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Constraint* self = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Constraint_Core );

  self->ApplyFrames(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_PhysicsWorld_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_PhysicsWorld_PhysicsWorld_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_setDebugMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_getDebugMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_UpdateCollisions( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetGravity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetMaxSubSteps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetNumIterations( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetUpdateEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetInternalEdge( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetSplitImpulse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetMaxNetworkAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_RemoveCachedGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetGravity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetMaxSubSteps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetNumIterations( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetInternalEdge( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetSplitImpulse( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_GetMaxNetworkAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_AddRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_RemoveRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_AddCollisionShape( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_RemoveCollisionShape( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_AddConstraint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_RemoveConstraint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_DrawDebugGeometry( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetDebugDepthTest( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_CleanupGeometryCache( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_SetApplyingTransforms( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_PhysicsWorld_IsApplyingTransforms( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_PhysicsWorld_Meths[] = 
{
  { dao_Craft_PhysicsWorld_PhysicsWorld_dao_2, "PhysicsWorld(  )=>Craft::PhysicsWorld" },
  { dao_Craft_PhysicsWorld_RegisterObject, "RegisterObject( context: Craft::Context )" },
  { dao_Craft_PhysicsWorld_setDebugMode, "setDebugMode( self: Craft::PhysicsWorld, debugMode: int )" },
  { dao_Craft_PhysicsWorld_getDebugMode, "getDebugMode( self: Craft::PhysicsWorld )=>int" },
  { dao_Craft_PhysicsWorld_Update, "Update( self: Craft::PhysicsWorld, timeStep: float )" },
  { dao_Craft_PhysicsWorld_UpdateCollisions, "UpdateCollisions( self: Craft::PhysicsWorld )" },
  { dao_Craft_PhysicsWorld_SetFps, "SetFps( self: Craft::PhysicsWorld, fps: int )" },
  { dao_Craft_PhysicsWorld_SetGravity, "SetGravity( self: Craft::PhysicsWorld, gravity: Craft::Vector3 )" },
  { dao_Craft_PhysicsWorld_SetMaxSubSteps, "SetMaxSubSteps( self: Craft::PhysicsWorld, num: int )" },
  { dao_Craft_PhysicsWorld_SetNumIterations, "SetNumIterations( self: Craft::PhysicsWorld, num: int )" },
  { dao_Craft_PhysicsWorld_SetUpdateEnabled, "SetUpdateEnabled( self: Craft::PhysicsWorld, enable: bool )" },
  { dao_Craft_PhysicsWorld_SetInterpolation, "SetInterpolation( self: Craft::PhysicsWorld, enable: bool )" },
  { dao_Craft_PhysicsWorld_SetInternalEdge, "SetInternalEdge( self: Craft::PhysicsWorld, enable: bool )" },
  { dao_Craft_PhysicsWorld_SetSplitImpulse, "SetSplitImpulse( self: Craft::PhysicsWorld, enable: bool )" },
  { dao_Craft_PhysicsWorld_SetMaxNetworkAngularVelocity, "SetMaxNetworkAngularVelocity( self: Craft::PhysicsWorld, velocity: float )" },
  { dao_Craft_PhysicsWorld_RemoveCachedGeometry, "RemoveCachedGeometry( self: Craft::PhysicsWorld, model: Craft::Model )" },
  { dao_Craft_PhysicsWorld_GetGravity, "GetGravity( self: Craft::PhysicsWorld )=>Craft::Vector3" },
  { dao_Craft_PhysicsWorld_GetMaxSubSteps, "GetMaxSubSteps( self: Craft::PhysicsWorld )=>int" },
  { dao_Craft_PhysicsWorld_GetNumIterations, "GetNumIterations( self: Craft::PhysicsWorld )=>int" },
  { dao_Craft_PhysicsWorld_GetInterpolation, "GetInterpolation( self: Craft::PhysicsWorld )=>bool" },
  { dao_Craft_PhysicsWorld_GetInternalEdge, "GetInternalEdge( self: Craft::PhysicsWorld )=>bool" },
  { dao_Craft_PhysicsWorld_GetSplitImpulse, "GetSplitImpulse( self: Craft::PhysicsWorld )=>bool" },
  { dao_Craft_PhysicsWorld_GetFps, "GetFps( self: Craft::PhysicsWorld )=>int" },
  { dao_Craft_PhysicsWorld_GetMaxNetworkAngularVelocity, "GetMaxNetworkAngularVelocity( self: Craft::PhysicsWorld )=>float" },
  { dao_Craft_PhysicsWorld_AddRigidBody, "AddRigidBody( self: Craft::PhysicsWorld, body: Craft::RigidBody )" },
  { dao_Craft_PhysicsWorld_RemoveRigidBody, "RemoveRigidBody( self: Craft::PhysicsWorld, body: Craft::RigidBody )" },
  { dao_Craft_PhysicsWorld_AddCollisionShape, "AddCollisionShape( self: Craft::PhysicsWorld, shape: Craft::CollisionShape )" },
  { dao_Craft_PhysicsWorld_RemoveCollisionShape, "RemoveCollisionShape( self: Craft::PhysicsWorld, shape: Craft::CollisionShape )" },
  { dao_Craft_PhysicsWorld_AddConstraint, "AddConstraint( self: Craft::PhysicsWorld, joint: Craft::Constraint )" },
  { dao_Craft_PhysicsWorld_RemoveConstraint, "RemoveConstraint( self: Craft::PhysicsWorld, joint: Craft::Constraint )" },
  { dao_Craft_PhysicsWorld_DrawDebugGeometry, "DrawDebugGeometry( self: Craft::PhysicsWorld, depthTest: bool )" },
  { dao_Craft_PhysicsWorld_SetDebugDepthTest, "SetDebugDepthTest( self: Craft::PhysicsWorld, enable: bool )" },
  { dao_Craft_PhysicsWorld_CleanupGeometryCache, "CleanupGeometryCache( self: Craft::PhysicsWorld )" },
  { dao_Craft_PhysicsWorld_SetApplyingTransforms, "SetApplyingTransforms( self: Craft::PhysicsWorld, enable: bool )" },
  { dao_Craft_PhysicsWorld_IsApplyingTransforms, "IsApplyingTransforms( self: Craft::PhysicsWorld )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_PhysicsWorld_Delete( DaoValue *self )
{
	Craft::PhysicsWorld *obj = (Craft::PhysicsWorld*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_PhysicsWorld_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_PhysicsWorld *self = (DaoCxx_Craft_PhysicsWorld*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_PhysicsWorld_Craft_Component( void *data, int down )
{
	if( down ) return static_cast<Craft::PhysicsWorld*>((Craft::Component*)data);
	return dynamic_cast<Craft::Component*>((Craft::PhysicsWorld*)data);
}

static DaoTypeCore Craft_PhysicsWorld_Core = 
{
  "Craft::PhysicsWorld",
  sizeof(Craft::PhysicsWorld),
  { dao_Craft_Component_Core, NULL },
  { dao_cast_Craft_PhysicsWorld_Craft_Component,NULL },
  dao_Craft_PhysicsWorld_Nums,
  dao_Craft_PhysicsWorld_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_PhysicsWorld_Delete,
  Dao_Craft_PhysicsWorld_HandleGC
};
DaoTypeCore *dao_Craft_PhysicsWorld_Core = & Craft_PhysicsWorld_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_PhysicsWorld_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_PhysicsWorld *_self = new DaoCxx_Craft_PhysicsWorld( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_RegisterObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  Craft::PhysicsWorld::RegisterObject( context );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_setDebugMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  int debugMode = (int) DaoValue_TryGetInteger( _p[1] );

  self->setDebugMode( debugMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_getDebugMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  int _getDebugMode = self->getDebugMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _getDebugMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_UpdateCollisions( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  self->UpdateCollisions(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  int fps = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetFps( fps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetGravity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::Vector3* gravity = (Craft::Vector3*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Vector3_Core );

  self->SetGravity( *gravity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetMaxSubSteps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  int num = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxSubSteps( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetNumIterations( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  int num = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetNumIterations( num );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetUpdateEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUpdateEnabled( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetInterpolation( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetInternalEdge( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetInternalEdge( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetSplitImpulse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSplitImpulse( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetMaxNetworkAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  float velocity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetMaxNetworkAngularVelocity( velocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_RemoveCachedGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::Model* model = (Craft::Model*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Model_Core );

  self->RemoveCachedGeometry( model );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetGravity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  Craft::Vector3 _GetGravity = self->GetGravity(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::Vector3( _GetGravity ), dao_Craft_Vector3_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetMaxSubSteps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  int _GetMaxSubSteps = self->GetMaxSubSteps(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxSubSteps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetNumIterations( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  int _GetNumIterations = self->GetNumIterations(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumIterations );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetInterpolation( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  bool _GetInterpolation = self->GetInterpolation(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetInterpolation );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetInternalEdge( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  bool _GetInternalEdge = self->GetInternalEdge(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetInternalEdge );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetSplitImpulse( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  bool _GetSplitImpulse = self->GetSplitImpulse(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSplitImpulse );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  int _GetFps = self->GetFps(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_GetMaxNetworkAngularVelocity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  float _GetMaxNetworkAngularVelocity = self->GetMaxNetworkAngularVelocity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetMaxNetworkAngularVelocity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_AddRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::RigidBody* body = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RigidBody_Core );

  self->AddRigidBody( body );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_RemoveRigidBody( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::RigidBody* body = (Craft::RigidBody*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_RigidBody_Core );

  self->RemoveRigidBody( body );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_AddCollisionShape( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::CollisionShape* shape = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_CollisionShape_Core );

  self->AddCollisionShape( shape );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_RemoveCollisionShape( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::CollisionShape* shape = (Craft::CollisionShape*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_CollisionShape_Core );

  self->RemoveCollisionShape( shape );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_AddConstraint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::Constraint* joint = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Constraint_Core );

  self->AddConstraint( joint );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_RemoveConstraint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  Craft::Constraint* joint = (Craft::Constraint*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Constraint_Core );

  self->RemoveConstraint( joint );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_DrawDebugGeometry( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool depthTest = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->DrawDebugGeometry( depthTest );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetDebugDepthTest( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetDebugDepthTest( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_CleanupGeometryCache( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  self->CleanupGeometryCache(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_SetApplyingTransforms( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetApplyingTransforms( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_PhysicsWorld_IsApplyingTransforms( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::PhysicsWorld* self = (Craft::PhysicsWorld*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_PhysicsWorld_Core );

  bool _IsApplyingTransforms = self->IsApplyingTransforms(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsApplyingTransforms );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIWidget_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIWidget_UIWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Load( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetId( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetContentRoot( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetPreferredSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetRect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetSkinBg( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutParams( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetFontDescription( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Remove( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_RemoveChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_DeleteAllChildren( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetId( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Center( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetGravity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetAxis( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetFocus( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetFocus( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetFocusRecursive( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_OnFocusChanged( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetState( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetVisibility( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetVisibility( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetStateRaw( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetStateRaw( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Invalidate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Die( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetDragObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetDragObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetFirstChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetNext( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_IsAncestorOf( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetIsFocusable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetWidget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_AddChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_AddChildAfter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_AddChildBefore( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_AddChildRelative( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_InvalidateLayout( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetDelegate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetMultiTouch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_IsMultiTouch( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetCaptured( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetCapturing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetCapturing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_InvokeShortcut( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetShortened( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetShortened( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetTooltip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetTooltip( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Enable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_Disable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetFontId( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetFontId( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetFontSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetFontSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetX( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetY( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetX( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetY( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetLayoutMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetLayoutMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetOpacity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_SetAutoOpacity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetOpacity( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWidget_GetAutoOpacity( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIWidget_Meths[] = 
{
  { dao_Craft_UIKit_UIWidget_UIWidget_dao_2, "UIWidget( createWidget: bool =true )=>Craft::UIKit::UIWidget" },
  { dao_Craft_UIKit_UIWidget_Load, "Load( self: Craft::UIKit::UIWidget, filename: string )=>bool" },
  { dao_Craft_UIKit_UIWidget_GetId, "GetId( self: Craft::UIKit::UIWidget )=>string" },
  { dao_Craft_UIKit_UIWidget_GetParent, "GetParent( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIWidget|none" },
  { dao_Craft_UIKit_UIWidget_GetContentRoot, "GetContentRoot( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIWidget|none" },
  { dao_Craft_UIKit_UIWidget_GetRect, "GetRect( self: Craft::UIKit::UIWidget )=>Craft::IntRect" },
  { dao_Craft_UIKit_UIWidget_GetPreferredSize, "GetPreferredSize( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIPreferredSize" },
  { dao_Craft_UIKit_UIWidget_GetText, "GetText( self: Craft::UIKit::UIWidget )=>string" },
  { dao_Craft_UIKit_UIWidget_SetRect, "SetRect( self: Craft::UIKit::UIWidget, r: Craft::IntRect )" },
  { dao_Craft_UIKit_UIWidget_SetSize, "SetSize( self: Craft::UIKit::UIWidget, width: int, height: int )" },
  { dao_Craft_UIKit_UIWidget_SetPosition, "SetPosition( self: Craft::UIKit::UIWidget, x: int, y: int )" },
  { dao_Craft_UIKit_UIWidget_SetText, "SetText( self: Craft::UIKit::UIWidget, text: string )" },
  { dao_Craft_UIKit_UIWidget_SetSkinBg, "SetSkinBg( self: Craft::UIKit::UIWidget, id: string )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutParams, "SetLayoutParams( self: Craft::UIKit::UIWidget, params: Craft::UIKit::UILayoutParams )" },
  { dao_Craft_UIKit_UIWidget_SetFontDescription, "SetFontDescription( self: Craft::UIKit::UIWidget, fd: Craft::UIKit::UIFontDescription )" },
  { dao_Craft_UIKit_UIWidget_Remove, "Remove( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_RemoveChild, "RemoveChild( self: Craft::UIKit::UIWidget, child: Craft::UIKit::UIWidget, cleanup: bool =true )" },
  { dao_Craft_UIKit_UIWidget_DeleteAllChildren, "DeleteAllChildren( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_SetId, "SetId( self: Craft::UIKit::UIWidget, id: string )" },
  { dao_Craft_UIKit_UIWidget_Center, "Center( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_SetGravity, "SetGravity( self: Craft::UIKit::UIWidget, gravity: int )" },
  { dao_Craft_UIKit_UIWidget_SetAxis, "SetAxis( self: Craft::UIKit::UIWidget, axis: int )" },
  { dao_Craft_UIKit_UIWidget_SetValue, "SetValue( self: Craft::UIKit::UIWidget, value: float )" },
  { dao_Craft_UIKit_UIWidget_GetValue, "GetValue( self: Craft::UIKit::UIWidget )=>float" },
  { dao_Craft_UIKit_UIWidget_SetFocus, "SetFocus( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_GetFocus, "GetFocus( self: Craft::UIKit::UIWidget )=>bool" },
  { dao_Craft_UIKit_UIWidget_SetFocusRecursive, "SetFocusRecursive( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_OnFocusChanged, "OnFocusChanged( self: Craft::UIKit::UIWidget, focused: bool )" },
  { dao_Craft_UIKit_UIWidget_SetState, "SetState( self: Craft::UIKit::UIWidget, state: int, on: bool )" },
  { dao_Craft_UIKit_UIWidget_GetState, "GetState( self: Craft::UIKit::UIWidget, state: int )=>bool" },
  { dao_Craft_UIKit_UIWidget_SetVisibility, "SetVisibility( self: Craft::UIKit::UIWidget, visibility: int )" },
  { dao_Craft_UIKit_UIWidget_GetVisibility, "GetVisibility( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_SetStateRaw, "SetStateRaw( self: Craft::UIKit::UIWidget, state: int )" },
  { dao_Craft_UIKit_UIWidget_GetStateRaw, "GetStateRaw( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_Invalidate, "Invalidate( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_Die, "Die( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_SetDragObject, "SetDragObject( self: Craft::UIKit::UIWidget, object: Craft::UIKit::UIDragObject )" },
  { dao_Craft_UIKit_UIWidget_GetDragObject, "GetDragObject( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIDragObject" },
  { dao_Craft_UIKit_UIWidget_GetFirstChild, "GetFirstChild( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIWidget|none" },
  { dao_Craft_UIKit_UIWidget_GetNext, "GetNext( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIWidget|none" },
  { dao_Craft_UIKit_UIWidget_IsAncestorOf, "IsAncestorOf( self: Craft::UIKit::UIWidget, widget: Craft::UIKit::UIWidget )=>bool" },
  { dao_Craft_UIKit_UIWidget_SetIsFocusable, "SetIsFocusable( self: Craft::UIKit::UIWidget, value: bool )" },
  { dao_Craft_UIKit_UIWidget_GetWidget, "GetWidget( self: Craft::UIKit::UIWidget, id: string )=>Craft::UIKit::UIWidget|none" },
  { dao_Craft_UIKit_UIWidget_GetView, "GetView( self: Craft::UIKit::UIWidget )=>Craft::UIKit::UIView|none" },
  { dao_Craft_UIKit_UIWidget_AddChild, "AddChild( self: Craft::UIKit::UIWidget, child: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_AddChildAfter, "AddChildAfter( self: Craft::UIKit::UIWidget, child: Craft::UIKit::UIWidget, otherChild: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_AddChildBefore, "AddChildBefore( self: Craft::UIKit::UIWidget, child: Craft::UIKit::UIWidget, otherChild: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_AddChildRelative, "AddChildRelative( self: Craft::UIKit::UIWidget, child: Craft::UIKit::UIWidget, z: int, reference: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_InvalidateLayout, "InvalidateLayout( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_SetDelegate, "SetDelegate( self: Craft::UIKit::UIWidget, widget: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_SetMultiTouch, "SetMultiTouch( self: Craft::UIKit::UIWidget, multiTouch: bool )" },
  { dao_Craft_UIKit_UIWidget_IsMultiTouch, "IsMultiTouch( self: Craft::UIKit::UIWidget )=>bool" },
  { dao_Craft_UIKit_UIWidget_GetCaptured, "GetCaptured( self: Craft::UIKit::UIWidget )=>bool" },
  { dao_Craft_UIKit_UIWidget_SetCapturing, "SetCapturing( self: Craft::UIKit::UIWidget, capturing: bool )" },
  { dao_Craft_UIKit_UIWidget_GetCapturing, "GetCapturing( self: Craft::UIKit::UIWidget )=>bool" },
  { dao_Craft_UIKit_UIWidget_InvokeShortcut, "InvokeShortcut( self: Craft::UIKit::UIWidget, shortcut: string )" },
  { dao_Craft_UIKit_UIWidget_GetShortened, "GetShortened( self: Craft::UIKit::UIWidget )=>bool" },
  { dao_Craft_UIKit_UIWidget_SetShortened, "SetShortened( self: Craft::UIKit::UIWidget, shortened: bool )" },
  { dao_Craft_UIKit_UIWidget_GetTooltip, "GetTooltip( self: Craft::UIKit::UIWidget )=>string" },
  { dao_Craft_UIKit_UIWidget_SetTooltip, "SetTooltip( self: Craft::UIKit::UIWidget, text: string )" },
  { dao_Craft_UIKit_UIWidget_Enable, "Enable( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_Disable, "Disable( self: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWidget_SetFontId, "SetFontId( self: Craft::UIKit::UIWidget, fontId: string )" },
  { dao_Craft_UIKit_UIWidget_GetFontId, "GetFontId( self: Craft::UIKit::UIWidget )=>string" },
  { dao_Craft_UIKit_UIWidget_SetFontSize, "SetFontSize( self: Craft::UIKit::UIWidget, size: int )" },
  { dao_Craft_UIKit_UIWidget_GetFontSize, "GetFontSize( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_SetX, "SetX( self: Craft::UIKit::UIWidget, x: int )" },
  { dao_Craft_UIKit_UIWidget_SetY, "SetY( self: Craft::UIKit::UIWidget, y: int )" },
  { dao_Craft_UIKit_UIWidget_SetWidth, "SetWidth( self: Craft::UIKit::UIWidget, width: int )" },
  { dao_Craft_UIKit_UIWidget_SetHeight, "SetHeight( self: Craft::UIKit::UIWidget, height: int )" },
  { dao_Craft_UIKit_UIWidget_GetX, "GetX( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetY, "GetY( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetWidth, "GetWidth( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetHeight, "GetHeight( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_SetLayoutWidth, "SetLayoutWidth( self: Craft::UIKit::UIWidget, width: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutHeight, "SetLayoutHeight( self: Craft::UIKit::UIWidget, height: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutPrefWidth, "SetLayoutPrefWidth( self: Craft::UIKit::UIWidget, width: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutPrefHeight, "SetLayoutPrefHeight( self: Craft::UIKit::UIWidget, height: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutMinWidth, "SetLayoutMinWidth( self: Craft::UIKit::UIWidget, width: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutMinHeight, "SetLayoutMinHeight( self: Craft::UIKit::UIWidget, height: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutMaxWidth, "SetLayoutMaxWidth( self: Craft::UIKit::UIWidget, width: int )" },
  { dao_Craft_UIKit_UIWidget_SetLayoutMaxHeight, "SetLayoutMaxHeight( self: Craft::UIKit::UIWidget, height: int )" },
  { dao_Craft_UIKit_UIWidget_GetLayoutWidth, "GetLayoutWidth( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutHeight, "GetLayoutHeight( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutPrefWidth, "GetLayoutPrefWidth( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutPrefHeight, "GetLayoutPrefHeight( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutMinWidth, "GetLayoutMinWidth( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutMinHeight, "GetLayoutMinHeight( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutMaxWidth, "GetLayoutMaxWidth( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_GetLayoutMaxHeight, "GetLayoutMaxHeight( self: Craft::UIKit::UIWidget )=>int" },
  { dao_Craft_UIKit_UIWidget_SetOpacity, "SetOpacity( self: Craft::UIKit::UIWidget, opacity: float )" },
  { dao_Craft_UIKit_UIWidget_SetAutoOpacity, "SetAutoOpacity( self: Craft::UIKit::UIWidget, autoOpacity: float )" },
  { dao_Craft_UIKit_UIWidget_GetOpacity, "GetOpacity( self: Craft::UIKit::UIWidget )=>float" },
  { dao_Craft_UIKit_UIWidget_GetAutoOpacity, "GetAutoOpacity( self: Craft::UIKit::UIWidget )=>float" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIWidget_Delete( DaoValue *self )
{
	Craft::UIKit::UIWidget *obj = (Craft::UIKit::UIWidget*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIWidget_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIWidget *self = (DaoCxx_Craft_UIKit_UIWidget*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIWidget_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIWidget*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UIWidget*)data);
}

static DaoTypeCore Craft_UIKit_UIWidget_Core = 
{
  "Craft::UIKit::UIWidget",
  sizeof(Craft::UIKit::UIWidget),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UIWidget_Craft_Object,NULL },
  dao_Craft_UIKit_UIWidget_Nums,
  dao_Craft_UIKit_UIWidget_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIWidget_Delete,
  Dao_Craft_UIKit_UIWidget_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIWidget_Core = & Craft_UIKit_UIWidget_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_UIWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIWidget *_self = new DaoCxx_Craft_UIKit_UIWidget( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Load( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_filename = DaoValue_TryGetString( _p[1] );
  Craft::String filename( DString_GetData( __str_filename ), DString_Size( __str_filename ) );

  bool _Load = self->Load( filename );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Load );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetId( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  const Craft::String& _GetId = self->GetId(  );
  DaoProcess_PutBytes( _proc, (char*) _GetId.CString(), _GetId.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetParent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIWidget* dao_Craft_UIWidget_GetParent = self->GetParent(  );
  if( dao_Craft_UIWidget_GetParent ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_UIWidget_GetParent, dao_Craft_UIKit_UIWidget_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetContentRoot( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIWidget* dao_Craft_UIWidget_GetContentRoot = self->GetContentRoot(  );
  if( dao_Craft_UIWidget_GetContentRoot ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_UIWidget_GetContentRoot, dao_Craft_UIKit_UIWidget_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::IntRect _GetRect = self->GetRect(  );
  DaoProcess_PutCdataTC( _proc, (void*)new Craft::IntRect( _GetRect ), dao_Craft_IntRect_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetPreferredSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIPreferredSize* _GetPreferredSize = self->GetPreferredSize(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetPreferredSize, dao_Craft_UIKit_UIPreferredSize_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::String _GetText = self->GetText(  );
  DaoProcess_PutBytes( _proc, (char*) _GetText.CString(), _GetText.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetRect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::IntRect* r = (Craft::IntRect*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntRect_Core );

  self->SetRect( *r );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );
  int height = (int) DaoValue_TryGetInteger( _p[2] );

  self->SetSize( width, height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  self->SetPosition( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );

  self->SetText( text );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetSkinBg( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  self->SetSkinBg( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutParams( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UILayoutParams* params = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UILayoutParams_Core );

  self->SetLayoutParams( params );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetFontDescription( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIFontDescription* fd = (Craft::UIKit::UIFontDescription*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIFontDescription_Core );

  self->SetFontDescription( fd );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Remove( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->Remove(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_RemoveChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* child = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );
  bool cleanup = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->RemoveChild( child, cleanup );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_DeleteAllChildren( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->DeleteAllChildren(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetId( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  self->SetId( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Center( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->Center(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetGravity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_GRAVITY gravity = (Craft::UIKit::UI_GRAVITY) DaoValue_TryGetInteger( _p[1] );

  self->SetGravity( gravity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetAxis( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_AXIS axis = (Craft::UIKit::UI_AXIS) DaoValue_TryGetInteger( _p[1] );

  self->SetAxis( axis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  double value = (double) DaoValue_TryGetFloat( _p[1] );

  self->SetValue( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  double _GetValue = self->GetValue(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetValue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetFocus( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->SetFocus(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetFocus( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  bool _GetFocus = self->GetFocus(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetFocus );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetFocusRecursive( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->SetFocusRecursive(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_OnFocusChanged( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  bool focused = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->OnFocusChanged( focused );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_WIDGET_STATE state = (Craft::UIKit::UI_WIDGET_STATE) DaoValue_TryGetInteger( _p[1] );
  bool on = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetState( state, on );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetState( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_WIDGET_STATE state = (Craft::UIKit::UI_WIDGET_STATE) DaoValue_TryGetInteger( _p[1] );

  bool _GetState = self->GetState( state );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetState );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetVisibility( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_WIDGET_VISIBILITY visibility = (Craft::UIKit::UI_WIDGET_VISIBILITY) DaoValue_TryGetInteger( _p[1] );

  self->SetVisibility( visibility );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetVisibility( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UI_WIDGET_VISIBILITY _GetVisibility = self->GetVisibility(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetVisibility );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetStateRaw( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_WIDGET_STATE state = (Craft::UIKit::UI_WIDGET_STATE) DaoValue_TryGetInteger( _p[1] );

  self->SetStateRaw( state );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetStateRaw( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UI_WIDGET_STATE _GetStateRaw = self->GetStateRaw(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetStateRaw );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Invalidate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->Invalidate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Die( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->Die(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetDragObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIDragObject* object = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIDragObject_Core );

  self->SetDragObject( object );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetDragObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIDragObject* _GetDragObject = self->GetDragObject(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDragObject, dao_Craft_UIKit_UIDragObject_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetFirstChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIWidget* dao_Craft_UIWidget_GetFirstChild = self->GetFirstChild(  );
  if( dao_Craft_UIWidget_GetFirstChild ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_UIWidget_GetFirstChild, dao_Craft_UIKit_UIWidget_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetNext( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIWidget* dao_Craft_UIWidget_GetNext = self->GetNext(  );
  if( dao_Craft_UIWidget_GetNext ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_UIWidget_GetNext, dao_Craft_UIKit_UIWidget_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_IsAncestorOf( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* widget = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );

  bool _IsAncestorOf = self->IsAncestorOf( widget );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsAncestorOf );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetIsFocusable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetIsFocusable( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetWidget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  Craft::UIKit::UIWidget* dao_Craft_UIWidget_GetWidget = self->GetWidget( id );
  if( dao_Craft_UIWidget_GetWidget ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_UIWidget_GetWidget, dao_Craft_UIKit_UIWidget_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UIView* dao_Craft_UIWidget_GetView = self->GetView(  );
  if( dao_Craft_UIWidget_GetView ){
    DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_UIWidget_GetView, dao_Craft_UIKit_UIView_Core );
  }else{
    DaoProcess_PutNone( _proc );
  }
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_AddChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* child = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );

  self->AddChild( child );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_AddChildAfter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* child = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* otherChild = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_UIKit_UIWidget_Core );

  self->AddChildAfter( child, otherChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_AddChildBefore( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* child = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* otherChild = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_UIKit_UIWidget_Core );

  self->AddChildBefore( child, otherChild );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_AddChildRelative( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* child = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UI_WIDGET_Z_REL z = (Craft::UIKit::UI_WIDGET_Z_REL) DaoValue_TryGetInteger( _p[2] );
  Craft::UIKit::UIWidget* reference = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[3], dao_Craft_UIKit_UIWidget_Core );

  self->AddChildRelative( child, z, reference );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_InvalidateLayout( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->InvalidateLayout(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetDelegate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  Craft::UIKit::UIWidget* widget = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );

  self->SetDelegate( widget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetMultiTouch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  bool multiTouch = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetMultiTouch( multiTouch );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_IsMultiTouch( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  bool _IsMultiTouch = self->IsMultiTouch(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsMultiTouch );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetCaptured( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  bool _GetCaptured = self->GetCaptured(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetCaptured );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetCapturing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  bool capturing = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetCapturing( capturing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetCapturing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  bool _GetCapturing = self->GetCapturing(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetCapturing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_InvokeShortcut( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_shortcut = DaoValue_TryGetString( _p[1] );
  Craft::String shortcut( DString_GetData( __str_shortcut ), DString_Size( __str_shortcut ) );

  self->InvokeShortcut( shortcut );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetShortened( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  bool _GetShortened = self->GetShortened(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetShortened );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetShortened( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  bool shortened = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetShortened( shortened );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetTooltip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::String _GetTooltip = self->GetTooltip(  );
  DaoProcess_PutBytes( _proc, (char*) _GetTooltip.CString(), _GetTooltip.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetTooltip( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );

  self->SetTooltip( text );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Enable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->Enable(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_Disable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  self->Disable(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetFontId( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_fontId = DaoValue_TryGetString( _p[1] );
  Craft::String fontId( DString_GetData( __str_fontId ), DString_Size( __str_fontId ) );

  self->SetFontId( fontId );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetFontId( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::String _GetFontId = self->GetFontId(  );
  DaoProcess_PutBytes( _proc, (char*) _GetFontId.CString(), _GetFontId.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetFontSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int size = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetFontSize( size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetFontSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetFontSize = self->GetFontSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFontSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetX( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetX( x );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetY( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int y = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetY( y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetX( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetX = self->GetX(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetX );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetY( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetY = self->GetY(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetY );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetWidth = self->GetWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetHeight = self->GetHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutPrefWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutPrefHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutMinWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutMinHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutMaxWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetLayoutMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutMaxHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutWidth = self->GetLayoutWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutHeight = self->GetLayoutHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutPrefWidth = self->GetLayoutPrefWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutPrefWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutPrefHeight = self->GetLayoutPrefHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutPrefHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutMinWidth = self->GetLayoutMinWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutMinWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutMinHeight = self->GetLayoutMinHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutMinHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutMaxWidth = self->GetLayoutMaxWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutMaxWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetLayoutMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  int _GetLayoutMaxHeight = self->GetLayoutMaxHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetLayoutMaxHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetOpacity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  float opacity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetOpacity( opacity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_SetAutoOpacity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  float autoOpacity = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetAutoOpacity( autoOpacity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetOpacity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  float _GetOpacity = self->GetOpacity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetOpacity );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWidget_GetAutoOpacity( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* self = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  float _GetAutoOpacity = self->GetAutoOpacity(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetAutoOpacity );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIView_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIView_UIView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIView_Meths[] = 
{
  { dao_Craft_UIKit_UIView_UIView_dao_2, "UIView(  )=>Craft::UIKit::UIView" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIView_Delete( DaoValue *self )
{
	Craft::UIKit::UIView *obj = (Craft::UIKit::UIView*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIView_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIView *self = (DaoCxx_Craft_UIKit_UIView*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIView_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIView*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIView*)data);
}

static DaoTypeCore Craft_UIKit_UIView_Core = 
{
  "Craft::UIKit::UIView",
  sizeof(Craft::UIKit::UIView),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIView_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIView_Nums,
  dao_Craft_UIKit_UIView_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIView_Delete,
  Dao_Craft_UIKit_UIView_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIView_Core = & Craft_UIKit_UIView_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIView_UIView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UIView *_self = new DaoCxx_Craft_UIKit_UIView( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UILayoutParams_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UILayoutParams_UILayoutParams_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayoutParams_SetWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayoutParams_SetHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayoutParams_SetMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayoutParams_SetMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayoutParams_SetMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayoutParams_SetMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UILayoutParams_Meths[] = 
{
  { dao_Craft_UIKit_UILayoutParams_UILayoutParams_dao_2, "UILayoutParams(  )=>Craft::UIKit::UILayoutParams" },
  { dao_Craft_UIKit_UILayoutParams_SetWidth, "SetWidth( self: Craft::UIKit::UILayoutParams, width: int )" },
  { dao_Craft_UIKit_UILayoutParams_SetHeight, "SetHeight( self: Craft::UIKit::UILayoutParams, height: int )" },
  { dao_Craft_UIKit_UILayoutParams_SetMinWidth, "SetMinWidth( self: Craft::UIKit::UILayoutParams, width: int )" },
  { dao_Craft_UIKit_UILayoutParams_SetMinHeight, "SetMinHeight( self: Craft::UIKit::UILayoutParams, height: int )" },
  { dao_Craft_UIKit_UILayoutParams_SetMaxWidth, "SetMaxWidth( self: Craft::UIKit::UILayoutParams, width: int )" },
  { dao_Craft_UIKit_UILayoutParams_SetMaxHeight, "SetMaxHeight( self: Craft::UIKit::UILayoutParams, height: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UILayoutParams_Delete( DaoValue *self )
{
	Craft::UIKit::UILayoutParams *obj = (Craft::UIKit::UILayoutParams*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UILayoutParams_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UILayoutParams *self = (DaoCxx_Craft_UIKit_UILayoutParams*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UILayoutParams_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UILayoutParams*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UILayoutParams*)data);
}

static DaoTypeCore Craft_UIKit_UILayoutParams_Core = 
{
  "Craft::UIKit::UILayoutParams",
  sizeof(Craft::UIKit::UILayoutParams),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UILayoutParams_Craft_Object,NULL },
  dao_Craft_UIKit_UILayoutParams_Nums,
  dao_Craft_UIKit_UILayoutParams_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UILayoutParams_Delete,
  Dao_Craft_UIKit_UILayoutParams_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UILayoutParams_Core = & Craft_UIKit_UILayoutParams_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_UILayoutParams_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UILayoutParams *_self = new DaoCxx_Craft_UIKit_UILayoutParams( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_SetWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayoutParams* self = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayoutParams_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_SetHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayoutParams* self = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayoutParams_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_SetMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayoutParams* self = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayoutParams_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMinWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_SetMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayoutParams* self = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayoutParams_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMinHeight( height );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_SetMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayoutParams* self = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayoutParams_Core );
  int width = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxWidth( width );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayoutParams_SetMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayoutParams* self = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayoutParams_Core );
  int height = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxHeight( height );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIFontDescription_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIFontDescription_UIFontDescription_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIFontDescription_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIFontDescription_SetId( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIFontDescription_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIFontDescription_Meths[] = 
{
  { dao_Craft_UIKit_UIFontDescription_UIFontDescription_dao_2, "UIFontDescription(  )=>Craft::UIKit::UIFontDescription" },
  { dao_Craft_UIKit_UIFontDescription_GetSize, "GetSize( self: Craft::UIKit::UIFontDescription )=>int" },
  { dao_Craft_UIKit_UIFontDescription_SetId, "SetId( self: Craft::UIKit::UIFontDescription, id: string )" },
  { dao_Craft_UIKit_UIFontDescription_SetSize, "SetSize( self: Craft::UIKit::UIFontDescription, size: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIFontDescription_Delete( DaoValue *self )
{
	Craft::UIKit::UIFontDescription *obj = (Craft::UIKit::UIFontDescription*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIFontDescription_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIFontDescription *self = (DaoCxx_Craft_UIKit_UIFontDescription*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIFontDescription_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIFontDescription*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UIFontDescription*)data);
}

static DaoTypeCore Craft_UIKit_UIFontDescription_Core = 
{
  "Craft::UIKit::UIFontDescription",
  sizeof(Craft::UIKit::UIFontDescription),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UIFontDescription_Craft_Object,NULL },
  dao_Craft_UIKit_UIFontDescription_Nums,
  dao_Craft_UIKit_UIFontDescription_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIFontDescription_Delete,
  Dao_Craft_UIKit_UIFontDescription_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIFontDescription_Core = & Craft_UIKit_UIFontDescription_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIFontDescription_UIFontDescription_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UIFontDescription *_self = new DaoCxx_Craft_UIKit_UIFontDescription( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIFontDescription_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIFontDescription* self = (Craft::UIKit::UIFontDescription*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIFontDescription_Core );

  int _GetSize = self->GetSize(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIFontDescription_SetId( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIFontDescription* self = (Craft::UIKit::UIFontDescription*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIFontDescription_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  self->SetId( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIFontDescription_SetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIFontDescription* self = (Craft::UIKit::UIFontDescription*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIFontDescription_Core );
  int size = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetSize( size );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISelectList_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISelectList_UISelectList_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SetFilter( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SetSource( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_InvalidateList( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SetValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_GetValue( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_GetHoverItemID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_GetSelectedItemID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_ScrollToSelectedItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_GetItemID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_GetItemSelected( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_GetNumItems( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SelectItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SelectNextItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SelectPreviousItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_SetUIListView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectList_HandleUIUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISelectList_Meths[] = 
{
  { dao_Craft_UIKit_UISelectList_UISelectList_dao_2, "UISelectList( createWidget: bool =true )=>Craft::UIKit::UISelectList" },
  { dao_Craft_UIKit_UISelectList_SetFilter, "SetFilter( self: Craft::UIKit::UISelectList, filter: string )" },
  { dao_Craft_UIKit_UISelectList_SetSource, "SetSource( self: Craft::UIKit::UISelectList, source: Craft::UIKit::UISelectItemSource )" },
  { dao_Craft_UIKit_UISelectList_InvalidateList, "InvalidateList( self: Craft::UIKit::UISelectList )" },
  { dao_Craft_UIKit_UISelectList_SetValue, "SetValue( self: Craft::UIKit::UISelectList, value: int )" },
  { dao_Craft_UIKit_UISelectList_GetValue, "GetValue( self: Craft::UIKit::UISelectList )=>float" },
  { dao_Craft_UIKit_UISelectList_GetHoverItemID, "GetHoverItemID( self: Craft::UIKit::UISelectList )=>string" },
  { dao_Craft_UIKit_UISelectList_GetSelectedItemID, "GetSelectedItemID( self: Craft::UIKit::UISelectList )=>string" },
  { dao_Craft_UIKit_UISelectList_ScrollToSelectedItem, "ScrollToSelectedItem( self: Craft::UIKit::UISelectList )" },
  { dao_Craft_UIKit_UISelectList_GetItemID, "GetItemID( self: Craft::UIKit::UISelectList, index: int )=>string" },
  { dao_Craft_UIKit_UISelectList_GetItemSelected, "GetItemSelected( self: Craft::UIKit::UISelectList, index: int )=>bool" },
  { dao_Craft_UIKit_UISelectList_GetNumItems, "GetNumItems( self: Craft::UIKit::UISelectList )=>int" },
  { dao_Craft_UIKit_UISelectList_SelectItem, "SelectItem( self: Craft::UIKit::UISelectList, index: int, selected: bool =true )" },
  { dao_Craft_UIKit_UISelectList_SelectNextItem, "SelectNextItem( self: Craft::UIKit::UISelectList )" },
  { dao_Craft_UIKit_UISelectList_SelectPreviousItem, "SelectPreviousItem( self: Craft::UIKit::UISelectList )" },
  { dao_Craft_UIKit_UISelectList_SetUIListView, "SetUIListView( self: Craft::UIKit::UISelectList, value: bool )" },
  { dao_Craft_UIKit_UISelectList_HandleUIUpdate, "HandleUIUpdate( self: Craft::UIKit::UISelectList, eventType: Craft::StringHash, eventData: Craft::VariantMap )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISelectList_Delete( DaoValue *self )
{
	Craft::UIKit::UISelectList *obj = (Craft::UIKit::UISelectList*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISelectList_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISelectList *self = (DaoCxx_Craft_UIKit_UISelectList*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISelectList_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISelectList*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UISelectList*)data);
}

static DaoTypeCore Craft_UIKit_UISelectList_Core = 
{
  "Craft::UIKit::UISelectList",
  sizeof(Craft::UIKit::UISelectList),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UISelectList_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UISelectList_Nums,
  dao_Craft_UIKit_UISelectList_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISelectList_Delete,
  Dao_Craft_UIKit_UISelectList_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISelectList_Core = & Craft_UIKit_UISelectList_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_UISelectList_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UISelectList *_self = new DaoCxx_Craft_UIKit_UISelectList( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SetFilter( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  DString *__str_filter = DaoValue_TryGetString( _p[1] );
  Craft::String filter( DString_GetData( __str_filter ), DString_Size( __str_filter ) );

  self->SetFilter( filter );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SetSource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  Craft::UIKit::UISelectItemSource* source = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UISelectItemSource_Core );

  self->SetSource( source );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_InvalidateList( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  self->InvalidateList(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SetValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  int value = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetValue( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_GetValue( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  double _GetValue = self->GetValue(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetValue );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_GetHoverItemID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  Craft::String _GetHoverItemID = self->GetHoverItemID(  );
  DaoProcess_PutBytes( _proc, (char*) _GetHoverItemID.CString(), _GetHoverItemID.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_GetSelectedItemID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  Craft::String _GetSelectedItemID = self->GetSelectedItemID(  );
  DaoProcess_PutBytes( _proc, (char*) _GetSelectedItemID.CString(), _GetSelectedItemID.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_ScrollToSelectedItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  self->ScrollToSelectedItem(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_GetItemID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  int index = (int) DaoValue_TryGetInteger( _p[1] );

  Craft::String _GetItemID = self->GetItemID( index );
  DaoProcess_PutBytes( _proc, (char*) _GetItemID.CString(), _GetItemID.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_GetItemSelected( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  int index = (int) DaoValue_TryGetInteger( _p[1] );

  bool _GetItemSelected = self->GetItemSelected( index );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetItemSelected );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_GetNumItems( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  int _GetNumItems = self->GetNumItems(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumItems );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SelectItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  int index = (int) DaoValue_TryGetInteger( _p[1] );
  bool selected = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SelectItem( index, selected );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SelectNextItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  self->SelectNextItem(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SelectPreviousItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );

  self->SelectPreviousItem(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_SetUIListView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectList* self = (Craft::UIKit::UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUIListView( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectList_HandleUIUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  DaoCxx_Craft_UIKit_UISelectList* self = (DaoCxx_Craft_UIKit_UISelectList*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectList_Core );
  Craft::StringHash* eventType = (Craft::StringHash*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_StringHash_Core );
  Craft::VariantMap* eventData = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_VariantMap_Core );

  self->DaoWrap_HandleUIUpdate( *eventType, *eventData );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIPreferredSize_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIPreferredSize_UIPreferredSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_GetSizeDep( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPreferredSize_SetSizeDep( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIPreferredSize_Meths[] = 
{
  { dao_Craft_UIKit_UIPreferredSize_UIPreferredSize_dao_2, "UIPreferredSize( w: int =0, h: int =0 )=>Craft::UIKit::UIPreferredSize" },
  { dao_Craft_UIKit_UIPreferredSize_GetMinWidth, "GetMinWidth( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_GetMinHeight, "GetMinHeight( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_GetMaxWidth, "GetMaxWidth( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_GetMaxHeight, "GetMaxHeight( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_GetPrefWidth, "GetPrefWidth( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_GetPrefHeight, "GetPrefHeight( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_GetSizeDep, "GetSizeDep( self: Craft::UIKit::UIPreferredSize )=>int" },
  { dao_Craft_UIKit_UIPreferredSize_SetMinWidth, "SetMinWidth( self: Craft::UIKit::UIPreferredSize, w: int )" },
  { dao_Craft_UIKit_UIPreferredSize_SetMinHeight, "SetMinHeight( self: Craft::UIKit::UIPreferredSize, h: int )" },
  { dao_Craft_UIKit_UIPreferredSize_SetMaxWidth, "SetMaxWidth( self: Craft::UIKit::UIPreferredSize, w: int )" },
  { dao_Craft_UIKit_UIPreferredSize_SetMaxHeight, "SetMaxHeight( self: Craft::UIKit::UIPreferredSize, h: int )" },
  { dao_Craft_UIKit_UIPreferredSize_SetPrefWidth, "SetPrefWidth( self: Craft::UIKit::UIPreferredSize, w: int )" },
  { dao_Craft_UIKit_UIPreferredSize_SetPrefHeight, "SetPrefHeight( self: Craft::UIKit::UIPreferredSize, h: int )" },
  { dao_Craft_UIKit_UIPreferredSize_SetSizeDep, "SetSizeDep( self: Craft::UIKit::UIPreferredSize, dep: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIPreferredSize_Delete( DaoValue *self )
{
	Craft::UIKit::UIPreferredSize *obj = (Craft::UIKit::UIPreferredSize*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIPreferredSize_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIPreferredSize *self = (DaoCxx_Craft_UIKit_UIPreferredSize*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIPreferredSize_Craft_RefCounted( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIPreferredSize*>((Craft::RefCounted*)data);
	return dynamic_cast<Craft::RefCounted*>((Craft::UIKit::UIPreferredSize*)data);
}

static DaoTypeCore Craft_UIKit_UIPreferredSize_Core = 
{
  "Craft::UIKit::UIPreferredSize",
  sizeof(Craft::UIKit::UIPreferredSize),
  { dao_Craft_RefCounted_Core, NULL },
  { dao_cast_Craft_UIKit_UIPreferredSize_Craft_RefCounted,NULL },
  dao_Craft_UIKit_UIPreferredSize_Nums,
  dao_Craft_UIKit_UIPreferredSize_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIPreferredSize_Delete,
  Dao_Craft_UIKit_UIPreferredSize_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIPreferredSize_Core = & Craft_UIKit_UIPreferredSize_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_UIPreferredSize_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  int w = (int) DaoValue_TryGetInteger( _p[0] );
  int h = (int) DaoValue_TryGetInteger( _p[1] );

  DaoCxx_Craft_UIKit_UIPreferredSize *_self = new DaoCxx_Craft_UIKit_UIPreferredSize( w, h );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  int _GetMinWidth = self->GetMinWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMinWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  int _GetMinHeight = self->GetMinHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMinHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  int _GetMaxWidth = self->GetMaxWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  int _GetMaxHeight = self->GetMaxHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  int _GetPrefWidth = self->GetPrefWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPrefWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  int _GetPrefHeight = self->GetPrefHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetPrefHeight );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_GetSizeDep( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );

  Craft::UIKit::UI_SIZE_DEP _GetSizeDep = self->GetSizeDep(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSizeDep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetMinWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  int w = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMinWidth( w );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetMinHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  int h = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMinHeight( h );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetMaxWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  int w = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxWidth( w );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetMaxHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  int h = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxHeight( h );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetPrefWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  int w = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetPrefWidth( w );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetPrefHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  int h = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetPrefHeight( h );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPreferredSize_SetSizeDep( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPreferredSize* self = (Craft::UIKit::UIPreferredSize*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPreferredSize_Core );
  Craft::UIKit::UI_SIZE_DEP dep = (Craft::UIKit::UI_SIZE_DEP) DaoValue_TryGetInteger( _p[1] );

  self->SetSizeDep( dep );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIDragObject_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIDragObject_UIDragObject_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_GetText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_GetIcon( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_GetObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_SetText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_SetIcon( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_SetObject( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragObject_AddFilename( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIDragObject_Meths[] = 
{
  { dao_Craft_UIKit_UIDragObject_UIDragObject_dao_2, "UIDragObject( object: Craft::Object, text: string ='', icon: string ='' )=>Craft::UIKit::UIDragObject" },
  { dao_Craft_UIKit_UIDragObject_GetText, "GetText( self: Craft::UIKit::UIDragObject )=>string" },
  { dao_Craft_UIKit_UIDragObject_GetIcon, "GetIcon( self: Craft::UIKit::UIDragObject )=>string" },
  { dao_Craft_UIKit_UIDragObject_GetObject, "GetObject( self: Craft::UIKit::UIDragObject )=>Craft::Object" },
  { dao_Craft_UIKit_UIDragObject_SetText, "SetText( self: Craft::UIKit::UIDragObject, text: string )" },
  { dao_Craft_UIKit_UIDragObject_SetIcon, "SetIcon( self: Craft::UIKit::UIDragObject, icon: string )" },
  { dao_Craft_UIKit_UIDragObject_SetObject, "SetObject( self: Craft::UIKit::UIDragObject, object: Craft::Object )" },
  { dao_Craft_UIKit_UIDragObject_AddFilename, "AddFilename( self: Craft::UIKit::UIDragObject, filename: string )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIDragObject_Delete( DaoValue *self )
{
	Craft::UIKit::UIDragObject *obj = (Craft::UIKit::UIDragObject*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIDragObject_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIDragObject *self = (DaoCxx_Craft_UIKit_UIDragObject*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIDragObject_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIDragObject*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UIDragObject*)data);
}

static DaoTypeCore Craft_UIKit_UIDragObject_Core = 
{
  "Craft::UIKit::UIDragObject",
  sizeof(Craft::UIKit::UIDragObject),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UIDragObject_Craft_Object,NULL },
  dao_Craft_UIKit_UIDragObject_Nums,
  dao_Craft_UIKit_UIDragObject_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIDragObject_Delete,
  Dao_Craft_UIKit_UIDragObject_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIDragObject_Core = & Craft_UIKit_UIDragObject_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_UIDragObject_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  Craft::Object* object = (Craft::Object*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Object_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );
  DString *__str_icon = DaoValue_TryGetString( _p[2] );
  Craft::String icon( DString_GetData( __str_icon ), DString_Size( __str_icon ) );

  DaoCxx_Craft_UIKit_UIDragObject *_self = new DaoCxx_Craft_UIKit_UIDragObject( context, object, text, icon );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_GetText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );

  const Craft::String& _GetText = self->GetText(  );
  DaoProcess_PutBytes( _proc, (char*) _GetText.CString(), _GetText.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_GetIcon( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );

  const Craft::String& _GetIcon = self->GetIcon(  );
  DaoProcess_PutBytes( _proc, (char*) _GetIcon.CString(), _GetIcon.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_GetObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );

  Craft::Object* _GetObject = self->GetObject(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetObject, dao_Craft_Object_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_SetText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );

  self->SetText( text );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_SetIcon( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );
  DString *__str_icon = DaoValue_TryGetString( _p[1] );
  Craft::String icon( DString_GetData( __str_icon ), DString_Size( __str_icon ) );

  self->SetIcon( icon );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_SetObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );
  Craft::Object* object = (Craft::Object*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Object_Core );

  self->SetObject( object );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragObject_AddFilename( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragObject* self = (Craft::UIKit::UIDragObject*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragObject_Core );
  DString *__str_filename = DaoValue_TryGetString( _p[1] );
  Craft::String filename( DString_GetData( __str_filename ), DString_Size( __str_filename ) );

  self->AddFilename( filename );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIButton_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIButton_UIButton_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIButton_SetSqueezable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIButton_SetEmulationButton( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIButton_SetURLEnabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIButton_SetToggleMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIButton_GetToggleMode( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIButton_Meths[] = 
{
  { dao_Craft_UIKit_UIButton_UIButton_dao_2, "UIButton( createWidget: bool =true )=>Craft::UIKit::UIButton" },
  { dao_Craft_UIKit_UIButton_SetSqueezable, "SetSqueezable( self: Craft::UIKit::UIButton, value: bool )" },
  { dao_Craft_UIKit_UIButton_SetEmulationButton, "SetEmulationButton( self: Craft::UIKit::UIButton, button: int )" },
  { dao_Craft_UIKit_UIButton_SetURLEnabled, "SetURLEnabled( self: Craft::UIKit::UIButton, enabled: bool )" },
  { dao_Craft_UIKit_UIButton_SetToggleMode, "SetToggleMode( self: Craft::UIKit::UIButton, toggle: bool )" },
  { dao_Craft_UIKit_UIButton_GetToggleMode, "GetToggleMode( self: Craft::UIKit::UIButton )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIButton_Delete( DaoValue *self )
{
	Craft::UIKit::UIButton *obj = (Craft::UIKit::UIButton*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIButton_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIButton *self = (DaoCxx_Craft_UIKit_UIButton*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIButton_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIButton*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIButton*)data);
}

static DaoTypeCore Craft_UIKit_UIButton_Core = 
{
  "Craft::UIKit::UIButton",
  sizeof(Craft::UIKit::UIButton),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIButton_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIButton_Nums,
  dao_Craft_UIKit_UIButton_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIButton_Delete,
  Dao_Craft_UIKit_UIButton_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIButton_Core = & Craft_UIKit_UIButton_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIButton_UIButton_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIButton *_self = new DaoCxx_Craft_UIKit_UIButton( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIButton_SetSqueezable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIButton* self = (Craft::UIKit::UIButton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIButton_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetSqueezable( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIButton_SetEmulationButton( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIButton* self = (Craft::UIKit::UIButton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIButton_Core );
  int button = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetEmulationButton( button );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIButton_SetURLEnabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIButton* self = (Craft::UIKit::UIButton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIButton_Core );
  bool enabled = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetURLEnabled( enabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIButton_SetToggleMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIButton* self = (Craft::UIKit::UIButton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIButton_Core );
  bool toggle = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetToggleMode( toggle );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIButton_GetToggleMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIButton* self = (Craft::UIKit::UIButton*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIButton_Core );

  bool _GetToggleMode = self->GetToggleMode(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetToggleMode );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UICheckBox_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UICheckBox_UICheckBox_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UICheckBox_Meths[] = 
{
  { dao_Craft_UIKit_UICheckBox_UICheckBox_dao_2, "UICheckBox( createWidget: bool =true )=>Craft::UIKit::UICheckBox" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UICheckBox_Delete( DaoValue *self )
{
	Craft::UIKit::UICheckBox *obj = (Craft::UIKit::UICheckBox*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UICheckBox_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UICheckBox *self = (DaoCxx_Craft_UIKit_UICheckBox*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UICheckBox_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UICheckBox*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UICheckBox*)data);
}

static DaoTypeCore Craft_UIKit_UICheckBox_Core = 
{
  "Craft::UIKit::UICheckBox",
  sizeof(Craft::UIKit::UICheckBox),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UICheckBox_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UICheckBox_Nums,
  dao_Craft_UIKit_UICheckBox_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UICheckBox_Delete,
  Dao_Craft_UIKit_UICheckBox_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UICheckBox_Core = & Craft_UIKit_UICheckBox_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UICheckBox_UICheckBox_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UICheckBox *_self = new DaoCxx_Craft_UIKit_UICheckBox( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIClickLabel_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIClickLabel_UIClickLabel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIClickLabel_Meths[] = 
{
  { dao_Craft_UIKit_UIClickLabel_UIClickLabel_dao_2, "UIClickLabel( createWidget: bool =true )=>Craft::UIKit::UIClickLabel" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIClickLabel_Delete( DaoValue *self )
{
	Craft::UIKit::UIClickLabel *obj = (Craft::UIKit::UIClickLabel*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIClickLabel_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIClickLabel *self = (DaoCxx_Craft_UIKit_UIClickLabel*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIClickLabel_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIClickLabel*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIClickLabel*)data);
}

static DaoTypeCore Craft_UIKit_UIClickLabel_Core = 
{
  "Craft::UIKit::UIClickLabel",
  sizeof(Craft::UIKit::UIClickLabel),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIClickLabel_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIClickLabel_Nums,
  dao_Craft_UIKit_UIClickLabel_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIClickLabel_Delete,
  Dao_Craft_UIKit_UIClickLabel_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIClickLabel_Core = & Craft_UIKit_UIClickLabel_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIClickLabel_UIClickLabel_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIClickLabel *_self = new DaoCxx_Craft_UIKit_UIClickLabel( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIContainer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIContainer_UIContainer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIContainer_Meths[] = 
{
  { dao_Craft_UIKit_UIContainer_UIContainer_dao_2, "UIContainer( createWidget: bool =true )=>Craft::UIKit::UIContainer" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIContainer_Delete( DaoValue *self )
{
	Craft::UIKit::UIContainer *obj = (Craft::UIKit::UIContainer*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIContainer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIContainer *self = (DaoCxx_Craft_UIKit_UIContainer*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIContainer_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIContainer*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIContainer*)data);
}

static DaoTypeCore Craft_UIKit_UIContainer_Core = 
{
  "Craft::UIKit::UIContainer",
  sizeof(Craft::UIKit::UIContainer),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIContainer_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIContainer_Nums,
  dao_Craft_UIKit_UIContainer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIContainer_Delete,
  Dao_Craft_UIKit_UIContainer_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIContainer_Core = & Craft_UIKit_UIContainer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIContainer_UIContainer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIContainer *_self = new DaoCxx_Craft_UIKit_UIContainer( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIDimmer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIDimmer_UIDimmer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIDimmer_Meths[] = 
{
  { dao_Craft_UIKit_UIDimmer_UIDimmer_dao_2, "UIDimmer( createWidget: bool =true )=>Craft::UIKit::UIDimmer" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIDimmer_Delete( DaoValue *self )
{
	Craft::UIKit::UIDimmer *obj = (Craft::UIKit::UIDimmer*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIDimmer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIDimmer *self = (DaoCxx_Craft_UIKit_UIDimmer*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIDimmer_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIDimmer*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIDimmer*)data);
}

static DaoTypeCore Craft_UIKit_UIDimmer_Core = 
{
  "Craft::UIKit::UIDimmer",
  sizeof(Craft::UIKit::UIDimmer),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIDimmer_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIDimmer_Nums,
  dao_Craft_UIKit_UIDimmer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIDimmer_Delete,
  Dao_Craft_UIKit_UIDimmer_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIDimmer_Core = & Craft_UIKit_UIDimmer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDimmer_UIDimmer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIDimmer *_self = new DaoCxx_Craft_UIKit_UIDimmer( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIDragDrop_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIDragDrop_UIDragDrop_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragDrop_FileDragEntered( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragDrop_FileDragAddFile( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragDrop_FileDragConclude( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIDragDrop_GetDraggingObject( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIDragDrop_Meths[] = 
{
  { dao_Craft_UIKit_UIDragDrop_UIDragDrop_dao_2, "UIDragDrop(  )=>Craft::UIKit::UIDragDrop" },
  { dao_Craft_UIKit_UIDragDrop_FileDragEntered, "FileDragEntered( self: Craft::UIKit::UIDragDrop )" },
  { dao_Craft_UIKit_UIDragDrop_FileDragAddFile, "FileDragAddFile( self: Craft::UIKit::UIDragDrop, filename: string )" },
  { dao_Craft_UIKit_UIDragDrop_FileDragConclude, "FileDragConclude( self: Craft::UIKit::UIDragDrop )" },
  { dao_Craft_UIKit_UIDragDrop_GetDraggingObject, "GetDraggingObject( self: Craft::UIKit::UIDragDrop )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIDragDrop_Delete( DaoValue *self )
{
	Craft::UIKit::UIDragDrop *obj = (Craft::UIKit::UIDragDrop*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIDragDrop_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIDragDrop *self = (DaoCxx_Craft_UIKit_UIDragDrop*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIDragDrop_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIDragDrop*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UIDragDrop*)data);
}

static DaoTypeCore Craft_UIKit_UIDragDrop_Core = 
{
  "Craft::UIKit::UIDragDrop",
  sizeof(Craft::UIKit::UIDragDrop),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UIDragDrop_Craft_Object,NULL },
  dao_Craft_UIKit_UIDragDrop_Nums,
  dao_Craft_UIKit_UIDragDrop_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIDragDrop_Delete,
  Dao_Craft_UIKit_UIDragDrop_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIDragDrop_Core = & Craft_UIKit_UIDragDrop_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragDrop_UIDragDrop_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UIDragDrop *_self = new DaoCxx_Craft_UIKit_UIDragDrop( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragDrop_FileDragEntered( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragDrop* self = (Craft::UIKit::UIDragDrop*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragDrop_Core );

  self->FileDragEntered(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragDrop_FileDragAddFile( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragDrop* self = (Craft::UIKit::UIDragDrop*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragDrop_Core );
  DString *__str_filename = DaoValue_TryGetString( _p[1] );
  Craft::String filename( DString_GetData( __str_filename ), DString_Size( __str_filename ) );

  self->FileDragAddFile( filename );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragDrop_FileDragConclude( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragDrop* self = (Craft::UIKit::UIDragDrop*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragDrop_Core );

  self->FileDragConclude(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIDragDrop_GetDraggingObject( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIDragDrop* self = (Craft::UIKit::UIDragDrop*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIDragDrop_Core );

  bool _GetDraggingObject = self->GetDraggingObject(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetDraggingObject );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIEditField_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIEditField_UIEditField_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_AppendText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetTextAlign( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_GetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetEditType( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetReadOnly( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetStyling( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetMultiline( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_Reformat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_ScrollTo( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_SetWrapping( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIEditField_GetWrapping( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIEditField_Meths[] = 
{
  { dao_Craft_UIKit_UIEditField_UIEditField_dao_2, "UIEditField( createWidget: bool =true )=>Craft::UIKit::UIEditField" },
  { dao_Craft_UIKit_UIEditField_AppendText, "AppendText( self: Craft::UIKit::UIEditField, text: string )" },
  { dao_Craft_UIKit_UIEditField_SetTextAlign, "SetTextAlign( self: Craft::UIKit::UIEditField, align: int )" },
  { dao_Craft_UIKit_UIEditField_SetAdaptToContentSize, "SetAdaptToContentSize( self: Craft::UIKit::UIEditField, adapt: bool )" },
  { dao_Craft_UIKit_UIEditField_GetAdaptToContentSize, "GetAdaptToContentSize( self: Craft::UIKit::UIEditField )=>bool" },
  { dao_Craft_UIKit_UIEditField_SetEditType, "SetEditType( self: Craft::UIKit::UIEditField, type: int )" },
  { dao_Craft_UIKit_UIEditField_SetReadOnly, "SetReadOnly( self: Craft::UIKit::UIEditField, readonly: bool )" },
  { dao_Craft_UIKit_UIEditField_SetStyling, "SetStyling( self: Craft::UIKit::UIEditField, styling: bool )" },
  { dao_Craft_UIKit_UIEditField_SetMultiline, "SetMultiline( self: Craft::UIKit::UIEditField, multiline: bool )" },
  { dao_Craft_UIKit_UIEditField_Reformat, "Reformat( self: Craft::UIKit::UIEditField, update_fragments: bool =false )" },
  { dao_Craft_UIKit_UIEditField_ScrollTo, "ScrollTo( self: Craft::UIKit::UIEditField, x: int, y: int )" },
  { dao_Craft_UIKit_UIEditField_SetWrapping, "SetWrapping( self: Craft::UIKit::UIEditField, wrap: bool )" },
  { dao_Craft_UIKit_UIEditField_GetWrapping, "GetWrapping( self: Craft::UIKit::UIEditField )=>bool" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIEditField_Delete( DaoValue *self )
{
	Craft::UIKit::UIEditField *obj = (Craft::UIKit::UIEditField*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIEditField_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIEditField *self = (DaoCxx_Craft_UIKit_UIEditField*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIEditField_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIEditField*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIEditField*)data);
}

static DaoTypeCore Craft_UIKit_UIEditField_Core = 
{
  "Craft::UIKit::UIEditField",
  sizeof(Craft::UIKit::UIEditField),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIEditField_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIEditField_Nums,
  dao_Craft_UIKit_UIEditField_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIEditField_Delete,
  Dao_Craft_UIKit_UIEditField_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIEditField_Core = & Craft_UIKit_UIEditField_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_UIEditField_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIEditField *_self = new DaoCxx_Craft_UIKit_UIEditField( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_AppendText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );

  self->AppendText( text );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetTextAlign( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  Craft::UIKit::UI_TEXT_ALIGN align = (Craft::UIKit::UI_TEXT_ALIGN) DaoValue_TryGetInteger( _p[1] );

  self->SetTextAlign( align );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  bool adapt = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAdaptToContentSize( adapt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_GetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );

  bool _GetAdaptToContentSize = self->GetAdaptToContentSize(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAdaptToContentSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetEditType( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  Craft::UIKit::UI_EDIT_TYPE type = (Craft::UIKit::UI_EDIT_TYPE) DaoValue_TryGetInteger( _p[1] );

  self->SetEditType( type );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetReadOnly( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  bool readonly = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetReadOnly( readonly );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetStyling( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  bool styling = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetStyling( styling );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetMultiline( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  bool multiline = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetMultiline( multiline );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_Reformat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  bool update_fragments = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->Reformat( update_fragments );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_ScrollTo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  self->ScrollTo( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_SetWrapping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );
  bool wrap = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetWrapping( wrap );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIEditField_GetWrapping( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIEditField* self = (Craft::UIKit::UIEditField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIEditField_Core );

  bool _GetWrapping = self->GetWrapping(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetWrapping );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIImageWidget_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIImageWidget_UIImageWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIImageWidget_SetImage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIImageWidget_GetImageWidth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIImageWidget_GetImageHeight( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIImageWidget_Meths[] = 
{
  { dao_Craft_UIKit_UIImageWidget_UIImageWidget_dao_2, "UIImageWidget( createWidget: bool =true )=>Craft::UIKit::UIImageWidget" },
  { dao_Craft_UIKit_UIImageWidget_SetImage, "SetImage( self: Craft::UIKit::UIImageWidget, imagePath: string )" },
  { dao_Craft_UIKit_UIImageWidget_GetImageWidth, "GetImageWidth( self: Craft::UIKit::UIImageWidget )=>int" },
  { dao_Craft_UIKit_UIImageWidget_GetImageHeight, "GetImageHeight( self: Craft::UIKit::UIImageWidget )=>int" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIImageWidget_Delete( DaoValue *self )
{
	Craft::UIKit::UIImageWidget *obj = (Craft::UIKit::UIImageWidget*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIImageWidget_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIImageWidget *self = (DaoCxx_Craft_UIKit_UIImageWidget*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIImageWidget_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIImageWidget*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIImageWidget*)data);
}

static DaoTypeCore Craft_UIKit_UIImageWidget_Core = 
{
  "Craft::UIKit::UIImageWidget",
  sizeof(Craft::UIKit::UIImageWidget),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIImageWidget_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIImageWidget_Nums,
  dao_Craft_UIKit_UIImageWidget_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIImageWidget_Delete,
  Dao_Craft_UIKit_UIImageWidget_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIImageWidget_Core = & Craft_UIKit_UIImageWidget_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIImageWidget_UIImageWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIImageWidget *_self = new DaoCxx_Craft_UIKit_UIImageWidget( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIImageWidget_SetImage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIImageWidget* self = (Craft::UIKit::UIImageWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIImageWidget_Core );
  DString *__str_imagePath = DaoValue_TryGetString( _p[1] );
  Craft::String imagePath( DString_GetData( __str_imagePath ), DString_Size( __str_imagePath ) );

  self->SetImage( imagePath );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIImageWidget_GetImageWidth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIImageWidget* self = (Craft::UIKit::UIImageWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIImageWidget_Core );

  int _GetImageWidth = self->GetImageWidth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetImageWidth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIImageWidget_GetImageHeight( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIImageWidget* self = (Craft::UIKit::UIImageWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIImageWidget_Core );

  int _GetImageHeight = self->GetImageHeight(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetImageHeight );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIInlineSelect_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIInlineSelect_UIInlineSelect_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIInlineSelect_SetLimits( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIInlineSelect_SetEditFieldLayoutParams( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIInlineSelect_Meths[] = 
{
  { dao_Craft_UIKit_UIInlineSelect_UIInlineSelect_dao_2, "UIInlineSelect( createWidget: bool =true )=>Craft::UIKit::UIInlineSelect" },
  { dao_Craft_UIKit_UIInlineSelect_SetLimits, "SetLimits( self: Craft::UIKit::UIInlineSelect, minimum: float, maximum: float )" },
  { dao_Craft_UIKit_UIInlineSelect_SetEditFieldLayoutParams, "SetEditFieldLayoutParams( self: Craft::UIKit::UIInlineSelect, params: Craft::UIKit::UILayoutParams )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIInlineSelect_Delete( DaoValue *self )
{
	Craft::UIKit::UIInlineSelect *obj = (Craft::UIKit::UIInlineSelect*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIInlineSelect_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIInlineSelect *self = (DaoCxx_Craft_UIKit_UIInlineSelect*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIInlineSelect_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIInlineSelect*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIInlineSelect*)data);
}

static DaoTypeCore Craft_UIKit_UIInlineSelect_Core = 
{
  "Craft::UIKit::UIInlineSelect",
  sizeof(Craft::UIKit::UIInlineSelect),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIInlineSelect_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIInlineSelect_Nums,
  dao_Craft_UIKit_UIInlineSelect_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIInlineSelect_Delete,
  Dao_Craft_UIKit_UIInlineSelect_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIInlineSelect_Core = & Craft_UIKit_UIInlineSelect_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIInlineSelect_UIInlineSelect_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIInlineSelect *_self = new DaoCxx_Craft_UIKit_UIInlineSelect( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIInlineSelect_SetLimits( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIInlineSelect* self = (Craft::UIKit::UIInlineSelect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIInlineSelect_Core );
  double minimum = (double) DaoValue_TryGetFloat( _p[1] );
  double maximum = (double) DaoValue_TryGetFloat( _p[2] );

  self->SetLimits( minimum, maximum );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIInlineSelect_SetEditFieldLayoutParams( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIInlineSelect* self = (Craft::UIKit::UIInlineSelect*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIInlineSelect_Core );
  Craft::UIKit::UILayoutParams* params = (Craft::UIKit::UILayoutParams*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UILayoutParams_Core );

  self->SetEditFieldLayoutParams( params );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UILayout_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UILayout_UILayout_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayout_SetSpacing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayout_SetAxis( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayout_SetLayoutSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayout_SetLayoutPosition( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayout_SetLayoutDistribution( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UILayout_SetLayoutDistributionPosition( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UILayout_Meths[] = 
{
  { dao_Craft_UIKit_UILayout_UILayout_dao_2, "UILayout( axis: int =UI_AXIS_X, createWidget: bool =true )=>Craft::UIKit::UILayout" },
  { dao_Craft_UIKit_UILayout_SetSpacing, "SetSpacing( self: Craft::UIKit::UILayout, spacing: int )" },
  { dao_Craft_UIKit_UILayout_SetAxis, "SetAxis( self: Craft::UIKit::UILayout, axis: int )" },
  { dao_Craft_UIKit_UILayout_SetLayoutSize, "SetLayoutSize( self: Craft::UIKit::UILayout, size: int )" },
  { dao_Craft_UIKit_UILayout_SetLayoutPosition, "SetLayoutPosition( self: Craft::UIKit::UILayout, position: int )" },
  { dao_Craft_UIKit_UILayout_SetLayoutDistribution, "SetLayoutDistribution( self: Craft::UIKit::UILayout, distribution: int )" },
  { dao_Craft_UIKit_UILayout_SetLayoutDistributionPosition, "SetLayoutDistributionPosition( self: Craft::UIKit::UILayout, distribution_pos: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UILayout_Delete( DaoValue *self )
{
	Craft::UIKit::UILayout *obj = (Craft::UIKit::UILayout*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UILayout_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UILayout *self = (DaoCxx_Craft_UIKit_UILayout*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UILayout_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UILayout*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UILayout*)data);
}

static DaoTypeCore Craft_UIKit_UILayout_Core = 
{
  "Craft::UIKit::UILayout",
  sizeof(Craft::UIKit::UILayout),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UILayout_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UILayout_Nums,
  dao_Craft_UIKit_UILayout_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UILayout_Delete,
  Dao_Craft_UIKit_UILayout_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UILayout_Core = & Craft_UIKit_UILayout_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_UILayout_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  Craft::UIKit::UI_AXIS axis = (Craft::UIKit::UI_AXIS) DaoValue_TryGetInteger( _p[0] );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[1] );

  DaoCxx_Craft_UIKit_UILayout *_self = new DaoCxx_Craft_UIKit_UILayout( context, axis, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_SetSpacing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayout* self = (Craft::UIKit::UILayout*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayout_Core );
  int spacing = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetSpacing( spacing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_SetAxis( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayout* self = (Craft::UIKit::UILayout*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayout_Core );
  Craft::UIKit::UI_AXIS axis = (Craft::UIKit::UI_AXIS) DaoValue_TryGetInteger( _p[1] );

  self->SetAxis( axis );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_SetLayoutSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayout* self = (Craft::UIKit::UILayout*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayout_Core );
  Craft::UIKit::UI_LAYOUT_SIZE size = (Craft::UIKit::UI_LAYOUT_SIZE) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutSize( size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_SetLayoutPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayout* self = (Craft::UIKit::UILayout*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayout_Core );
  Craft::UIKit::UI_LAYOUT_POSITION position = (Craft::UIKit::UI_LAYOUT_POSITION) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutPosition( position );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_SetLayoutDistribution( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayout* self = (Craft::UIKit::UILayout*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayout_Core );
  Craft::UIKit::UI_LAYOUT_DISTRIBUTION distribution = (Craft::UIKit::UI_LAYOUT_DISTRIBUTION) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutDistribution( distribution );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UILayout_SetLayoutDistributionPosition( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UILayout* self = (Craft::UIKit::UILayout*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UILayout_Core );
  Craft::UIKit::UI_LAYOUT_DISTRIBUTION_POSITION distribution_pos = (Craft::UIKit::UI_LAYOUT_DISTRIBUTION_POSITION) DaoValue_TryGetInteger( _p[1] );

  self->SetLayoutDistributionPosition( distribution_pos );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIListView_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIListView_UIListView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_AddRootItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_AddChildItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SetItemText( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SetItemTextSkin( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SetItemIcon( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_DeleteItemByID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_ScrollToSelectedItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SetExpanded( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_GetExpanded( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_GetExpandable( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_GetMultiSelect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SetMultiSelect( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_DeleteAllItems( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SelectItemByID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_GetHoverItemID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_GetSelectedItemID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_GetRootList( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_UpdateItemVisibility( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIListView_SelectAllItems( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIListView_Meths[] = 
{
  { dao_Craft_UIKit_UIListView_UIListView_dao_2, "UIListView( createWidget: bool =true )=>Craft::UIKit::UIListView" },
  { dao_Craft_UIKit_UIListView_AddRootItem, "AddRootItem( self: Craft::UIKit::UIListView, text: string, icon: string, id: string )=>int" },
  { dao_Craft_UIKit_UIListView_AddChildItem, "AddChildItem( self: Craft::UIKit::UIListView, parentItemID: int, text: string, icon: string, id: string )=>int" },
  { dao_Craft_UIKit_UIListView_SetItemText, "SetItemText( self: Craft::UIKit::UIListView, id: string, text: string )" },
  { dao_Craft_UIKit_UIListView_SetItemTextSkin, "SetItemTextSkin( self: Craft::UIKit::UIListView, id: string, skin: string )" },
  { dao_Craft_UIKit_UIListView_SetItemIcon, "SetItemIcon( self: Craft::UIKit::UIListView, id: string, icon: string )" },
  { dao_Craft_UIKit_UIListView_DeleteItemByID, "DeleteItemByID( self: Craft::UIKit::UIListView, id: string )" },
  { dao_Craft_UIKit_UIListView_ScrollToSelectedItem, "ScrollToSelectedItem( self: Craft::UIKit::UIListView )" },
  { dao_Craft_UIKit_UIListView_SetExpanded, "SetExpanded( self: Craft::UIKit::UIListView, itemID: int, value: bool )" },
  { dao_Craft_UIKit_UIListView_GetExpanded, "GetExpanded( self: Craft::UIKit::UIListView, itemID: int )=>bool" },
  { dao_Craft_UIKit_UIListView_GetExpandable, "GetExpandable( self: Craft::UIKit::UIListView, itemID: int )=>bool" },
  { dao_Craft_UIKit_UIListView_GetMultiSelect, "GetMultiSelect( self: Craft::UIKit::UIListView )=>bool" },
  { dao_Craft_UIKit_UIListView_SetMultiSelect, "SetMultiSelect( self: Craft::UIKit::UIListView, value: bool )" },
  { dao_Craft_UIKit_UIListView_DeleteAllItems, "DeleteAllItems( self: Craft::UIKit::UIListView )" },
  { dao_Craft_UIKit_UIListView_SelectItemByID, "SelectItemByID( self: Craft::UIKit::UIListView, id: string, selected: bool =true )" },
  { dao_Craft_UIKit_UIListView_GetHoverItemID, "GetHoverItemID( self: Craft::UIKit::UIListView )=>string" },
  { dao_Craft_UIKit_UIListView_GetSelectedItemID, "GetSelectedItemID( self: Craft::UIKit::UIListView )=>string" },
  { dao_Craft_UIKit_UIListView_GetRootList, "GetRootList( self: Craft::UIKit::UIListView )=>Craft::UIKit::UISelectList" },
  { dao_Craft_UIKit_UIListView_UpdateItemVisibility, "UpdateItemVisibility( self: Craft::UIKit::UIListView )" },
  { dao_Craft_UIKit_UIListView_SelectAllItems, "SelectAllItems( self: Craft::UIKit::UIListView, select: bool =true )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIListView_Delete( DaoValue *self )
{
	Craft::UIKit::UIListView *obj = (Craft::UIKit::UIListView*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIListView_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIListView *self = (DaoCxx_Craft_UIKit_UIListView*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIListView_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIListView*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIListView*)data);
}

static DaoTypeCore Craft_UIKit_UIListView_Core = 
{
  "Craft::UIKit::UIListView",
  sizeof(Craft::UIKit::UIListView),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIListView_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIListView_Nums,
  dao_Craft_UIKit_UIListView_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIListView_Delete,
  Dao_Craft_UIKit_UIListView_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIListView_Core = & Craft_UIKit_UIListView_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_UIListView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIListView *_self = new DaoCxx_Craft_UIKit_UIListView( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_AddRootItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  DString *__str_text = DaoValue_TryGetString( _p[1] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );
  DString *__str_icon = DaoValue_TryGetString( _p[2] );
  Craft::String icon( DString_GetData( __str_icon ), DString_Size( __str_icon ) );
  DString *__str_id = DaoValue_TryGetString( _p[3] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  unsigned int _AddRootItem = self->AddRootItem( text, icon, id );
  DaoProcess_PutInteger( _proc, (dao_integer) _AddRootItem );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_AddChildItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  unsigned int parentItemID = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  DString *__str_text = DaoValue_TryGetString( _p[2] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );
  DString *__str_icon = DaoValue_TryGetString( _p[3] );
  Craft::String icon( DString_GetData( __str_icon ), DString_Size( __str_icon ) );
  DString *__str_id = DaoValue_TryGetString( _p[4] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  unsigned int _AddChildItem = self->AddChildItem( parentItemID, text, icon, id );
  DaoProcess_PutInteger( _proc, (dao_integer) _AddChildItem );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SetItemText( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  DString *__str_text = DaoValue_TryGetString( _p[2] );
  Craft::String text( DString_GetData( __str_text ), DString_Size( __str_text ) );

  self->SetItemText( id, text );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SetItemTextSkin( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  DString *__str_skin = DaoValue_TryGetString( _p[2] );
  Craft::String skin( DString_GetData( __str_skin ), DString_Size( __str_skin ) );

  self->SetItemTextSkin( id, skin );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SetItemIcon( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  DString *__str_icon = DaoValue_TryGetString( _p[2] );
  Craft::String icon( DString_GetData( __str_icon ), DString_Size( __str_icon ) );

  self->SetItemIcon( id, icon );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_DeleteItemByID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  self->DeleteItemByID( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_ScrollToSelectedItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  self->ScrollToSelectedItem(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SetExpanded( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  unsigned int itemID = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  bool value = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SetExpanded( itemID, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_GetExpanded( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  unsigned int itemID = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _GetExpanded = self->GetExpanded( itemID );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetExpanded );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_GetExpandable( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  unsigned int itemID = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  bool _GetExpandable = self->GetExpandable( itemID );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetExpandable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_GetMultiSelect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  bool _GetMultiSelect = self->GetMultiSelect(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetMultiSelect );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SetMultiSelect( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetMultiSelect( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_DeleteAllItems( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  self->DeleteAllItems(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SelectItemByID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  bool selected = (bool) DaoValue_TryGetBoolean( _p[2] );

  self->SelectItemByID( id, selected );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_GetHoverItemID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  Craft::String _GetHoverItemID = self->GetHoverItemID(  );
  DaoProcess_PutBytes( _proc, (char*) _GetHoverItemID.CString(), _GetHoverItemID.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_GetSelectedItemID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  Craft::String _GetSelectedItemID = self->GetSelectedItemID(  );
  DaoProcess_PutBytes( _proc, (char*) _GetSelectedItemID.CString(), _GetSelectedItemID.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_GetRootList( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  Craft::UIKit::UISelectList* _GetRootList = self->GetRootList(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRootList, dao_Craft_UIKit_UISelectList_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_UpdateItemVisibility( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );

  self->UpdateItemVisibility(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIListView_SelectAllItems( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIListView* self = (Craft::UIKit::UIListView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIListView_Core );
  bool select = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SelectAllItems( select );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISelectItemSource_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISelectItemSource_UISelectItemSource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItemSource_AddItem( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItemSource_RemoveItemWithId( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItemSource_RemoveItemWithStr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItemSource_GetItemCount( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItemSource_Clear( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISelectItemSource_Meths[] = 
{
  { dao_Craft_UIKit_UISelectItemSource_UISelectItemSource_dao_2, "UISelectItemSource(  )=>Craft::UIKit::UISelectItemSource" },
  { dao_Craft_UIKit_UISelectItemSource_AddItem, "AddItem( self: Craft::UIKit::UISelectItemSource, item: Craft::UIKit::UISelectItem )" },
  { dao_Craft_UIKit_UISelectItemSource_RemoveItemWithId, "RemoveItemWithId( self: Craft::UIKit::UISelectItemSource, id: string )" },
  { dao_Craft_UIKit_UISelectItemSource_RemoveItemWithStr, "RemoveItemWithStr( self: Craft::UIKit::UISelectItemSource, str: string )" },
  { dao_Craft_UIKit_UISelectItemSource_GetItemCount, "GetItemCount( self: Craft::UIKit::UISelectItemSource )=>int" },
  { dao_Craft_UIKit_UISelectItemSource_Clear, "Clear( self: Craft::UIKit::UISelectItemSource )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISelectItemSource_Delete( DaoValue *self )
{
	Craft::UIKit::UISelectItemSource *obj = (Craft::UIKit::UISelectItemSource*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISelectItemSource_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISelectItemSource *self = (DaoCxx_Craft_UIKit_UISelectItemSource*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISelectItemSource_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISelectItemSource*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UISelectItemSource*)data);
}

static DaoTypeCore Craft_UIKit_UISelectItemSource_Core = 
{
  "Craft::UIKit::UISelectItemSource",
  sizeof(Craft::UIKit::UISelectItemSource),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UISelectItemSource_Craft_Object,NULL },
  dao_Craft_UIKit_UISelectItemSource_Nums,
  dao_Craft_UIKit_UISelectItemSource_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISelectItemSource_Delete,
  Dao_Craft_UIKit_UISelectItemSource_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISelectItemSource_Core = & Craft_UIKit_UISelectItemSource_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItemSource_UISelectItemSource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UISelectItemSource *_self = new DaoCxx_Craft_UIKit_UISelectItemSource( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItemSource_AddItem( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItemSource* self = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItemSource_Core );
  Craft::UIKit::UISelectItem* item = (Craft::UIKit::UISelectItem*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UISelectItem_Core );

  self->AddItem( item );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItemSource_RemoveItemWithId( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItemSource* self = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItemSource_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  self->RemoveItemWithId( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItemSource_RemoveItemWithStr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItemSource* self = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItemSource_Core );
  DString *__str_str = DaoValue_TryGetString( _p[1] );
  Craft::String str( DString_GetData( __str_str ), DString_Size( __str_str ) );

  self->RemoveItemWithStr( str );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItemSource_GetItemCount( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItemSource* self = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItemSource_Core );

  int _GetItemCount = self->GetItemCount(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetItemCount );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItemSource_Clear( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItemSource* self = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItemSource_Core );

  self->Clear(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISelectItem_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISelectItem_UISelectItem_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItem_SetString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItem_SetID( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItem_GetStr( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItem_SetSkinImage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectItem_SetSubSource( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISelectItem_Meths[] = 
{
  { dao_Craft_UIKit_UISelectItem_UISelectItem_dao_2, "UISelectItem( str: string ='', id: string ='', skinImage: string ='' )=>Craft::UIKit::UISelectItem" },
  { dao_Craft_UIKit_UISelectItem_SetString, "SetString( self: Craft::UIKit::UISelectItem, str: string )" },
  { dao_Craft_UIKit_UISelectItem_SetID, "SetID( self: Craft::UIKit::UISelectItem, id: string )" },
  { dao_Craft_UIKit_UISelectItem_GetStr, "GetStr( self: Craft::UIKit::UISelectItem )=>string" },
  { dao_Craft_UIKit_UISelectItem_SetSkinImage, "SetSkinImage( self: Craft::UIKit::UISelectItem, skinImage: string )" },
  { dao_Craft_UIKit_UISelectItem_SetSubSource, "SetSubSource( self: Craft::UIKit::UISelectItem, subSource: Craft::UIKit::UISelectItemSource )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISelectItem_Delete( DaoValue *self )
{
	Craft::UIKit::UISelectItem *obj = (Craft::UIKit::UISelectItem*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISelectItem_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISelectItem *self = (DaoCxx_Craft_UIKit_UISelectItem*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISelectItem_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISelectItem*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UISelectItem*)data);
}

static DaoTypeCore Craft_UIKit_UISelectItem_Core = 
{
  "Craft::UIKit::UISelectItem",
  sizeof(Craft::UIKit::UISelectItem),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UISelectItem_Craft_Object,NULL },
  dao_Craft_UIKit_UISelectItem_Nums,
  dao_Craft_UIKit_UISelectItem_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISelectItem_Delete,
  Dao_Craft_UIKit_UISelectItem_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISelectItem_Core = & Craft_UIKit_UISelectItem_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItem_UISelectItem_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  DString *__str_str = DaoValue_TryGetString( _p[0] );
  Craft::String str( DString_GetData( __str_str ), DString_Size( __str_str ) );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  DString *__str_skinImage = DaoValue_TryGetString( _p[2] );
  Craft::String skinImage( DString_GetData( __str_skinImage ), DString_Size( __str_skinImage ) );

  DaoCxx_Craft_UIKit_UISelectItem *_self = new DaoCxx_Craft_UIKit_UISelectItem( context, str, id, skinImage );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItem_SetString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItem* self = (Craft::UIKit::UISelectItem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItem_Core );
  DString *__str_str = DaoValue_TryGetString( _p[1] );
  Craft::String str( DString_GetData( __str_str ), DString_Size( __str_str ) );

  self->SetString( str );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItem_SetID( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItem* self = (Craft::UIKit::UISelectItem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItem_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  self->SetID( id );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItem_GetStr( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItem* self = (Craft::UIKit::UISelectItem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItem_Core );

  const Craft::String& _GetStr = self->GetStr(  );
  DaoProcess_PutBytes( _proc, (char*) _GetStr.CString(), _GetStr.Length() );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItem_SetSkinImage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItem* self = (Craft::UIKit::UISelectItem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItem_Core );
  DString *__str_skinImage = DaoValue_TryGetString( _p[1] );
  Craft::String skinImage( DString_GetData( __str_skinImage ), DString_Size( __str_skinImage ) );

  self->SetSkinImage( skinImage );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectItem_SetSubSource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectItem* self = (Craft::UIKit::UISelectItem*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectItem_Core );
  Craft::UIKit::UISelectItemSource* subSource = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UISelectItemSource_Core );

  self->SetSubSource( subSource );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIMenuWindow_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIMenuWindow_UIMenuWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIMenuWindow_Show( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIMenuWindow_Close( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIMenuWindow_Meths[] = 
{
  { dao_Craft_UIKit_UIMenuWindow_UIMenuWindow_dao_2, "UIMenuWindow( target: Craft::UIKit::UIWidget, id: string ='' )=>Craft::UIKit::UIMenuWindow" },
  { dao_Craft_UIKit_UIMenuWindow_Show, "Show( self: Craft::UIKit::UIMenuWindow, source: Craft::UIKit::UISelectItemSource, x: int =0, y: int =0 )" },
  { dao_Craft_UIKit_UIMenuWindow_Close, "Close( self: Craft::UIKit::UIMenuWindow )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIMenuWindow_Delete( DaoValue *self )
{
	Craft::UIKit::UIMenuWindow *obj = (Craft::UIKit::UIMenuWindow*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIMenuWindow_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIMenuWindow *self = (DaoCxx_Craft_UIKit_UIMenuWindow*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIMenuWindow_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIMenuWindow*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIMenuWindow*)data);
}

static DaoTypeCore Craft_UIKit_UIMenuWindow_Core = 
{
  "Craft::UIKit::UIMenuWindow",
  sizeof(Craft::UIKit::UIMenuWindow),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIMenuWindow_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIMenuWindow_Nums,
  dao_Craft_UIKit_UIMenuWindow_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIMenuWindow_Delete,
  Dao_Craft_UIKit_UIMenuWindow_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIMenuWindow_Core = & Craft_UIKit_UIMenuWindow_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMenuWindow_UIMenuWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  Craft::UIKit::UIWidget* target = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  DaoCxx_Craft_UIKit_UIMenuWindow *_self = new DaoCxx_Craft_UIKit_UIMenuWindow( context, target, id );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMenuWindow_Show( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIMenuWindow* self = (Craft::UIKit::UIMenuWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIMenuWindow_Core );
  Craft::UIKit::UISelectItemSource* source = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UISelectItemSource_Core );
  int x = (int) DaoValue_TryGetInteger( _p[2] );
  int y = (int) DaoValue_TryGetInteger( _p[3] );

  if(_n<=2) self->Show( source );
  else if(_n<=3) self->Show( source, x );
  else self->Show( source, x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMenuWindow_Close( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIMenuWindow* self = (Craft::UIKit::UIMenuWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIMenuWindow_Core );

  self->Close(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIMenuItem_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIMenuItem_UIMenuItem_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIMenuItem_Meths[] = 
{
  { dao_Craft_UIKit_UIMenuItem_UIMenuItem_dao_2, "UIMenuItem( str: string ='', id: string ='', shortcut: string ='', skinBg: string ='' )=>Craft::UIKit::UIMenuItem" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIMenuItem_Delete( DaoValue *self )
{
	Craft::UIKit::UIMenuItem *obj = (Craft::UIKit::UIMenuItem*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIMenuItem_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIMenuItem *self = (DaoCxx_Craft_UIKit_UIMenuItem*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIMenuItem_Craft_UIKit_UISelectItem( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIMenuItem*>((Craft::UIKit::UISelectItem*)data);
	return dynamic_cast<Craft::UIKit::UISelectItem*>((Craft::UIKit::UIMenuItem*)data);
}

static DaoTypeCore Craft_UIKit_UIMenuItem_Core = 
{
  "Craft::UIKit::UIMenuItem",
  sizeof(Craft::UIKit::UIMenuItem),
  { dao_Craft_UIKit_UISelectItem_Core, NULL },
  { dao_cast_Craft_UIKit_UIMenuItem_Craft_UIKit_UISelectItem,NULL },
  dao_Craft_UIKit_UIMenuItem_Nums,
  dao_Craft_UIKit_UIMenuItem_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIMenuItem_Delete,
  Dao_Craft_UIKit_UIMenuItem_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIMenuItem_Core = & Craft_UIKit_UIMenuItem_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMenuItem_UIMenuItem_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  DString *__str_str = DaoValue_TryGetString( _p[0] );
  Craft::String str( DString_GetData( __str_str ), DString_Size( __str_str ) );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  DString *__str_shortcut = DaoValue_TryGetString( _p[2] );
  Craft::String shortcut( DString_GetData( __str_shortcut ), DString_Size( __str_shortcut ) );
  DString *__str_skinBg = DaoValue_TryGetString( _p[3] );
  Craft::String skinBg( DString_GetData( __str_skinBg ), DString_Size( __str_skinBg ) );

  DaoCxx_Craft_UIKit_UIMenuItem *_self = new DaoCxx_Craft_UIKit_UIMenuItem( context, str, id, shortcut, skinBg );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIMenuItemSource_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIMenuItemSource_UIMenuItemSource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIMenuItemSource_Meths[] = 
{
  { dao_Craft_UIKit_UIMenuItemSource_UIMenuItemSource_dao_2, "UIMenuItemSource(  )=>Craft::UIKit::UIMenuItemSource" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIMenuItemSource_Delete( DaoValue *self )
{
	Craft::UIKit::UIMenuItemSource *obj = (Craft::UIKit::UIMenuItemSource*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIMenuItemSource_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIMenuItemSource *self = (DaoCxx_Craft_UIKit_UIMenuItemSource*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIMenuItemSource_Craft_UIKit_UISelectItemSource( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIMenuItemSource*>((Craft::UIKit::UISelectItemSource*)data);
	return dynamic_cast<Craft::UIKit::UISelectItemSource*>((Craft::UIKit::UIMenuItemSource*)data);
}

static DaoTypeCore Craft_UIKit_UIMenuItemSource_Core = 
{
  "Craft::UIKit::UIMenuItemSource",
  sizeof(Craft::UIKit::UIMenuItemSource),
  { dao_Craft_UIKit_UISelectItemSource_Core, NULL },
  { dao_cast_Craft_UIKit_UIMenuItemSource_Craft_UIKit_UISelectItemSource,NULL },
  dao_Craft_UIKit_UIMenuItemSource_Nums,
  dao_Craft_UIKit_UIMenuItemSource_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIMenuItemSource_Delete,
  Dao_Craft_UIKit_UIMenuItemSource_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIMenuItemSource_Core = & Craft_UIKit_UIMenuItemSource_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMenuItemSource_UIMenuItemSource_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UIMenuItemSource *_self = new DaoCxx_Craft_UIKit_UIMenuItemSource( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIPopupWindow_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIPopupWindow_UIPopupWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPopupWindow_Show( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIPopupWindow_Close( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIPopupWindow_Meths[] = 
{
  { dao_Craft_UIKit_UIPopupWindow_UIPopupWindow_dao_2, "UIPopupWindow( createWidget: bool, target: Craft::UIKit::UIWidget, id: string ='' )=>Craft::UIKit::UIPopupWindow" },
  { dao_Craft_UIKit_UIPopupWindow_Show, "Show( self: Craft::UIKit::UIPopupWindow, x: int =0, y: int =0 )" },
  { dao_Craft_UIKit_UIPopupWindow_Close, "Close( self: Craft::UIKit::UIPopupWindow )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIPopupWindow_Delete( DaoValue *self )
{
	Craft::UIKit::UIPopupWindow *obj = (Craft::UIKit::UIPopupWindow*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIPopupWindow_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIPopupWindow *self = (DaoCxx_Craft_UIKit_UIPopupWindow*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIPopupWindow_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIPopupWindow*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIPopupWindow*)data);
}

static DaoTypeCore Craft_UIKit_UIPopupWindow_Core = 
{
  "Craft::UIKit::UIPopupWindow",
  sizeof(Craft::UIKit::UIPopupWindow),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIPopupWindow_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIPopupWindow_Nums,
  dao_Craft_UIKit_UIPopupWindow_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIPopupWindow_Delete,
  Dao_Craft_UIKit_UIPopupWindow_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIPopupWindow_Core = & Craft_UIKit_UIPopupWindow_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPopupWindow_UIPopupWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );
  Craft::UIKit::UIWidget* target = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_id = DaoValue_TryGetString( _p[2] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );

  DaoCxx_Craft_UIKit_UIPopupWindow *_self = new DaoCxx_Craft_UIKit_UIPopupWindow( context, createWidget, target, id );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPopupWindow_Show( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPopupWindow* self = (Craft::UIKit::UIPopupWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPopupWindow_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  if(_n<=1) self->Show(  );
  else if(_n<=2) self->Show( x );
  else self->Show( x, y );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIPopupWindow_Close( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIPopupWindow* self = (Craft::UIKit::UIPopupWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIPopupWindow_Core );

  self->Close(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIRenderer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIRenderer_UIRenderer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIRenderer_BeginPaint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIRenderer_EndPaint( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIRenderer_GetContext( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIRenderer_Meths[] = 
{
  { dao_Craft_UIKit_UIRenderer_UIRenderer_dao_2, "UIRenderer(  )=>Craft::UIKit::UIRenderer" },
  { dao_Craft_UIKit_UIRenderer_BeginPaint, "BeginPaint( self: Craft::UIKit::UIRenderer, render_target_w: int, render_target_h: int )" },
  { dao_Craft_UIKit_UIRenderer_EndPaint, "EndPaint( self: Craft::UIKit::UIRenderer )" },
  { dao_Craft_UIKit_UIRenderer_GetContext, "GetContext( self: Craft::UIKit::UIRenderer )=>Craft::Context" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIRenderer_Delete( DaoValue *self )
{
	delete (Craft::UIKit::UIRenderer*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_UIKit_UIRenderer_Core = 
{
  "Craft::UIKit::UIRenderer",
  sizeof(Craft::UIKit::UIRenderer),
  { NULL },
  { NULL },
  dao_Craft_UIKit_UIRenderer_Nums,
  dao_Craft_UIKit_UIRenderer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIRenderer_Delete,
  NULL
};
DaoTypeCore *dao_Craft_UIKit_UIRenderer_Core = & Craft_UIKit_UIRenderer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIRenderer_UIRenderer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  Craft::UIKit::UIRenderer *_self = new Craft::UIKit::UIRenderer( context );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_UIKit_UIRenderer_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIRenderer_BeginPaint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIRenderer* self = (Craft::UIKit::UIRenderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIRenderer_Core );
  int render_target_w = (int) DaoValue_TryGetInteger( _p[1] );
  int render_target_h = (int) DaoValue_TryGetInteger( _p[2] );

  self->BeginPaint( render_target_w, render_target_h );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIRenderer_EndPaint( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIRenderer* self = (Craft::UIKit::UIRenderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIRenderer_Core );

  self->EndPaint(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIRenderer_GetContext( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIRenderer* self = (Craft::UIKit::UIRenderer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIRenderer_Core );

  Craft::Context* _GetContext = self->GetContext(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetContext, dao_Craft_Context_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISceneView_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISceneView_UISceneView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_OnResize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_SetView( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_SetFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_SetAutoUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_QueueUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetFormat( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetAutoUpdate( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetCameraNode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetRenderTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetDepthTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_SetResizeRequired( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISceneView_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISceneView_Meths[] = 
{
  { dao_Craft_UIKit_UISceneView_UISceneView_dao_2, "UISceneView( createWidget: bool =true )=>Craft::UIKit::UISceneView" },
  { dao_Craft_UIKit_UISceneView_OnResize, "OnResize( self: Craft::UIKit::UISceneView, newSize: Craft::IntVector2 )" },
  { dao_Craft_UIKit_UISceneView_SetView, "SetView( self: Craft::UIKit::UISceneView, scene: Craft::Scene, camera: Craft::Camera|none )" },
  { dao_Craft_UIKit_UISceneView_SetFormat, "SetFormat( self: Craft::UIKit::UISceneView, format: int )" },
  { dao_Craft_UIKit_UISceneView_SetAutoUpdate, "SetAutoUpdate( self: Craft::UIKit::UISceneView, enable: bool )" },
  { dao_Craft_UIKit_UISceneView_QueueUpdate, "QueueUpdate( self: Craft::UIKit::UISceneView )" },
  { dao_Craft_UIKit_UISceneView_GetFormat, "GetFormat( self: Craft::UIKit::UISceneView )=>int" },
  { dao_Craft_UIKit_UISceneView_GetAutoUpdate, "GetAutoUpdate( self: Craft::UIKit::UISceneView )=>bool" },
  { dao_Craft_UIKit_UISceneView_GetScene, "GetScene( self: Craft::UIKit::UISceneView )=>Craft::Scene" },
  { dao_Craft_UIKit_UISceneView_GetCameraNode, "GetCameraNode( self: Craft::UIKit::UISceneView )=>Craft::Node" },
  { dao_Craft_UIKit_UISceneView_GetRenderTexture, "GetRenderTexture( self: Craft::UIKit::UISceneView )=>Craft::Texture2D" },
  { dao_Craft_UIKit_UISceneView_GetDepthTexture, "GetDepthTexture( self: Craft::UIKit::UISceneView )=>Craft::Texture2D" },
  { dao_Craft_UIKit_UISceneView_GetViewport, "GetViewport( self: Craft::UIKit::UISceneView )=>Craft::Viewport" },
  { dao_Craft_UIKit_UISceneView_SetResizeRequired, "SetResizeRequired( self: Craft::UIKit::UISceneView )" },
  { dao_Craft_UIKit_UISceneView_GetSize, "GetSize( self: Craft::UIKit::UISceneView )=>Craft::IntVector2" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISceneView_Delete( DaoValue *self )
{
	Craft::UIKit::UISceneView *obj = (Craft::UIKit::UISceneView*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISceneView_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISceneView *self = (DaoCxx_Craft_UIKit_UISceneView*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISceneView_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISceneView*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UISceneView*)data);
}

static DaoTypeCore Craft_UIKit_UISceneView_Core = 
{
  "Craft::UIKit::UISceneView",
  sizeof(Craft::UIKit::UISceneView),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UISceneView_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UISceneView_Nums,
  dao_Craft_UIKit_UISceneView_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISceneView_Delete,
  Dao_Craft_UIKit_UISceneView_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISceneView_Core = & Craft_UIKit_UISceneView_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_UISceneView_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UISceneView *_self = new DaoCxx_Craft_UIKit_UISceneView( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_OnResize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );
  Craft::IntVector2* newSize = (Craft::IntVector2*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_IntVector2_Core );

  self->OnResize( *newSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_SetView( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );
  Craft::Scene* scene = (Craft::Scene*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Scene_Core );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );

  self->SetView( scene, camera );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_SetFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );
  unsigned int format = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetFormat( format );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_SetAutoUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAutoUpdate( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_QueueUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  self->QueueUpdate(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetFormat( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  unsigned int _GetFormat = self->GetFormat(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetFormat );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetAutoUpdate( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  bool _GetAutoUpdate = self->GetAutoUpdate(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAutoUpdate );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  Craft::Scene* _GetScene = self->GetScene(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetScene, dao_Craft_Scene_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetCameraNode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  Craft::Node* _GetCameraNode = self->GetCameraNode(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetCameraNode, dao_Craft_Node_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetRenderTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  Craft::Texture2D* _GetRenderTexture = self->GetRenderTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderTexture, dao_Craft_Texture2D_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetDepthTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  Craft::Texture2D* _GetDepthTexture = self->GetDepthTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetDepthTexture, dao_Craft_Texture2D_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetViewport( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  Craft::Viewport* _GetViewport = self->GetViewport(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetViewport, dao_Craft_Viewport_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_SetResizeRequired( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  self->SetResizeRequired(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISceneView_GetSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISceneView* self = (Craft::UIKit::UISceneView*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISceneView_Core );

  const Craft::IntVector2& _GetSize = self->GetSize(  );
  DaoProcess_CopyCdataTC( _proc, (void*)&_GetSize, dao_Craft_IntVector2_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_SceneViewWidget_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_SceneViewWidget_SceneViewWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_SceneViewWidget_Meths[] = 
{
  { dao_Craft_UIKit_SceneViewWidget_SceneViewWidget_dao_2, "SceneViewWidget(  )=>Craft::UIKit::SceneViewWidget" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_SceneViewWidget_Delete( DaoValue *self )
{
	delete (Craft::UIKit::SceneViewWidget*) DaoValue_TryGetCdata( self );
	DaoCstruct_Delete( (DaoCstruct*) self );
}

static DaoTypeCore Craft_UIKit_SceneViewWidget_Core = 
{
  "Craft::UIKit::SceneViewWidget",
  sizeof(Craft::UIKit::SceneViewWidget),
  { NULL },
  { NULL },
  dao_Craft_UIKit_SceneViewWidget_Nums,
  dao_Craft_UIKit_SceneViewWidget_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_SceneViewWidget_Delete,
  NULL
};
DaoTypeCore *dao_Craft_UIKit_SceneViewWidget_Core = & Craft_UIKit_SceneViewWidget_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_SceneViewWidget_SceneViewWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{

  Craft::UIKit::SceneViewWidget *_self = new Craft::UIKit::SceneViewWidget(  );
  DaoProcess_PutCdataTC( _proc, _self, dao_Craft_UIKit_SceneViewWidget_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIScrollContainer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIScrollContainer_UIScrollContainer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_SetScrollMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_GetScrollMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_SetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_GetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_SetAdaptContentSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_GetAdaptContentSize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIScrollContainer_ScrollTo( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIScrollContainer_Meths[] = 
{
  { dao_Craft_UIKit_UIScrollContainer_UIScrollContainer_dao_2, "UIScrollContainer( createWidget: bool =true )=>Craft::UIKit::UIScrollContainer" },
  { dao_Craft_UIKit_UIScrollContainer_SetScrollMode, "SetScrollMode( self: Craft::UIKit::UIScrollContainer, mode: int )" },
  { dao_Craft_UIKit_UIScrollContainer_GetScrollMode, "GetScrollMode( self: Craft::UIKit::UIScrollContainer )=>int" },
  { dao_Craft_UIKit_UIScrollContainer_SetAdaptToContentSize, "SetAdaptToContentSize( self: Craft::UIKit::UIScrollContainer, adapt: bool )" },
  { dao_Craft_UIKit_UIScrollContainer_GetAdaptToContentSize, "GetAdaptToContentSize( self: Craft::UIKit::UIScrollContainer )=>bool" },
  { dao_Craft_UIKit_UIScrollContainer_SetAdaptContentSize, "SetAdaptContentSize( self: Craft::UIKit::UIScrollContainer, adapt: bool )" },
  { dao_Craft_UIKit_UIScrollContainer_GetAdaptContentSize, "GetAdaptContentSize( self: Craft::UIKit::UIScrollContainer )=>bool" },
  { dao_Craft_UIKit_UIScrollContainer_ScrollTo, "ScrollTo( self: Craft::UIKit::UIScrollContainer, x: int, y: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIScrollContainer_Delete( DaoValue *self )
{
	Craft::UIKit::UIScrollContainer *obj = (Craft::UIKit::UIScrollContainer*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIScrollContainer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIScrollContainer *self = (DaoCxx_Craft_UIKit_UIScrollContainer*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIScrollContainer_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIScrollContainer*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIScrollContainer*)data);
}

static DaoTypeCore Craft_UIKit_UIScrollContainer_Core = 
{
  "Craft::UIKit::UIScrollContainer",
  sizeof(Craft::UIKit::UIScrollContainer),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIScrollContainer_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIScrollContainer_Nums,
  dao_Craft_UIKit_UIScrollContainer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIScrollContainer_Delete,
  Dao_Craft_UIKit_UIScrollContainer_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIScrollContainer_Core = & Craft_UIKit_UIScrollContainer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_UIScrollContainer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIScrollContainer *_self = new DaoCxx_Craft_UIKit_UIScrollContainer( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_SetScrollMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );
  Craft::UIKit::UI_SCROLL_MODE mode = (Craft::UIKit::UI_SCROLL_MODE) DaoValue_TryGetInteger( _p[1] );

  self->SetScrollMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_GetScrollMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );

  Craft::UIKit::UI_SCROLL_MODE _GetScrollMode = self->GetScrollMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetScrollMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_SetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );
  bool adapt = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAdaptToContentSize( adapt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_GetAdaptToContentSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );

  bool _GetAdaptToContentSize = self->GetAdaptToContentSize(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAdaptToContentSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_SetAdaptContentSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );
  bool adapt = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAdaptContentSize( adapt );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_GetAdaptContentSize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );

  bool _GetAdaptContentSize = self->GetAdaptContentSize(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAdaptContentSize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIScrollContainer_ScrollTo( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIScrollContainer* self = (Craft::UIKit::UIScrollContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIScrollContainer_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );

  self->ScrollTo( x, y );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISection_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISection_UISection_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISection_Meths[] = 
{
  { dao_Craft_UIKit_UISection_UISection_dao_2, "UISection( createWidget: bool =true )=>Craft::UIKit::UISection" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISection_Delete( DaoValue *self )
{
	Craft::UIKit::UISection *obj = (Craft::UIKit::UISection*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISection_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISection *self = (DaoCxx_Craft_UIKit_UISection*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISection_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISection*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UISection*)data);
}

static DaoTypeCore Craft_UIKit_UISection_Core = 
{
  "Craft::UIKit::UISection",
  sizeof(Craft::UIKit::UISection),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UISection_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UISection_Nums,
  dao_Craft_UIKit_UISection_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISection_Delete,
  Dao_Craft_UIKit_UISection_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISection_Core = & Craft_UIKit_UISection_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISection_UISection_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UISection *_self = new DaoCxx_Craft_UIKit_UISection( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISelectDropdown_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISelectDropdown_UISelectDropdown_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UISelectDropdown_SetSource( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISelectDropdown_Meths[] = 
{
  { dao_Craft_UIKit_UISelectDropdown_UISelectDropdown_dao_2, "UISelectDropdown( createWidget: bool =true )=>Craft::UIKit::UISelectDropdown" },
  { dao_Craft_UIKit_UISelectDropdown_SetSource, "SetSource( self: Craft::UIKit::UISelectDropdown, source: Craft::UIKit::UISelectItemSource )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISelectDropdown_Delete( DaoValue *self )
{
	Craft::UIKit::UISelectDropdown *obj = (Craft::UIKit::UISelectDropdown*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISelectDropdown_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISelectDropdown *self = (DaoCxx_Craft_UIKit_UISelectDropdown*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISelectDropdown_Craft_UIKit_UIButton( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISelectDropdown*>((Craft::UIKit::UIButton*)data);
	return dynamic_cast<Craft::UIKit::UIButton*>((Craft::UIKit::UISelectDropdown*)data);
}

static DaoTypeCore Craft_UIKit_UISelectDropdown_Core = 
{
  "Craft::UIKit::UISelectDropdown",
  sizeof(Craft::UIKit::UISelectDropdown),
  { dao_Craft_UIKit_UIButton_Core, NULL },
  { dao_cast_Craft_UIKit_UISelectDropdown_Craft_UIKit_UIButton,NULL },
  dao_Craft_UIKit_UISelectDropdown_Nums,
  dao_Craft_UIKit_UISelectDropdown_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISelectDropdown_Delete,
  Dao_Craft_UIKit_UISelectDropdown_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISelectDropdown_Core = & Craft_UIKit_UISelectDropdown_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectDropdown_UISelectDropdown_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UISelectDropdown *_self = new DaoCxx_Craft_UIKit_UISelectDropdown( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISelectDropdown_SetSource( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UISelectDropdown* self = (Craft::UIKit::UISelectDropdown*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UISelectDropdown_Core );
  Craft::UIKit::UISelectItemSource* source = (Craft::UIKit::UISelectItemSource*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UISelectItemSource_Core );

  self->SetSource( source );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISeparator_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISeparator_UISeparator_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISeparator_Meths[] = 
{
  { dao_Craft_UIKit_UISeparator_UISeparator_dao_2, "UISeparator( createWidget: bool =true )=>Craft::UIKit::UISeparator" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISeparator_Delete( DaoValue *self )
{
	Craft::UIKit::UISeparator *obj = (Craft::UIKit::UISeparator*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISeparator_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISeparator *self = (DaoCxx_Craft_UIKit_UISeparator*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISeparator_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISeparator*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UISeparator*)data);
}

static DaoTypeCore Craft_UIKit_UISeparator_Core = 
{
  "Craft::UIKit::UISeparator",
  sizeof(Craft::UIKit::UISeparator),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UISeparator_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UISeparator_Nums,
  dao_Craft_UIKit_UISeparator_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISeparator_Delete,
  Dao_Craft_UIKit_UISeparator_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISeparator_Core = & Craft_UIKit_UISeparator_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISeparator_UISeparator_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UISeparator *_self = new DaoCxx_Craft_UIKit_UISeparator( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UISkinImage_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UISkinImage_UISkinImage_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UISkinImage_Meths[] = 
{
  { dao_Craft_UIKit_UISkinImage_UISkinImage_dao_2, "UISkinImage( bitmapID: string, createWidget: bool =true )=>Craft::UIKit::UISkinImage" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UISkinImage_Delete( DaoValue *self )
{
	Craft::UIKit::UISkinImage *obj = (Craft::UIKit::UISkinImage*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UISkinImage_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UISkinImage *self = (DaoCxx_Craft_UIKit_UISkinImage*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UISkinImage_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UISkinImage*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UISkinImage*)data);
}

static DaoTypeCore Craft_UIKit_UISkinImage_Core = 
{
  "Craft::UIKit::UISkinImage",
  sizeof(Craft::UIKit::UISkinImage),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UISkinImage_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UISkinImage_Nums,
  dao_Craft_UIKit_UISkinImage_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UISkinImage_Delete,
  Dao_Craft_UIKit_UISkinImage_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UISkinImage_Core = & Craft_UIKit_UISkinImage_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UISkinImage_UISkinImage_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  DString *__str_bitmapID = DaoValue_TryGetString( _p[0] );
  Craft::String bitmapID( DString_GetData( __str_bitmapID ), DString_Size( __str_bitmapID ) );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[1] );

  DaoCxx_Craft_UIKit_UISkinImage *_self = new DaoCxx_Craft_UIKit_UISkinImage( context, bitmapID, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UITabContainer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UITabContainer_UITabContainer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITabContainer_GetNumPages( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITabContainer_SetCurrentPage( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITabContainer_GetCurrentPageWidget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITabContainer_GetTabLayout( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UITabContainer_Meths[] = 
{
  { dao_Craft_UIKit_UITabContainer_UITabContainer_dao_2, "UITabContainer( createWidget: bool =true )=>Craft::UIKit::UITabContainer" },
  { dao_Craft_UIKit_UITabContainer_GetNumPages, "GetNumPages( self: Craft::UIKit::UITabContainer )=>int" },
  { dao_Craft_UIKit_UITabContainer_SetCurrentPage, "SetCurrentPage( self: Craft::UIKit::UITabContainer, page: int )" },
  { dao_Craft_UIKit_UITabContainer_GetCurrentPageWidget, "GetCurrentPageWidget( self: Craft::UIKit::UITabContainer )=>Craft::UIKit::UIWidget" },
  { dao_Craft_UIKit_UITabContainer_GetTabLayout, "GetTabLayout( self: Craft::UIKit::UITabContainer )=>Craft::UIKit::UILayout" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UITabContainer_Delete( DaoValue *self )
{
	Craft::UIKit::UITabContainer *obj = (Craft::UIKit::UITabContainer*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UITabContainer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UITabContainer *self = (DaoCxx_Craft_UIKit_UITabContainer*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UITabContainer_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UITabContainer*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UITabContainer*)data);
}

static DaoTypeCore Craft_UIKit_UITabContainer_Core = 
{
  "Craft::UIKit::UITabContainer",
  sizeof(Craft::UIKit::UITabContainer),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UITabContainer_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UITabContainer_Nums,
  dao_Craft_UIKit_UITabContainer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UITabContainer_Delete,
  Dao_Craft_UIKit_UITabContainer_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UITabContainer_Core = & Craft_UIKit_UITabContainer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITabContainer_UITabContainer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UITabContainer *_self = new DaoCxx_Craft_UIKit_UITabContainer( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITabContainer_GetNumPages( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITabContainer* self = (Craft::UIKit::UITabContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITabContainer_Core );

  int _GetNumPages = self->GetNumPages(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetNumPages );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITabContainer_SetCurrentPage( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITabContainer* self = (Craft::UIKit::UITabContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITabContainer_Core );
  int page = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetCurrentPage( page );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITabContainer_GetCurrentPageWidget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITabContainer* self = (Craft::UIKit::UITabContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITabContainer_Core );

  Craft::UIKit::UIWidget* _GetCurrentPageWidget = self->GetCurrentPageWidget(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetCurrentPageWidget, dao_Craft_UIKit_UIWidget_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITabContainer_GetTabLayout( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITabContainer* self = (Craft::UIKit::UITabContainer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITabContainer_Core );

  Craft::UIKit::UILayout* _GetTabLayout = self->GetTabLayout(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTabLayout, dao_Craft_UIKit_UILayout_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UITextField_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UITextField_UITextField_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITextField_SetTextAlign( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UITextField_Meths[] = 
{
  { dao_Craft_UIKit_UITextField_UITextField_dao_2, "UITextField( createWidget: bool =true )=>Craft::UIKit::UITextField" },
  { dao_Craft_UIKit_UITextField_SetTextAlign, "SetTextAlign( self: Craft::UIKit::UITextField, align: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UITextField_Delete( DaoValue *self )
{
	Craft::UIKit::UITextField *obj = (Craft::UIKit::UITextField*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UITextField_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UITextField *self = (DaoCxx_Craft_UIKit_UITextField*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UITextField_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UITextField*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UITextField*)data);
}

static DaoTypeCore Craft_UIKit_UITextField_Core = 
{
  "Craft::UIKit::UITextField",
  sizeof(Craft::UIKit::UITextField),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UITextField_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UITextField_Nums,
  dao_Craft_UIKit_UITextField_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UITextField_Delete,
  Dao_Craft_UIKit_UITextField_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UITextField_Core = & Craft_UIKit_UITextField_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITextField_UITextField_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UITextField *_self = new DaoCxx_Craft_UIKit_UITextField( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITextField_SetTextAlign( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITextField* self = (Craft::UIKit::UITextField*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITextField_Core );
  Craft::UIKit::UI_TEXT_ALIGN align = (Craft::UIKit::UI_TEXT_ALIGN) DaoValue_TryGetInteger( _p[1] );

  self->SetTextAlign( align );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UITextureWidget_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UITextureWidget_UITextureWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITextureWidget_SetTexture( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UITextureWidget_GetTexture( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UITextureWidget_Meths[] = 
{
  { dao_Craft_UIKit_UITextureWidget_UITextureWidget_dao_2, "UITextureWidget( createWidget: bool =true )=>Craft::UIKit::UITextureWidget" },
  { dao_Craft_UIKit_UITextureWidget_SetTexture, "SetTexture( self: Craft::UIKit::UITextureWidget, texture: Craft::Texture )" },
  { dao_Craft_UIKit_UITextureWidget_GetTexture, "GetTexture( self: Craft::UIKit::UITextureWidget )=>Craft::Texture" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UITextureWidget_Delete( DaoValue *self )
{
	Craft::UIKit::UITextureWidget *obj = (Craft::UIKit::UITextureWidget*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UITextureWidget_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UITextureWidget *self = (DaoCxx_Craft_UIKit_UITextureWidget*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UITextureWidget_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UITextureWidget*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UITextureWidget*)data);
}

static DaoTypeCore Craft_UIKit_UITextureWidget_Core = 
{
  "Craft::UIKit::UITextureWidget",
  sizeof(Craft::UIKit::UITextureWidget),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UITextureWidget_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UITextureWidget_Nums,
  dao_Craft_UIKit_UITextureWidget_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UITextureWidget_Delete,
  Dao_Craft_UIKit_UITextureWidget_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UITextureWidget_Core = & Craft_UIKit_UITextureWidget_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITextureWidget_UITextureWidget_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UITextureWidget *_self = new DaoCxx_Craft_UIKit_UITextureWidget( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITextureWidget_SetTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITextureWidget* self = (Craft::UIKit::UITextureWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITextureWidget_Core );
  Craft::Texture* texture = (Craft::Texture*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_Texture_Core );

  self->SetTexture( texture );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UITextureWidget_GetTexture( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UITextureWidget* self = (Craft::UIKit::UITextureWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UITextureWidget_Core );

  Craft::Texture* _GetTexture = self->GetTexture(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetTexture, dao_Craft_Texture_Core );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIWindow_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIWindow_UIWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWindow_GetSettings( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWindow_SetSettings( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWindow_ResizeToFitContent( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWindow_AddChild( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIWindow_Close( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIWindow_Meths[] = 
{
  { dao_Craft_UIKit_UIWindow_UIWindow_dao_2, "UIWindow( createWidget: bool =true )=>Craft::UIKit::UIWindow" },
  { dao_Craft_UIKit_UIWindow_GetSettings, "GetSettings( self: Craft::UIKit::UIWindow )=>int" },
  { dao_Craft_UIKit_UIWindow_SetSettings, "SetSettings( self: Craft::UIKit::UIWindow, settings: int )" },
  { dao_Craft_UIKit_UIWindow_ResizeToFitContent, "ResizeToFitContent( self: Craft::UIKit::UIWindow )" },
  { dao_Craft_UIKit_UIWindow_AddChild, "AddChild( self: Craft::UIKit::UIWindow, child: Craft::UIKit::UIWidget )" },
  { dao_Craft_UIKit_UIWindow_Close, "Close( self: Craft::UIKit::UIWindow )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIWindow_Delete( DaoValue *self )
{
	Craft::UIKit::UIWindow *obj = (Craft::UIKit::UIWindow*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIWindow_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIWindow *self = (DaoCxx_Craft_UIKit_UIWindow*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIWindow_Craft_UIKit_UIWidget( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIWindow*>((Craft::UIKit::UIWidget*)data);
	return dynamic_cast<Craft::UIKit::UIWidget*>((Craft::UIKit::UIWindow*)data);
}

static DaoTypeCore Craft_UIKit_UIWindow_Core = 
{
  "Craft::UIKit::UIWindow",
  sizeof(Craft::UIKit::UIWindow),
  { dao_Craft_UIKit_UIWidget_Core, NULL },
  { dao_cast_Craft_UIKit_UIWindow_Craft_UIKit_UIWidget,NULL },
  dao_Craft_UIKit_UIWindow_Nums,
  dao_Craft_UIKit_UIWindow_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIWindow_Delete,
  Dao_Craft_UIKit_UIWindow_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIWindow_Core = & Craft_UIKit_UIWindow_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWindow_UIWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[0] );

  DaoCxx_Craft_UIKit_UIWindow *_self = new DaoCxx_Craft_UIKit_UIWindow( context, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWindow_GetSettings( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWindow* self = (Craft::UIKit::UIWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWindow_Core );

  Craft::UIKit::UI_WINDOW_SETTINGS _GetSettings = self->GetSettings(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetSettings );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWindow_SetSettings( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWindow* self = (Craft::UIKit::UIWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWindow_Core );
  Craft::UIKit::UI_WINDOW_SETTINGS settings = (Craft::UIKit::UI_WINDOW_SETTINGS) DaoValue_TryGetInteger( _p[1] );

  self->SetSettings( settings );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWindow_ResizeToFitContent( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWindow* self = (Craft::UIKit::UIWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWindow_Core );

  self->ResizeToFitContent(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWindow_AddChild( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWindow* self = (Craft::UIKit::UIWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWindow_Core );
  Craft::UIKit::UIWidget* child = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_UIKit_UIWidget_Core );

  self->AddChild( child );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIWindow_Close( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWindow* self = (Craft::UIKit::UIWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWindow_Core );

  self->Close(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UIMessageWindow_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UIMessageWindow_UIMessageWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UIMessageWindow_Show( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UIMessageWindow_Meths[] = 
{
  { dao_Craft_UIKit_UIMessageWindow_UIMessageWindow_dao_2, "UIMessageWindow( target: Craft::UIKit::UIWidget, id: string, createWidget: bool =true )=>Craft::UIKit::UIMessageWindow" },
  { dao_Craft_UIKit_UIMessageWindow_Show, "Show( self: Craft::UIKit::UIMessageWindow, title: string, message: string, settings: int, dimmer: bool, width: int, height: int )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UIMessageWindow_Delete( DaoValue *self )
{
	Craft::UIKit::UIMessageWindow *obj = (Craft::UIKit::UIMessageWindow*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UIMessageWindow_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UIMessageWindow *self = (DaoCxx_Craft_UIKit_UIMessageWindow*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UIMessageWindow_Craft_UIKit_UIWindow( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UIMessageWindow*>((Craft::UIKit::UIWindow*)data);
	return dynamic_cast<Craft::UIKit::UIWindow*>((Craft::UIKit::UIMessageWindow*)data);
}

static DaoTypeCore Craft_UIKit_UIMessageWindow_Core = 
{
  "Craft::UIKit::UIMessageWindow",
  sizeof(Craft::UIKit::UIMessageWindow),
  { dao_Craft_UIKit_UIWindow_Core, NULL },
  { dao_cast_Craft_UIKit_UIMessageWindow_Craft_UIKit_UIWindow,NULL },
  dao_Craft_UIKit_UIMessageWindow_Nums,
  dao_Craft_UIKit_UIMessageWindow_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UIMessageWindow_Delete,
  Dao_Craft_UIKit_UIMessageWindow_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UIMessageWindow_Core = & Craft_UIKit_UIMessageWindow_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMessageWindow_UIMessageWindow_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );
  Craft::UIKit::UIWidget* target = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );
  DString *__str_id = DaoValue_TryGetString( _p[1] );
  Craft::String id( DString_GetData( __str_id ), DString_Size( __str_id ) );
  bool createWidget = (bool) DaoValue_TryGetBoolean( _p[2] );

  DaoCxx_Craft_UIKit_UIMessageWindow *_self = new DaoCxx_Craft_UIKit_UIMessageWindow( context, target, id, createWidget );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UIMessageWindow_Show( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIMessageWindow* self = (Craft::UIKit::UIMessageWindow*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIMessageWindow_Core );
  DString *__str_title = DaoValue_TryGetString( _p[1] );
  Craft::String title( DString_GetData( __str_title ), DString_Size( __str_title ) );
  DString *__str_message = DaoValue_TryGetString( _p[2] );
  Craft::String message( DString_GetData( __str_message ), DString_Size( __str_message ) );
  Craft::UIKit::UI_MESSAGEWINDOW_SETTINGS settings = (Craft::UIKit::UI_MESSAGEWINDOW_SETTINGS) DaoValue_TryGetInteger( _p[3] );
  bool dimmer = (bool) DaoValue_TryGetBoolean( _p[4] );
  int width = (int) DaoValue_TryGetInteger( _p[5] );
  int height = (int) DaoValue_TryGetInteger( _p[6] );

  self->Show( title, message, settings, dimmer, width, height );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_UIKit_UI_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_UIKit_UI_UI_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_SetKeyboardDisabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_SetInputDisabled( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_Render( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_Initialize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_Shutdown( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_LoadSkin( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetSkinLoaded( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_LoadDefaultPlayerSkin( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_AddFont( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_SetDefaultFont( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_DebugGetWrappedWidgetCount( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_PruneUnreachableWidgets( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetTBIDString( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_ShowDebugHud( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_ToggleDebugHud( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_ShowConsole( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_ToggleConsole( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetFocusedWidget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_RequestExit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetRenderer( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetWidgetAt( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetBlockChangedEvents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_SetBlockChangedEvents( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_GetHoveredWidget( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_UIKit_UI_DebugShowSettingsWindow( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_UIKit_UI_Meths[] = 
{
  { dao_Craft_UIKit_UI_UI_dao_2, "UI(  )=>Craft::UIKit::UI" },
  { dao_Craft_UIKit_UI_SetKeyboardDisabled, "SetKeyboardDisabled( self: Craft::UIKit::UI, disabled: bool )" },
  { dao_Craft_UIKit_UI_SetInputDisabled, "SetInputDisabled( self: Craft::UIKit::UI, disabled: bool )" },
  { dao_Craft_UIKit_UI_Render, "Render( self: Craft::UIKit::UI, resetRenderTargets: bool =true )" },
  { dao_Craft_UIKit_UI_Initialize, "Initialize( self: Craft::UIKit::UI, languageFile: string )" },
  { dao_Craft_UIKit_UI_Shutdown, "Shutdown( self: Craft::UIKit::UI )" },
  { dao_Craft_UIKit_UI_LoadSkin, "LoadSkin( self: Craft::UIKit::UI, skin: string, overrideSkin: string ='' )" },
  { dao_Craft_UIKit_UI_GetSkinLoaded, "GetSkinLoaded( self: Craft::UIKit::UI )=>bool" },
  { dao_Craft_UIKit_UI_LoadDefaultPlayerSkin, "LoadDefaultPlayerSkin( self: Craft::UIKit::UI )" },
  { dao_Craft_UIKit_UI_AddFont, "AddFont( self: Craft::UIKit::UI, fontFile: string, name: string )" },
  { dao_Craft_UIKit_UI_SetDefaultFont, "SetDefaultFont( self: Craft::UIKit::UI, name: string, size: int )" },
  { dao_Craft_UIKit_UI_DebugGetWrappedWidgetCount, "DebugGetWrappedWidgetCount( self: Craft::UIKit::UI )=>int" },
  { dao_Craft_UIKit_UI_PruneUnreachableWidgets, "PruneUnreachableWidgets( self: Craft::UIKit::UI )" },
  { dao_Craft_UIKit_UI_GetTBIDString, "GetTBIDString( self: Craft::UIKit::UI, id: int, value: string )" },
  { dao_Craft_UIKit_UI_ShowDebugHud, "ShowDebugHud( self: Craft::UIKit::UI, value: bool )" },
  { dao_Craft_UIKit_UI_ToggleDebugHud, "ToggleDebugHud( self: Craft::UIKit::UI )" },
  { dao_Craft_UIKit_UI_ShowConsole, "ShowConsole( self: Craft::UIKit::UI, value: bool )" },
  { dao_Craft_UIKit_UI_ToggleConsole, "ToggleConsole( self: Craft::UIKit::UI )" },
  { dao_Craft_UIKit_UI_GetFocusedWidget, "GetFocusedWidget( self: Craft::UIKit::UI )=>bool" },
  { dao_Craft_UIKit_UI_RequestExit, "RequestExit( self: Craft::UIKit::UI )" },
  { dao_Craft_UIKit_UI_GetRenderer, "GetRenderer( self: Craft::UIKit::UI )=>Craft::UIKit::UIRenderer" },
  { dao_Craft_UIKit_UI_GetWidgetAt, "GetWidgetAt( self: Craft::UIKit::UI, x: int, y: int, include_children: bool )=>Craft::UIKit::UIWidget" },
  { dao_Craft_UIKit_UI_GetBlockChangedEvents, "GetBlockChangedEvents( self: Craft::UIKit::UI )=>bool" },
  { dao_Craft_UIKit_UI_SetBlockChangedEvents, "SetBlockChangedEvents( self: Craft::UIKit::UI, blocked: bool =true )" },
  { dao_Craft_UIKit_UI_GetHoveredWidget, "GetHoveredWidget( self: Craft::UIKit::UI )=>Craft::UIKit::UIWidget" },
  { dao_Craft_UIKit_UI_DebugShowSettingsWindow, "DebugShowSettingsWindow( parent: Craft::UIKit::UIWidget )" },
  { NULL, NULL }
};
static void Dao_Craft_UIKit_UI_Delete( DaoValue *self )
{
	Craft::UIKit::UI *obj = (Craft::UIKit::UI*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_UIKit_UI_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_UIKit_UI *self = (DaoCxx_Craft_UIKit_UI*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_UIKit_UI_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::UIKit::UI*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::UIKit::UI*)data);
}

static DaoTypeCore Craft_UIKit_UI_Core = 
{
  "Craft::UIKit::UI",
  sizeof(Craft::UIKit::UI),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_UIKit_UI_Craft_Object,NULL },
  dao_Craft_UIKit_UI_Nums,
  dao_Craft_UIKit_UI_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_UIKit_UI_Delete,
  Dao_Craft_UIKit_UI_HandleGC
};
DaoTypeCore *dao_Craft_UIKit_UI_Core = & Craft_UIKit_UI_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_UI_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_UIKit_UI *_self = new DaoCxx_Craft_UIKit_UI( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_SetKeyboardDisabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  bool disabled = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetKeyboardDisabled( disabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_SetInputDisabled( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  bool disabled = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetInputDisabled( disabled );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_Render( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  bool resetRenderTargets = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->Render( resetRenderTargets );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_Initialize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  DString *__str_languageFile = DaoValue_TryGetString( _p[1] );
  Craft::String languageFile( DString_GetData( __str_languageFile ), DString_Size( __str_languageFile ) );

  self->Initialize( languageFile );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_Shutdown( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  self->Shutdown(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_LoadSkin( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  DString *__str_skin = DaoValue_TryGetString( _p[1] );
  Craft::String skin( DString_GetData( __str_skin ), DString_Size( __str_skin ) );
  DString *__str_overrideSkin = DaoValue_TryGetString( _p[2] );
  Craft::String overrideSkin( DString_GetData( __str_overrideSkin ), DString_Size( __str_overrideSkin ) );

  self->LoadSkin( skin, overrideSkin );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetSkinLoaded( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  bool _GetSkinLoaded = self->GetSkinLoaded(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetSkinLoaded );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_LoadDefaultPlayerSkin( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  self->LoadDefaultPlayerSkin(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_AddFont( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  DString *__str_fontFile = DaoValue_TryGetString( _p[1] );
  Craft::String fontFile( DString_GetData( __str_fontFile ), DString_Size( __str_fontFile ) );
  DString *__str_name = DaoValue_TryGetString( _p[2] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );

  self->AddFont( fontFile, name );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_SetDefaultFont( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  DString *__str_name = DaoValue_TryGetString( _p[1] );
  Craft::String name( DString_GetData( __str_name ), DString_Size( __str_name ) );
  int size = (int) DaoValue_TryGetInteger( _p[2] );

  self->SetDefaultFont( name, size );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_DebugGetWrappedWidgetCount( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  unsigned int _DebugGetWrappedWidgetCount = self->DebugGetWrappedWidgetCount(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _DebugGetWrappedWidgetCount );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_PruneUnreachableWidgets( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  self->PruneUnreachableWidgets(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetTBIDString( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  unsigned int id = (unsigned int) DaoValue_TryGetInteger( _p[1] );
  DString *__str_value = DaoValue_TryGetString( _p[2] );
  Craft::String value( DString_GetData( __str_value ), DString_Size( __str_value ) );

  self->GetTBIDString( id, value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_ShowDebugHud( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->ShowDebugHud( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_ToggleDebugHud( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  self->ToggleDebugHud(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_ShowConsole( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->ShowConsole( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_ToggleConsole( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  self->ToggleConsole(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetFocusedWidget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  bool _GetFocusedWidget = self->GetFocusedWidget(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetFocusedWidget );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_RequestExit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  self->RequestExit(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetRenderer( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  Craft::UIKit::UIRenderer* _GetRenderer = self->GetRenderer(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetRenderer, dao_Craft_UIKit_UIRenderer_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetWidgetAt( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  int x = (int) DaoValue_TryGetInteger( _p[1] );
  int y = (int) DaoValue_TryGetInteger( _p[2] );
  bool include_children = (bool) DaoValue_TryGetBoolean( _p[3] );

  Craft::UIKit::UIWidget* _GetWidgetAt = self->GetWidgetAt( x, y, include_children );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetWidgetAt, dao_Craft_UIKit_UIWidget_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetBlockChangedEvents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  bool _GetBlockChangedEvents = self->GetBlockChangedEvents(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetBlockChangedEvents );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_SetBlockChangedEvents( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );
  bool blocked = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetBlockChangedEvents( blocked );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_GetHoveredWidget( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UI* self = (Craft::UIKit::UI*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UI_Core );

  Craft::UIKit::UIWidget* _GetHoveredWidget = self->GetHoveredWidget(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetHoveredWidget, dao_Craft_UIKit_UIWidget_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_UIKit_UI_DebugShowSettingsWindow( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::UIKit::UIWidget* parent = (Craft::UIKit::UIWidget*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_UIKit_UIWidget_Core );

  Craft::UIKit::UI::DebugShowSettingsWindow( parent );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_Engine_Nums[] = 
{
  { NULL, 0, 0 }
};


extern void dao_Craft_Engine_Engine_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_Initialize( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_RunFrame( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetMinFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetMaxFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetMaxInactiveFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetTimeStepSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetPauseMinimized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetAutoExit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetNextTimeStep( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_Exit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_DumpProfiler( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_DumpResources( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_DumpMemory( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetNextTimeStep( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetMinFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetMaxFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetMaxInactiveFps( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetTimeStepSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetPauseMinimized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_GetAutoExit( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_IsInitialized( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_IsExiting( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_IsHeadless( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_SetHeadless( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_Render( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_Engine_ApplyFrameLimit( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_Engine_Meths[] = 
{
  { dao_Craft_Engine_Engine_dao_2, "Engine(  )=>Craft::Engine" },
  { dao_Craft_Engine_Initialize, "Initialize( self: Craft::Engine, parameters: Craft::VariantMap )=>bool" },
  { dao_Craft_Engine_RunFrame, "RunFrame( self: Craft::Engine )" },
  { dao_Craft_Engine_SetMinFps, "SetMinFps( self: Craft::Engine, fps: int )" },
  { dao_Craft_Engine_SetMaxFps, "SetMaxFps( self: Craft::Engine, fps: int )" },
  { dao_Craft_Engine_SetMaxInactiveFps, "SetMaxInactiveFps( self: Craft::Engine, fps: int )" },
  { dao_Craft_Engine_SetTimeStepSmoothing, "SetTimeStepSmoothing( self: Craft::Engine, frames: int )" },
  { dao_Craft_Engine_SetPauseMinimized, "SetPauseMinimized( self: Craft::Engine, enable: bool )" },
  { dao_Craft_Engine_SetAutoExit, "SetAutoExit( self: Craft::Engine, enable: bool )" },
  { dao_Craft_Engine_SetNextTimeStep, "SetNextTimeStep( self: Craft::Engine, seconds: float )" },
  { dao_Craft_Engine_Exit, "Exit( self: Craft::Engine )" },
  { dao_Craft_Engine_DumpProfiler, "DumpProfiler( self: Craft::Engine )" },
  { dao_Craft_Engine_DumpResources, "DumpResources( self: Craft::Engine, dumpFileName: bool =false )" },
  { dao_Craft_Engine_DumpMemory, "DumpMemory( self: Craft::Engine )" },
  { dao_Craft_Engine_GetNextTimeStep, "GetNextTimeStep( self: Craft::Engine )=>float" },
  { dao_Craft_Engine_GetMinFps, "GetMinFps( self: Craft::Engine )=>int" },
  { dao_Craft_Engine_GetMaxFps, "GetMaxFps( self: Craft::Engine )=>int" },
  { dao_Craft_Engine_GetMaxInactiveFps, "GetMaxInactiveFps( self: Craft::Engine )=>int" },
  { dao_Craft_Engine_GetTimeStepSmoothing, "GetTimeStepSmoothing( self: Craft::Engine )=>int" },
  { dao_Craft_Engine_GetPauseMinimized, "GetPauseMinimized( self: Craft::Engine )=>bool" },
  { dao_Craft_Engine_GetAutoExit, "GetAutoExit( self: Craft::Engine )=>bool" },
  { dao_Craft_Engine_IsInitialized, "IsInitialized( self: Craft::Engine )=>bool" },
  { dao_Craft_Engine_IsExiting, "IsExiting( self: Craft::Engine )=>bool" },
  { dao_Craft_Engine_IsHeadless, "IsHeadless( self: Craft::Engine )=>bool" },
  { dao_Craft_Engine_SetHeadless, "SetHeadless( self: Craft::Engine, value: bool )" },
  { dao_Craft_Engine_Update, "Update( self: Craft::Engine )" },
  { dao_Craft_Engine_Render, "Render( self: Craft::Engine )" },
  { dao_Craft_Engine_ApplyFrameLimit, "ApplyFrameLimit( self: Craft::Engine )" },
  { NULL, NULL }
};
static void Dao_Craft_Engine_Delete( DaoValue *self )
{
	Craft::Engine *obj = (Craft::Engine*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_Engine_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_Engine *self = (DaoCxx_Craft_Engine*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_Engine_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::Engine*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::Engine*)data);
}

static DaoTypeCore Craft_Engine_Core = 
{
  "Craft::Engine",
  sizeof(Craft::Engine),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_Engine_Craft_Object,NULL },
  dao_Craft_Engine_Nums,
  dao_Craft_Engine_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_Engine_Delete,
  Dao_Craft_Engine_HandleGC
};
DaoTypeCore *dao_Craft_Engine_Core = & Craft_Engine_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_Initialize( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  Craft::VariantMap* parameters = (Craft::VariantMap*) DaoValue_TryCastCdataTC( _p[1], dao_Craft_VariantMap_Core );

  bool _Initialize = self->Initialize( *parameters );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _Initialize );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_RunFrame( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->RunFrame(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetMinFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  int fps = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMinFps( fps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetMaxFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  int fps = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxFps( fps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetMaxInactiveFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  int fps = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetMaxInactiveFps( fps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetTimeStepSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  int frames = (int) DaoValue_TryGetInteger( _p[1] );

  self->SetTimeStepSmoothing( frames );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetPauseMinimized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetPauseMinimized( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetAutoExit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetAutoExit( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetNextTimeStep( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  float seconds = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetNextTimeStep( seconds );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_Exit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->Exit(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_DumpProfiler( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->DumpProfiler(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_DumpResources( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  bool dumpFileName = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->DumpResources( dumpFileName );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_DumpMemory( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->DumpMemory(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetNextTimeStep( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  float _GetNextTimeStep = self->GetNextTimeStep(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetNextTimeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetMinFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  int _GetMinFps = self->GetMinFps(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMinFps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetMaxFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  int _GetMaxFps = self->GetMaxFps(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxFps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetMaxInactiveFps( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  int _GetMaxInactiveFps = self->GetMaxInactiveFps(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMaxInactiveFps );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetTimeStepSmoothing( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  int _GetTimeStepSmoothing = self->GetTimeStepSmoothing(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetTimeStepSmoothing );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetPauseMinimized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  bool _GetPauseMinimized = self->GetPauseMinimized(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetPauseMinimized );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_GetAutoExit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  bool _GetAutoExit = self->GetAutoExit(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetAutoExit );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_IsInitialized( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  bool _IsInitialized = self->IsInitialized(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsInitialized );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_IsExiting( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  bool _IsExiting = self->IsExiting(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsExiting );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_IsHeadless( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  bool _IsHeadless = self->IsHeadless(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _IsHeadless );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_SetHeadless( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );
  bool value = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetHeadless( value );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->Update(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_Render( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->Render(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_Engine_ApplyFrameLimit( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Engine* self = (Craft::Engine*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Engine_Core );

  self->ApplyFrameLimit(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_DebugHud_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_DebugHud_DebugHud_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_Update( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_SetMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_SetProfilerMaxDepth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_SetProfilerInterval( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_SetUseRendererStats( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_Toggle( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_ToggleAll( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_GetMode( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_GetProfilerMaxDepth( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_GetProfilerInterval( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_GetUseRendererStats( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_SetAppStats( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_SetAppStats_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_ResetAppStats( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DebugHud_ClearAppStats( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_DebugHud_Meths[] = 
{
  { dao_Craft_DebugHud_DebugHud_dao_2, "DebugHud(  )=>Craft::DebugHud" },
  { dao_Craft_DebugHud_Update, "Update( self: Craft::DebugHud, timeStep: float )" },
  { dao_Craft_DebugHud_SetMode, "SetMode( self: Craft::DebugHud, mode: int )" },
  { dao_Craft_DebugHud_SetProfilerMaxDepth, "SetProfilerMaxDepth( self: Craft::DebugHud, depth: int )" },
  { dao_Craft_DebugHud_SetProfilerInterval, "SetProfilerInterval( self: Craft::DebugHud, interval: float )" },
  { dao_Craft_DebugHud_SetUseRendererStats, "SetUseRendererStats( self: Craft::DebugHud, enable: bool )" },
  { dao_Craft_DebugHud_Toggle, "Toggle( self: Craft::DebugHud, mode: int )" },
  { dao_Craft_DebugHud_ToggleAll, "ToggleAll( self: Craft::DebugHud )" },
  { dao_Craft_DebugHud_GetMode, "GetMode( self: Craft::DebugHud )=>int" },
  { dao_Craft_DebugHud_GetProfilerMaxDepth, "GetProfilerMaxDepth( self: Craft::DebugHud )=>int" },
  { dao_Craft_DebugHud_GetProfilerInterval, "GetProfilerInterval( self: Craft::DebugHud )=>float" },
  { dao_Craft_DebugHud_GetUseRendererStats, "GetUseRendererStats( self: Craft::DebugHud )=>bool" },
  { dao_Craft_DebugHud_SetAppStats, "SetAppStats( self: Craft::DebugHud, label: string, stats: Craft::Variant )" },
  { dao_Craft_DebugHud_SetAppStats_dao_2, "SetAppStats( self: Craft::DebugHud, label: string, stats: string )" },
  { dao_Craft_DebugHud_ResetAppStats, "ResetAppStats( self: Craft::DebugHud, label: string )=>bool" },
  { dao_Craft_DebugHud_ClearAppStats, "ClearAppStats( self: Craft::DebugHud )" },
  { NULL, NULL }
};
static void Dao_Craft_DebugHud_Delete( DaoValue *self )
{
	Craft::DebugHud *obj = (Craft::DebugHud*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_DebugHud_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_DebugHud *self = (DaoCxx_Craft_DebugHud*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_DebugHud_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::DebugHud*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::DebugHud*)data);
}

static DaoTypeCore Craft_DebugHud_Core = 
{
  "Craft::DebugHud",
  sizeof(Craft::DebugHud),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_DebugHud_Craft_Object,NULL },
  dao_Craft_DebugHud_Nums,
  dao_Craft_DebugHud_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_DebugHud_Delete,
  Dao_Craft_DebugHud_HandleGC
};
DaoTypeCore *dao_Craft_DebugHud_Core = & Craft_DebugHud_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_DebugHud_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = DaoCraft_GetContext( _proc );

  DaoCxx_Craft_DebugHud *_self = new DaoCxx_Craft_DebugHud( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_Update( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  float timeStep = (float) DaoValue_TryGetFloat( _p[1] );

  self->Update( timeStep );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_SetMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  unsigned int mode = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetMode( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_SetProfilerMaxDepth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  unsigned int depth = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->SetProfilerMaxDepth( depth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_SetProfilerInterval( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  float interval = (float) DaoValue_TryGetFloat( _p[1] );

  self->SetProfilerInterval( interval );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_SetUseRendererStats( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  bool enable = (bool) DaoValue_TryGetBoolean( _p[1] );

  self->SetUseRendererStats( enable );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_Toggle( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  unsigned int mode = (unsigned int) DaoValue_TryGetInteger( _p[1] );

  self->Toggle( mode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_ToggleAll( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );

  self->ToggleAll(  );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_GetMode( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );

  unsigned int _GetMode = self->GetMode(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetMode );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_GetProfilerMaxDepth( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );

  unsigned int _GetProfilerMaxDepth = self->GetProfilerMaxDepth(  );
  DaoProcess_PutInteger( _proc, (dao_integer) _GetProfilerMaxDepth );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_GetProfilerInterval( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );

  float _GetProfilerInterval = self->GetProfilerInterval(  );
  DaoProcess_PutFloat( _proc, (dao_float) _GetProfilerInterval );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_GetUseRendererStats( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );

  bool _GetUseRendererStats = self->GetUseRendererStats(  );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _GetUseRendererStats );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_SetAppStats( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  DString *__str_label = DaoValue_TryGetString( _p[1] );
  Craft::String label( DString_GetData( __str_label ), DString_Size( __str_label ) );
  Craft::Variant* stats = (Craft::Variant*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Variant_Core );

  self->SetAppStats( label, *stats );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_SetAppStats_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  DString *__str_label = DaoValue_TryGetString( _p[1] );
  Craft::String label( DString_GetData( __str_label ), DString_Size( __str_label ) );
  DString *__str_stats = DaoValue_TryGetString( _p[2] );
  Craft::String stats( DString_GetData( __str_stats ), DString_Size( __str_stats ) );

  self->SetAppStats( label, stats );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_ResetAppStats( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );
  DString *__str_label = DaoValue_TryGetString( _p[1] );
  Craft::String label( DString_GetData( __str_label ), DString_Size( __str_label ) );

  bool _ResetAppStats = self->ResetAppStats( label );
  DaoProcess_PutBoolean( _proc, (dao_boolean) _ResetAppStats );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DebugHud_ClearAppStats( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DebugHud* self = (Craft::DebugHud*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DebugHud_Core );

  self->ClearAppStats(  );
}
/* DaoCraftEngineMod.cpp */


static DaoNumberEntry dao_Craft_DaoPlayer_Nums[] = 
{
  { NULL, 0, 0 }
};


static void dao_Craft_DaoPlayer_DaoPlayer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoPlayer_LoadScene( DaoProcess *_proc, DaoValue *_p[], int _n );
static void dao_Craft_DaoPlayer_GetCurrentScene( DaoProcess *_proc, DaoValue *_p[], int _n );

static DaoFunctionEntry dao_Craft_DaoPlayer_Meths[] = 
{
  { dao_Craft_DaoPlayer_DaoPlayer_dao_2, "DaoPlayer( context: Craft::Context )=>Craft::DaoPlayer" },
  { dao_Craft_DaoPlayer_LoadScene, "LoadScene( self: Craft::DaoPlayer, filename: string, camera: Craft::Camera|none )=>Craft::Scene" },
  { dao_Craft_DaoPlayer_GetCurrentScene, "GetCurrentScene( self: Craft::DaoPlayer )=>Craft::Scene" },
  { NULL, NULL }
};
static void Dao_Craft_DaoPlayer_Delete( DaoValue *self )
{
	Craft::DaoPlayer *obj = (Craft::DaoPlayer*) DaoValue_TryGetCdata( self );
	if( obj != NULL ) delete obj;
	DaoCstruct_Delete( (DaoCstruct*) self );
}
static void Dao_Craft_DaoPlayer_HandleGC( DaoValue *P, DList *VS, DList *AS, DList *MS, int RM )
{
	Dao_Craft_LockHandleGC();
	DaoCxx_Craft_DaoPlayer *self = (DaoCxx_Craft_DaoPlayer*) DaoValue_TryGetCdata( P );
	if( self != NULL && ! Craft_Referenced( self ) ){
		if( self->dao_cdata ) DList_Append( VS, (void*) self->dao_cdata );
		if( RM ){
			self->dao_cdata = NULL;
		}
	}
	Dao_Craft_UnlockHandleGC();
}
void* dao_cast_Craft_DaoPlayer_Craft_Object( void *data, int down )
{
	if( down ) return static_cast<Craft::DaoPlayer*>((Craft::Object*)data);
	return dynamic_cast<Craft::Object*>((Craft::DaoPlayer*)data);
}

static DaoTypeCore Craft_DaoPlayer_Core = 
{
  "Craft::DaoPlayer",
  sizeof(Craft::DaoPlayer),
  { dao_Craft_Object_Core, NULL },
  { dao_cast_Craft_DaoPlayer_Craft_Object,NULL },
  dao_Craft_DaoPlayer_Nums,
  dao_Craft_DaoPlayer_Meths,
  DaoCstruct_CheckGetField,    DaoCstruct_DoGetField,
  DaoCstruct_CheckSetField,    DaoCstruct_DoSetField,
  DaoCstruct_CheckGetItem,     DaoCstruct_DoGetItem,
  DaoCstruct_CheckSetItem,     DaoCstruct_DoSetItem,
  DaoCstruct_CheckUnary,       DaoCstruct_DoUnary,
  DaoCstruct_CheckBinary,      DaoCstruct_DoBinary,
  DaoCstruct_CheckConversion,  DaoCstruct_DoConversion,
  DaoCstruct_CheckForEach,     DaoCstruct_DoForEach,
  DaoCstruct_Print,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  Dao_Craft_DaoPlayer_Delete,
  Dao_Craft_DaoPlayer_HandleGC
};
DaoTypeCore *dao_Craft_DaoPlayer_Core = & Craft_DaoPlayer_Core;
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoPlayer_DaoPlayer_dao_2( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::Context* context = (Craft::Context*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_Context_Core );

  DaoCxx_Craft_DaoPlayer *_self = new DaoCxx_Craft_DaoPlayer( context );
  _self->DaoInitWrapper( DaoProcess_GetVmSpace(_proc) );
  DaoProcess_PutValue( _proc, (DaoValue*) _self->dao_cdata );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoPlayer_LoadScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoPlayer* self = (Craft::DaoPlayer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoPlayer_Core );
  DString *__str_filename = DaoValue_TryGetString( _p[1] );
  Craft::String filename( DString_GetData( __str_filename ), DString_Size( __str_filename ) );
  Craft::Camera* camera = (Craft::Camera*) DaoValue_TryCastCdataTC( _p[2], dao_Craft_Camera_Core );

  Craft::Scene* dao_Craft_DaoPlayer_LoadScene = self->LoadScene( filename, camera );
  DaoProcess_WrapCdataTC( _proc, (void*) dao_Craft_DaoPlayer_LoadScene, dao_Craft_Scene_Core );
}
/* DaoCraftEngineMod.cpp */
static void dao_Craft_DaoPlayer_GetCurrentScene( DaoProcess *_proc, DaoValue *_p[], int _n )
{
  Craft::DaoPlayer* self = (Craft::DaoPlayer*) DaoValue_TryCastCdataTC( _p[0], dao_Craft_DaoPlayer_Core );

  Craft::Scene* _GetCurrentScene = self->GetCurrentScene(  );
  DaoProcess_WrapCdataTC( _proc, (void*) _GetCurrentScene, dao_Craft_Scene_Core );
}

#ifdef __cplusplus
}
#endif

